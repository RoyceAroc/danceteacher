/*! For license information please see main.2451936b.js.LICENSE.txt */
(()=>{var e={879:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var a="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e};var r=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var a=e[t];if(a&&a.Math==Math)return a}throw Error("Cannot find global object")}(this);function o(e,t){if(t)e:{var n=r;e=e.split(".");for(var o=0;o<e.length-1;o++){var s=e[o];if(!(s in n))break e;n=n[s]}(t=t(o=n[e=e[e.length-1]]))!=o&&null!=t&&a(n,e,{configurable:!0,writable:!0,value:t})}}function s(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function i(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function c(e){if(!(e instanceof Array)){e=i(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}o("Symbol",(function(e){function t(e,t){this.h=e,a(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.h};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",r=0;return function e(a){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(a||"")+"_"+r++,a)}})),o("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),o=0;o<n.length;o++){var i=r[n[o]];"function"===typeof i&&"function"!=typeof i.prototype[e]&&a(i.prototype,e,{configurable:!0,writable:!0,value:function(){return s(t(this))}})}return e}));var u="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var a=arguments[n];if(a)for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e};o("Object.assign",(function(e){return e||u}));var l,d="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)l=Object.setPrototypeOf;else{var p;e:{var h={};try{h.__proto__={a:!0},p=h.a;break e}catch(vn){}p=!1}l=p?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var f=l;function m(e,t){if(e.prototype=d(t.prototype),e.prototype.constructor=e,f)f(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var a=Object.getOwnPropertyDescriptor(t,n);a&&Object.defineProperty(e,n,a)}else e[n]=t[n];e.za=t.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function y(e){if(e.m)throw new TypeError("Generator is already running");e.m=!0}function b(e,t){e.l={ma:t,na:!0},e.h=e.s||e.v}function x(e,t,n){return e.h=n,{value:t}}function v(e){this.h=new g,this.i=e}function w(e,t,n,a){try{var r=t.call(e.h.j,n);if(!(r instanceof Object))throw new TypeError("Iterator result "+r+" is not an object");if(!r.done)return e.h.m=!1,r;var o=r.value}catch(s){return e.h.j=null,b(e.h,s),k(e)}return e.h.j=null,a.call(e.h,o),k(e)}function k(e){for(;e.h.h;)try{var t=e.i(e.h);if(t)return e.h.m=!1,{value:t.value,done:!1}}catch(n){e.h.i=void 0,b(e.h,n)}if(e.h.m=!1,e.h.l){if(t=e.h.l,e.h.l=null,t.na)throw t.ma;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function S(e){this.next=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.next,t,e.h.u):(e.h.u(t),t=k(e)),t},this.throw=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.throw,t,e.h.u):(b(e.h,t),t=k(e)),t},this.return=function(t){return function(e,t){y(e.h);var n=e.h.j;return n?w(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.h.return):(e.h.return(t),k(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function C(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(a,r){!function e(o){o.done?a(o.value):Promise.resolve(o.value).then(t,n).then(e,r)}(e.next())}))}(new S(new v(e)))}function I(e){return e||Array.prototype.fill}g.prototype.u=function(e){this.i=e},g.prototype.return=function(e){this.l={return:e},this.h=this.v},o("Promise",(function(e){function t(e){this.i=0,this.j=void 0,this.h=[],this.u=!1;var t=this.l();try{e(t.resolve,t.reject)}catch(n){t.reject(n)}}function n(){this.h=null}function a(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.i=function(e){if(null==this.h){this.h=[];var t=this;this.j((function(){t.m()}))}this.h.push(e)};var o=r.setTimeout;n.prototype.j=function(e){o(e,0)},n.prototype.m=function(){for(;this.h&&this.h.length;){var e=this.h;this.h=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(a){this.l(a)}}}this.h=null},n.prototype.l=function(e){this.j((function(){throw e}))},t.prototype.l=function(){function e(e){return function(a){n||(n=!0,e.call(t,a))}}var t=this,n=!1;return{resolve:e(this.I),reject:e(this.m)}},t.prototype.I=function(e){if(e===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.L(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.F(e):this.s(e)}},t.prototype.F=function(e){var t=void 0;try{t=e.then}catch(n){return void this.m(n)}"function"==typeof t?this.M(t,e):this.s(e)},t.prototype.m=function(e){this.v(2,e)},t.prototype.s=function(e){this.v(1,e)},t.prototype.v=function(e,t){if(0!=this.i)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.i);this.i=e,this.j=t,2===this.i&&this.K(),this.H()},t.prototype.K=function(){var e=this;o((function(){if(e.D()){var t=r.console;"undefined"!==typeof t&&t.error(e.j)}}),1)},t.prototype.D=function(){if(this.u)return!1;var e=r.CustomEvent,t=r.Event,n=r.dispatchEvent;return"undefined"===typeof n||("function"===typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"===typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=r.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.j,n(e))},t.prototype.H=function(){if(null!=this.h){for(var e=0;e<this.h.length;++e)s.i(this.h[e]);this.h=null}};var s=new n;return t.prototype.L=function(e){var t=this.l();e.T(t.resolve,t.reject)},t.prototype.M=function(e,t){var n=this.l();try{e.call(t,n.resolve,n.reject)}catch(a){n.reject(a)}},t.prototype.then=function(e,n){function a(e,t){return"function"==typeof e?function(t){try{r(e(t))}catch(n){o(n)}}:t}var r,o,s=new t((function(e,t){r=e,o=t}));return this.T(a(e,r),a(n,o)),s},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.T=function(e,t){function n(){switch(a.i){case 1:e(a.j);break;case 2:t(a.j);break;default:throw Error("Unexpected state: "+a.i)}}var a=this;null==this.h?s.i(n):this.h.push(n),this.u=!0},t.resolve=a,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var r=i(e),o=r.next();!o.done;o=r.next())a(o.value).T(t,n)}))},t.all=function(e){var n=i(e),r=n.next();return r.done?a([]):new t((function(e,t){function o(t){return function(n){s[t]=n,0==--i&&e(s)}}var s=[],i=0;do{s.push(void 0),i++,a(r.value).T(o(s.length-1),t),r=n.next()}while(!r.done)}))},t})),o("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,a=!1,r={next:function(){if(!a&&n<e.length){var r=n++;return{value:t(r,e[r]),done:!1}}return a=!0,{done:!0,value:void 0}}};return r[Symbol.iterator]=function(){return r},r}(this,(function(e){return e}))}})),o("Array.prototype.fill",(function(e){return e||function(e,t,n){var a=this.length||0;for(0>t&&(t=Math.max(0,a+t)),(null==n||n>a)&&(n=a),0>(n=Number(n))&&(n=Math.max(0,a+n)),t=Number(t||0);t<n;t++)this[t]=e;return this}})),o("Int8Array.prototype.fill",I),o("Uint8Array.prototype.fill",I),o("Uint8ClampedArray.prototype.fill",I),o("Int16Array.prototype.fill",I),o("Uint16Array.prototype.fill",I),o("Int32Array.prototype.fill",I),o("Uint32Array.prototype.fill",I),o("Float32Array.prototype.fill",I),o("Float64Array.prototype.fill",I),o("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}})),o("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var a=n.length;for(0>(t=t||0)&&(t=Math.max(t+a,0));t<a;t++){var r=n[t];if(r===e||Object.is(r,e))return!0}return!1}})),o("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}}));var N=this||self;function _(e,t){e=e.split(".");var n,a=N;e[0]in a||"undefined"==typeof a.execScript||a.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?a=a[n]&&a[n]!==Object.prototype[n]?a[n]:a[n]={}:a[n]=t}function T(e){var t;return(t=N.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}var E=Array.prototype.map?function(e,t){return Array.prototype.map.call(e,t,void 0)}:function(e,t){for(var n=e.length,a=Array(n),r="string"===typeof e?e.split(""):e,o=0;o<n;o++)o in r&&(a[o]=t.call(void 0,r[o],o,e));return a},R={},A=null;function O(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var a=new Uint8Array(n),r=0;return function(e,t){function n(t){for(;a<e.length;){var n=e.charAt(a++),r=A[n];if(null!=r)return r;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}F();for(var a=0;;){var r=n(-1),o=n(0),s=n(64),i=n(64);if(64===i&&-1===r)break;t(r<<2|o>>4),64!=s&&(t(o<<4&240|s>>2),64!=i&&t(s<<6&192|i))}}(e,(function(e){a[r++]=e})),r!==n?a.subarray(0,r):a}function F(){if(!A){A={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var a=e.concat(t[n].split(""));R[n]=a;for(var r=0;r<a.length;r++){var o=a[r];void 0===A[o]&&(A[o]=r)}}}}var D="undefined"!==typeof Uint8Array,M=!(T("Trident")||T("MSIE"))&&"function"===typeof N.btoa;function P(e){if(!M){var t;void 0===t&&(t=0),F(),t=R[t];for(var n=Array(Math.floor(e.length/3)),a=t[64]||"",r=0,o=0;r<e.length-2;r+=3){var s=e[r],i=e[r+1],c=e[r+2],u=t[s>>2];s=t[(3&s)<<4|i>>4],i=t[(15&i)<<2|c>>6],c=t[63&c],n[o++]=u+s+i+c}switch(u=0,c=a,e.length-r){case 2:c=t[(15&(u=e[r+1]))<<2]||a;case 1:e=e[r],n[o]=t[e>>2]+t[(3&e)<<4|u>>4]+c+a}return n.join("")}for(t="";10240<e.length;)t+=String.fromCharCode.apply(null,e.subarray(0,10240)),e=e.subarray(10240);return t+=String.fromCharCode.apply(null,e),btoa(t)}var L,z=RegExp("[-_.]","g");function B(e){switch(e){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function W(e){if(!M)return O(e);z.test(e)&&(e=e.replace(z,B)),e=atob(e);for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function U(){return L||(L=new Uint8Array(0))}var V={},G="function"===typeof Uint8Array.prototype.slice,H=0,j=0;function K(e){var t=0>e,n=(e=Math.abs(e))>>>0;e=Math.floor((e-n)/4294967296),t&&(t=(n=i(Y(n,e))).next().value,e=n.next().value,n=t),H=n>>>0,j=e>>>0}var q,X="function"===typeof BigInt;function Y(e,t){return t=~t,e?e=1+~e:t+=1,[e,t]}function Q(e,t){this.i=e>>>0,this.h=t>>>0}function Z(e){if(!e)return q||(q=new Q(0,0));if(!/^-?\d+$/.test(e))return null;if(16>e.length)K(Number(e));else if(X)e=BigInt(e),H=Number(e&BigInt(4294967295))>>>0,j=Number(e>>BigInt(32)&BigInt(4294967295));else{var t=+("-"===e[0]);j=H=0;for(var n=e.length,a=t,r=(n-t)%6+t;r<=n;a=r,r+=6)a=Number(e.slice(a,r)),j*=1e6,4294967296<=(H=1e6*H+a)&&(j+=H/4294967296|0,H%=4294967296);t&&(e=(t=i(Y(H,j))).next().value,t=t.next().value,H=e,j=t)}return new Q(H,j)}function $(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function J(){return Error("Failed to read varint, encoding is invalid.")}function ee(e,t){return Error("Tried to read past the end of the data "+t+" > "+e)}function te(){throw Error("Invalid UTF8")}function ne(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var ae,re,oe,se=void 0,ie="undefined"!==typeof TextDecoder,ce="undefined"!==typeof TextEncoder;function ue(e){if(e!==V)throw Error("illegal external caller")}function le(e,t){if(ue(t),this.V=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}function de(){return oe||(oe=new le(null,V))}function pe(e){ue(V);var t=e.V;return null==(t=null==t||D&&null!=t&&t instanceof Uint8Array?t:"string"===typeof t?W(t):null)?t:e.V=t}function he(e,t){this.i=null,this.m=!1,this.h=this.j=this.l=0,fe(this,e,t)}function fe(e,t,n){n=void 0===n?{}:n,e.S=void 0!==n.S&&n.S,t&&(t=function(e){if("string"===typeof e)return{buffer:W(e),C:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),C:!1};if(e.constructor===Uint8Array)return{buffer:e,C:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),C:!1};if(e.constructor===le)return{buffer:pe(e)||U(),C:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}(t),e.i=t.buffer,e.m=t.C,e.l=0,e.j=e.i.length,e.h=e.l)}function me(e,t){if(e.h=t,t>e.j)throw ee(e.j,t)}function ge(e){var t=e.i,n=e.h,a=t[n++],r=127&a;if(128&a&&(r|=(127&(a=t[n++]))<<7,128&a&&(r|=(127&(a=t[n++]))<<14,128&a&&(r|=(127&(a=t[n++]))<<21,128&a&&(r|=(a=t[n++])<<28,128&a&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++])))))throw J();return me(e,n),r}function ye(e,t){if(0>t)throw Error("Tried to read a negative byte length: "+t);var n=e.h,a=n+t;if(a>e.j)throw ee(t,e.j-n);return e.h=a,n}he.prototype.reset=function(){this.h=this.l};var be=[];function xe(){this.h=[]}function ve(e,t,n){for(;0<n||127<t;)e.h.push(127&t|128),t=(t>>>7|n<<25)>>>0,n>>>=7;e.h.push(t)}function we(e,t){for(;127<t;)e.h.push(127&t|128),t>>>=7;e.h.push(t)}function ke(e,t){if(be.length){var n=be.pop();fe(n,e,t),e=n}else e=new he(e,t);this.h=e,this.j=this.h.h,this.i=this.l=-1,this.setOptions(t)}function Se(e){var t=e.h;if(t.h==t.j)return!1;e.j=e.h.h;var n=ge(e.h)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw $(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.l=t,e.i=n,!0}function Ce(e){switch(e.i){case 0:if(0!=e.i)Ce(e);else e:{for(var t=(e=e.h).h,n=t+10,a=e.i;t<n;)if(0===(128&a[t++])){me(e,t);break e}throw J()}break;case 1:me(e=e.h,e.h+8);break;case 2:2!=e.i?Ce(e):(t=ge(e.h)>>>0,me(e=e.h,e.h+t));break;case 5:me(e=e.h,e.h+4);break;case 3:for(t=e.l;;){if(!Se(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.i){if(e.l!=t)throw Error("Unmatched end-group tag");break}Ce(e)}break;default:throw $(e.i,e.j)}}xe.prototype.length=function(){return this.h.length},xe.prototype.end=function(){var e=this.h;return this.h=[],e},ke.prototype.setOptions=function(e){e=void 0===e?{}:e,this.ca=void 0!==e.ca&&e.ca},ke.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};var Ie=[];function Ne(){this.j=[],this.i=0,this.h=new xe}function _e(e,t){0!==t.length&&(e.j.push(t),e.i+=t.length)}var Te="function"===typeof Symbol&&"symbol"===typeof Symbol()?Symbol():void 0;function Ee(e,t){return Te?e[Te]|=t:void 0!==e.A?e.A|=t:(Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}}),t)}function Re(e,t){Te?e[Te]&&(e[Te]&=~t):void 0!==e.A&&(e.A&=~t)}function Ae(e){var t;return null==(t=Te?e[Te]:e.A)?0:t}function Oe(e,t){Te?e[Te]=t:void 0!==e.A?e.A=t:Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}})}function Fe(e){return Ee(e,1),e}function De(e,t){Oe(t,-51&e)}function Me(e,t){Oe(t,-41&e|18)}var Pe={};function Le(e){return null!==e&&"object"===typeof e&&!Array.isArray(e)&&e.constructor===Object}var ze,Be,We=[];function Ue(e){if(2&Ae(e.o))throw Error("Cannot mutate an immutable Message")}function Ve(e){var t=e.length;(t=t?e[t-1]:void 0)&&Le(t)?t.g=1:(t={},e.push((t.g=1,t)))}function Ge(e){var t=e.i+e.G;return e.B||(e.B=e.o[t]={})}function He(e,t){return-1===t?null:t>=e.i?e.B?e.B[t]:void 0:e.o[t+e.G]}function je(e,t,n,a){Ue(e),Ke(e,t,n,a)}function Ke(e,t,n,a){e.j&&(e.j=void 0),t>=e.i||a?Ge(e)[t]=n:(e.o[t+e.G]=n,(e=e.B)&&t in e&&delete e[t])}function qe(e,t,n,a){var r=He(e,t);Array.isArray(r)||(r=ze);var o=Ae(r);if(1&o||Fe(r),a)2&o||Ee(r,2),1&n||Object.freeze(r);else{a=!(2&n);var s=2&o;1&n||!s?a&&16&o&&!s&&Re(r,16):Ke(e,t,r=Fe(Array.prototype.slice.call(r)))}return r}function Xe(e,t){var n=He(e,t),a=null==n?n:"number"===typeof n||"NaN"===n||"Infinity"===n||"-Infinity"===n?Number(n):void 0;return null!=a&&a!==n&&Ke(e,t,a),a}function Ye(e,t,n,a,r){e.h||(e.h={});var o=e.h[n],s=qe(e,n,3,r);if(!o){var i=s;o=[];var c=!!(16&Ae(e.o));s=!!(2&Ae(i));var u=i;!r&&s&&(i=Array.prototype.slice.call(i));for(var l=s,d=0;d<i.length;d++){var p=i[d],h=t,f=!1;if(f=void 0!==f&&f,void 0!==(p=Array.isArray(p)?new h(p):f?new h:void 0)){var m=f=Ae(h=p.o);s&&(m|=2),c&&(m|=16),m!=f&&Oe(h,m),h=m,l=l||!!(2&h),o.push(p)}}return e.h[n]=o,t=33|(c=Ae(i)),c!=(t=l?-9&t:8|t)&&(l=i,Object.isFrozen(l)&&(l=Array.prototype.slice.call(l)),Oe(l,t),i=l),u!==i&&Ke(e,n,i),(r||a&&s)&&Ee(o,2),a&&Object.freeze(o),o}return r||(r=Object.isFrozen(o),a&&!r?Object.freeze(o):!a&&r&&(o=Array.prototype.slice.call(o),e.h[n]=o)),o}function Qe(e,t,n){var a=!!(2&Ae(e.o));if(t=Ye(e,t,n,a,a),e=qe(e,n,3,a),!(a||8&Ae(e))){for(a=0;a<t.length;a++){if(2&Ae((n=t[a]).o)){var r=ct(n,!1);r.j=n}else r=n;n!==r&&(t[a]=r,e[a]=r.o)}Ee(e,8)}return t}function Ze(e,t,n){if(null!=n&&"number"!==typeof n)throw Error("Value of float/double field must be a number|null|undefined, found "+typeof n+": "+n);je(e,t,n)}function $e(e,t,n,a,r){Ue(e);var o=Ye(e,n,t,!1,!1);return n=null!=a?a:new n,e=qe(e,t,2,!1),void 0!=r?(o.splice(r,0,n),e.splice(r,0,n.o)):(o.push(n),e.push(n.o)),n.C()&&Re(e,8),n}function Je(e,t){return null==e?t:e}function et(e,t,n){return n=void 0===n?0:n,Je(Xe(e,t),n)}function tt(e,t,n,a){if(null!=e){if(Array.isArray(e))e=nt(e,t,n,void 0!==a);else if(Le(e)){var r,o={};for(r in e)o[r]=tt(e[r],t,n,a);e=o}else e=t(e,a);return e}}function nt(e,t,n,a){var r=Ae(e);a=a?!!(16&r):void 0,e=Array.prototype.slice.call(e);for(var o=0;o<e.length;o++)e[o]=tt(e[o],t,n,a);return n(r,e),e}function at(e){return e.ja===Pe?e.toJSON():function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e)if(Array.isArray(e)){if(0!==(128&Ae(e)))return Ve(e=Array.prototype.slice.call(e)),e}else{if(D&&null!=e&&e instanceof Uint8Array)return P(e);if(e instanceof le){var t=e.V;return null==t?"":"string"===typeof t?t:e.V=P(t)}}}return e}(e)}function rt(e,t){128&e&&Ve(t)}function ot(e,t,n){if(n=void 0===n?Me:n,null!=e){if(D&&e instanceof Uint8Array)return e.length?new le(new Uint8Array(e),V):de();if(Array.isArray(e)){var a=Ae(e);return 2&a?e:!t||32&a||!(16&a||0===a)?(4&(t=Ae(e=nt(e,ot,4&a?Me:n,!0)))&&2&t&&Object.freeze(e),e):(Oe(e,2|a),e)}return e.ja===Pe?it(e):e}}function st(e,t,n,a,r,o,s){if(e=e.h&&e.h[n]){if(2&(a=Ae(e))?a=e:(Me(a,o=E(e,it)),Object.freeze(o),a=o),Ue(t),s=null==a?ze:Fe([]),null!=a){for(o=!!a.length,e=0;e<a.length;e++){var i=a[e];o=o&&!(2&Ae(i.o)),s[e]=i.o}o=1|(o?8:0),((e=Ae(s))&o)!==o&&(Object.isFrozen(s)&&(s=Array.prototype.slice.call(s)),Oe(s,e|o)),t.h||(t.h={}),t.h[n]=a}else t.h&&(t.h[n]=void 0);Ke(t,n,s,r)}else je(t,n,ot(a,o,s),r)}function it(e){return 2&Ae(e.o)||Ee((e=ct(e,!0)).o,2),e}function ct(e,t){var n=e.o,a=[];Ee(a,16);var r=e.constructor.h;if(r&&a.push(r),r=e.B){a.length=n.length,a.fill(void 0,a.length,n.length);var o={};a[a.length-1]=o}0!==(128&Ae(n))&&Ve(a),t=t||e.C()?Me:De,o=e.constructor,Be=a,a=new o(a),Be=void 0,e.R&&(a.R=e.R.slice()),o=!!(16&Ae(n));for(var s=r?n.length-1:n.length,i=0;i<s;i++)st(e,a,i-e.G,n[i],!1,o,t);if(r)for(var c in r)st(e,a,+c,r[c],!0,o,t);return a}function ut(e,t,n){null==e&&(e=Be),Be=void 0;var a,r=this.constructor.i||0,o=0<r,s=this.constructor.h,i=!1;if(null==e){var c=48,u=!0;o&&(r=0,c|=128),Oe(e=s?[s]:[],c)}else{if(!Array.isArray(e))throw Error();if(s&&s!==e[0])throw Error();var l=c=Ee(e,0);if((u=0!==(16&l))&&((i=0!==(32&l))||(l|=32)),o){if(128&l)r=0;else if(0<e.length){var d=e[e.length-1];if(Le(d)&&"g"in d){r=0,l|=128,delete d.g;var p,h=!0;for(p in d){h=!1;break}h&&e.pop()}}}else if(128&l)throw Error();c!==l&&Oe(e,l)}if(this.G=(s?0:-1)-r,this.h=void 0,this.o=e,r=(s=this.o.length)-1,s&&Le(s=this.o[r])?(this.B=s,this.i=r-this.G):void 0!==t&&-1<t?(this.i=Math.max(t,r+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE,!o&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(n)for(t=u&&!i&&!0,o=this.i,u=0;u<n.length;u++)(i=n[u])<o?(r=e[i+=this.G])?lt(r,t):e[i]=ze:(a||(a=Ge(this)),(r=a[i])?lt(r,t):a[i]=ze)}function lt(e,t){if(Array.isArray(e)){var n=Ae(e),a=1;!t||2&n||(a|=16),(n&a)!==a&&Oe(e,n|a)}}function dt(e,t,n){if(n){var a,r={};for(a in n){var o=n[a],s=o.ra;s||(r.J=o.xa||o.oa.W,o.ia?(r.aa=xt(o.ia),s=function(e){return function(t,n,a){return e.J(t,n,a,e.aa)}}(r)):o.ka?(r.Z=vt(o.da.P,o.ka),s=function(e){return function(t,n,a){return e.J(t,n,a,e.Z)}}(r)):s=r.J,o.ra=s),s(t,e,o.da),r={J:r.J,aa:r.aa,Z:r.Z}}}!function(e,t){if(t=t.R){_e(e,e.h.end());for(var n=0;n<t.length;n++)_e(e,pe(t[n])||U())}}(t,e)}Oe(We,23),ze=Object.freeze(We),ut.prototype.toJSON=function(){return nt(this.o,at,rt)},ut.prototype.C=function(){return!!(2&Ae(this.o))},ut.prototype.ja=Pe,ut.prototype.toString=function(){return this.o.toString()};var pt=Symbol();function ht(e,t,n){return e[pt]||(e[pt]=function(e,a){return t(e,a,n)})}function ft(e){var t=e[pt];if(!t){var n=Ot(e);t=function(e,t){return Ft(e,t,n)},e[pt]=t}return t}function mt(e){var t=function(e){var t=e.ia;return t?ft(t):(t=e.wa)?ht(e.da.P,t,e.ka):void 0}(e),n=e.da,a=e.oa.U;return t?function(e,r){return a(e,r,n,t)}:function(e,t){return a(e,t,n)}}function gt(e,t){var n=e[t];return"function"==typeof n&&0===n.length&&(n=n(),e[t]=n),Array.isArray(n)&&(_t in n||wt in n||0<n.length&&"function"==typeof n[0])?n:void 0}function yt(e,t,n,a,r,o){t.P=e[0];var s=1;if(e.length>s&&"number"!==typeof e[s]){var i=e[s++];n(t,i)}for(;s<e.length;){n=e[s++];for(var c=s+1;c<e.length&&"number"!==typeof e[c];)c++;switch(i=e[s++],c-=s){case 0:a(t,n,i);break;case 1:(c=gt(e,s))?(s++,r(t,n,i,c)):a(t,n,i,e[s++]);break;case 2:r(t,n,i,c=gt(e,c=s++),e[s++]);break;case 3:o(t,n,i,e[s++],e[s++],e[s++]);break;case 4:o(t,n,i,e[s++],e[s++],e[s++],e[s++]);break;default:throw Error("unexpected number of binary field arguments: "+c)}}return t}var bt=Symbol();function xt(e){var t=e[bt];if(!t){var n=Nt(e);t=function(e,t){return Dt(e,t,n)},e[bt]=t}return t}function vt(e,t){var n=e[bt];return n||(n=function(e,n){return dt(e,n,t)},e[bt]=n),n}var wt=Symbol();function kt(e,t){e.push(t)}function St(e,t,n){e.push(t,n.W)}function Ct(e,t,n,a){var r=xt(a),o=Nt(a).P,s=n.W;e.push(t,(function(e,t,n){return s(e,t,n,o,r)}))}function It(e,t,n,a,r,o){var s=vt(a,o),i=n.W;e.push(t,(function(e,t,n){return i(e,t,n,a,s)}))}function Nt(e){var t=e[wt];return t||(t=yt(e,e[wt]=[],kt,St,Ct,It),_t in e&&wt in e&&(e.length=0),t)}var _t=Symbol();function Tt(e,t){e[0]=t}function Et(e,t,n,a){var r=n.U;e[t]=a?function(e,t,n){return r(e,t,n,a)}:r}function Rt(e,t,n,a,r){var o=n.U,s=ft(a),i=Ot(a).P;e[t]=function(e,t,n){return o(e,t,n,i,s,r)}}function At(e,t,n,a,r,o,s){var i=n.U,c=ht(a,r,o);e[t]=function(e,t,n){return i(e,t,n,a,c,s)}}function Ot(e){var t=e[_t];return t||(t=yt(e,e[_t]={},Tt,Et,Rt,At),_t in e&&wt in e&&(e.length=0),t)}function Ft(e,t,n){for(;Se(t)&&4!=t.i;){var a=t.l,r=n[a];if(!r){var o=n[0];o&&(o=o[a])&&(r=n[a]=mt(o))}if(!r||!r(t,e,a)){a=e,o=(r=t).j,Ce(r);var s=r;if(!s.ca){if(r=s.h.h-o,s.h.h=o,s=s.h,0==r)r=de();else{if(o=ye(s,r),s.S&&s.m)r=s.i.subarray(o,o+r);else{s=s.i;var i=o;r=i===(r=o+r)?U():G?s.slice(i,r):new Uint8Array(s.subarray(i,r))}r=0==r.length?de():new le(r,V)}(o=a.R)?o.push(r):a.R=[r]}}}return e}function Dt(e,t,n){for(var a=n.length,r=1==a%2,o=r?1:0;o<a;o+=2)(0,n[o+1])(t,e,n[o]);dt(e,t,r?n[0]:void 0)}function Mt(e,t){return{U:e,W:t}}var Pt=Mt((function(e,t,n){if(5!==e.i)return!1;var a=(e=e.h).i,r=e.h,o=a[r],s=a[r+1],i=a[r+2];return a=a[r+3],me(e,e.h+4),e=2*((s=(o|s<<8|i<<16|a<<24)>>>0)>>31)+1,o=s>>>23&255,s&=8388607,je(t,n,255==o?s?NaN:1/0*e:0==o?e*Math.pow(2,-149)*s:e*Math.pow(2,o-150)*(s+Math.pow(2,23))),!0}),(function(e,t,n){if(null!=(t=Xe(t,n))){we(e.h,8*n+5),e=e.h;var a=+t;0===a?0<1/a?H=j=0:(j=0,H=2147483648):isNaN(a)?(j=0,H=2147483647):34028234663852886e22<(a=(n=0>a?-2147483648:0)?-a:a)?(j=0,H=(2139095040|n)>>>0):11754943508222875e-54>a?(a=Math.round(a/Math.pow(2,-149)),j=0,H=(n|a)>>>0):(t=Math.floor(Math.log(a)/Math.LN2),a*=Math.pow(2,-t),16777216<=(a=Math.round(8388608*a))&&++t,j=0,H=(n|t+127<<23|8388607&a)>>>0),n=H,e.h.push(n>>>0&255),e.h.push(n>>>8&255),e.h.push(n>>>16&255),e.h.push(n>>>24&255)}})),Lt=Mt((function(e,t,n){if(0!==e.i)return!1;var a=e.h,r=0,o=e=0,s=a.i,i=a.h;do{var c=s[i++];r|=(127&c)<<o,o+=7}while(32>o&&128&c);for(32<o&&(e|=(127&c)>>4),o=3;32>o&&128&c;o+=7)e|=(127&(c=s[i++]))<<o;if(me(a,i),!(128>c))throw J();return a=r>>>0,(e=2147483648&(c=e>>>0))&&(c=~c>>>0,0==(a=1+~a>>>0)&&(c=c+1>>>0)),a=4294967296*c+(a>>>0),je(t,n,e?-a:a),!0}),(function(e,t,n){null!=(t=He(t,n))&&("string"===typeof t&&Z(t),null!=t&&(we(e.h,8*n),"number"===typeof t?(e=e.h,K(t),ve(e,H,j)):(n=Z(t),ve(e.h,n.i,n.h))))})),zt=Mt((function(e,t,n){return 0===e.i&&(je(t,n,ge(e.h)),!0)}),(function(e,t,n){if(null!=(t=He(t,n))&&null!=t)if(we(e.h,8*n),e=e.h,0<=(n=t))we(e,n);else{for(t=0;9>t;t++)e.h.push(127&n|128),n>>=7;e.h.push(1)}})),Bt=Mt((function(e,t,n){if(2!==e.i)return!1;var a=ge(e.h)>>>0,r=ye(e=e.h,a);if(e=e.i,ie){var o,s=e;(o=ae)||(o=ae=new TextDecoder("utf-8",{fatal:!0})),e=r+a,s=0===r&&e===s.length?s:s.subarray(r,e);try{var i=o.decode(s)}catch(d){if(void 0===se){try{o.decode(new Uint8Array([128]))}catch(p){}try{o.decode(new Uint8Array([97])),se=!0}catch(p){se=!1}}throw!se&&(ae=void 0),d}}else{a=(i=r)+a,r=[];for(var c,u,l=null;i<a;)128>(c=e[i++])?r.push(c):224>c?i>=a?te():(u=e[i++],194>c||128!==(192&u)?(i--,te()):r.push((31&c)<<6|63&u)):240>c?i>=a-1?te():128!==(192&(u=e[i++]))||224===c&&160>u||237===c&&160<=u||128!==(192&(s=e[i++]))?(i--,te()):r.push((15&c)<<12|(63&u)<<6|63&s):244>=c?i>=a-2?te():128!==(192&(u=e[i++]))||0!==u-144+(c<<28)>>30||128!==(192&(s=e[i++]))||128!==(192&(o=e[i++]))?(i--,te()):(c=(7&c)<<18|(63&u)<<12|(63&s)<<6|63&o,c-=65536,r.push(55296+(c>>10&1023),56320+(1023&c))):te(),8192<=r.length&&(l=ne(l,r),r.length=0);i=ne(l,r)}return je(t,n,i),!0}),(function(e,t,n){if(null!=(t=He(t,n))){var a=!1;if(a=void 0!==a&&a,ce){if(a&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(t))throw Error("Found an unpaired surrogate");t=(re||(re=new TextEncoder)).encode(t)}else{for(var r=0,o=new Uint8Array(3*t.length),s=0;s<t.length;s++){var i=t.charCodeAt(s);if(128>i)o[r++]=i;else{if(2048>i)o[r++]=i>>6|192;else{if(55296<=i&&57343>=i){if(56319>=i&&s<t.length){var c=t.charCodeAt(++s);if(56320<=c&&57343>=c){i=1024*(i-55296)+c-56320+65536,o[r++]=i>>18|240,o[r++]=i>>12&63|128,o[r++]=i>>6&63|128,o[r++]=63&i|128;continue}s--}if(a)throw Error("Found an unpaired surrogate");i=65533}o[r++]=i>>12|224,o[r++]=i>>6&63|128}o[r++]=63&i|128}}t=r===o.length?o:o.subarray(0,r)}we(e.h,8*n+2),we(e.h,t.length),_e(e,e.h.end()),_e(e,t)}})),Wt=Mt((function(e,t,n,a,r){if(2!==e.i)return!1;t=$e(t,n,a),n=e.h.j,a=ge(e.h)>>>0;var o=e.h.h+a,s=o-n;if(0>=s&&(e.h.j=o,r(t,e,void 0,void 0,void 0),s=o-e.h.h),s)throw Error("Message parsing ended unexpectedly. Expected to read "+a+" bytes, instead read "+(a-s)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.h.h=o,e.h.j=n,!0}),(function(e,t,n,a,r){if(null!=(t=Qe(t,a,n)))for(a=0;a<t.length;a++){var o=e;we(o.h,8*n+2);var s=o.h.end();_e(o,s),s.push(o.i),o=s,r(t[a],e),s=e;var i=o.pop();for(i=s.i+s.h.length()-i;127<i;)o.push(127&i|128),i>>>=7,s.i++;o.push(i),s.i++}}));function Ut(e){return function(t,n){e:{if(Ie.length){var a=Ie.pop();a.setOptions(n),fe(a.h,t,n),t=a}else t=new ke(t,n);try{var r=Ot(e),o=Ft(new r.P,t,r);break e}finally{(r=t.h).i=null,r.m=!1,r.l=0,r.j=0,r.h=0,r.S=!1,t.l=-1,t.i=-1,100>Ie.length&&Ie.push(t)}o=void 0}return o}}function Vt(e){return function(){var t=new Ne;Dt(this,t,Nt(e)),_e(t,t.h.end());for(var n=new Uint8Array(t.i),a=t.j,r=a.length,o=0,s=0;s<r;s++){var i=a[s];n.set(i,o),o+=i.length}return t.j=[n],n}}function Gt(e){ut.call(this,e)}m(Gt,ut);var Ht=[Gt,1,zt,2,Pt,3,Bt,4,Bt];function jt(e){ut.call(this,e,-1,Kt)}Gt.prototype.l=Vt(Ht),m(jt,ut),jt.prototype.addClassification=function(e,t){return $e(this,1,Gt,e,t),this};var Kt=[1],qt=Ut([jt,1,Wt,Ht]);function Xt(e){ut.call(this,e)}m(Xt,ut);var Yt=[Xt,1,Pt,2,Pt,3,Pt,4,Pt,5,Pt];function Qt(e){ut.call(this,e,-1,Zt)}Xt.prototype.l=Vt(Yt),m(Qt,ut);var Zt=[1],$t=Ut([Qt,1,Wt,Yt]);function Jt(e){ut.call(this,e)}m(Jt,ut);var en=[Jt,1,Pt,2,Pt,3,Pt,4,Pt,5,Pt,6,Lt],tn=Ut(en);function nn(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function an(e){return Qe(e,Gt,1).map((function(e){var t=He(e,1);return{index:null==t?0:t,qa:et(e,2),label:null!=He(e,3)?Je(He(e,3),""):void 0,displayName:null!=He(e,4)?Je(He(e,4),""):void 0}}))}function rn(e){return{x:et(e,1),y:et(e,2),z:et(e,3),visibility:null!=Xe(e,4)?et(e,4):void 0}}function on(e){return Qe($t(e),Xt,1).map(rn)}function sn(e,t){this.i=e,this.h=t,this.m=0}function cn(e,t,n){return function(e,t){var n=e.h;if(void 0===e.s){var a=nn(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),r=nn(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),o=n.createProgram();if(n.attachShader(o,a),n.attachShader(o,r),n.linkProgram(o),!n.getProgramParameter(o,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(o));a=e.s=o,n.useProgram(a),r=n.getUniformLocation(a,"sampler0"),e.l={O:n.getAttribLocation(a,"aVertex"),N:n.getAttribLocation(a,"aTex"),ya:r},e.v=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.enableVertexAttribArray(e.l.O),n.vertexAttribPointer(e.l.O,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.l.N),n.vertexAttribPointer(e.l.N,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(r,0)}a=e.l,n.useProgram(e.s),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.i.bindTexture2d(t.glName),n.enableVertexAttribArray(a.O),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.vertexAttribPointer(a.O,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(a.N),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(a.N,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(a.O),n.disableVertexAttribArray(a.N),n.bindBuffer(n.ARRAY_BUFFER,null),e.i.bindTexture2d(0)}(e,t),"function"===typeof e.h.canvas.transferToImageBitmap?Promise.resolve(e.h.canvas.transferToImageBitmap()):n?Promise.resolve(e.h.canvas):"function"===typeof createImageBitmap?createImageBitmap(e.h.canvas):(void 0===e.j&&(e.j=document.createElement("canvas")),new Promise((function(t){e.j.height=e.h.canvas.height,e.j.width=e.h.canvas.width,e.j.getContext("2d",{}).drawImage(e.h.canvas,0,0,e.h.canvas.width,e.h.canvas.height),t(e.j)})))}function un(e){this.h=e}Jt.prototype.l=Vt(en);var ln=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function dn(e,t){return t+e}function pn(e,t){window[e]=t}function hn(e){if(this.h=e,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=e&&e.locateFile||dn,"object"===typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"===typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.ha=t,e.options)for(var n=(t=i(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var a=e.options[n].default;void 0!==a&&(this.l[n]="function"===typeof a?a():a)}}function fn(e){var t,n,a,r,o,s,i,u,l,d,p;return C((function(h){switch(h.h){case 1:return e.ga?(t=void 0===e.h.files?[]:"function"===typeof e.h.files?e.h.files(e.l):e.h.files,x(h,C((function(e){switch(e.h){case 1:return e.s=2,x(e,WebAssembly.instantiate(ln),4);case 4:e.h=3,e.s=0;break;case 2:return e.s=0,e.l=null,e.return(!1);case 3:return e.return(!0)}})),2)):h.return();case 2:if(n=h.i,"object"===typeof window)return pn("createMediapipeSolutionsWasm",{locateFile:e.locateFile}),pn("createMediapipeSolutionsPackedAssets",{locateFile:e.locateFile}),s=t.filter((function(e){return void 0!==e.data})),i=t.filter((function(e){return void 0===e.data})),u=Promise.all(s.map((function(t){var n=mn(e,t.url);if(void 0!==t.path){var a=t.path;n=n.then((function(t){return e.overrideFile(a,t),Promise.resolve(t)}))}return n}))),l=Promise.all(i.map((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(e.locateFile(t.url,e.ha)):Promise.resolve()}))).then((function(){var t,n,a;return C((function(r){if(1==r.h)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,a=e,x(r,t(n),2);a.i=r.i,r.h=0}))})),d=C((function(t){return e.h.graph&&e.h.graph.url?t=x(t,mn(e,e.h.graph.url),0):(t.h=0,t=void 0),t})),x(h,Promise.all([l,u,d]),7);if("function"!==typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return a=t.filter((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n})).map((function(t){return e.locateFile(t.url,e.ha)})),importScripts.apply(null,c(a)),r=e,x(h,createMediapipeSolutionsWasm(Module),6);case 6:r.i=h.i,e.m=new OffscreenCanvas(1,1),e.i.canvas=e.m,o=e.i.GL.createContext(e.m,{antialias:!1,alpha:!1,va:"undefined"!==typeof WebGL2RenderingContext?2:1}),e.i.GL.makeContextCurrent(o),h.h=4;break;case 7:if(e.m=document.createElement("canvas"),!(p=e.m.getContext("webgl2",{}))&&!(p=e.m.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),h.return();e.K=p,e.i.canvas=e.m,e.i.createContext(e.m,!0,!0,{});case 4:e.j=new e.i.SolutionWasm,e.ga=!1,h.h=0}}))}function mn(e,t){var n,a;return C((function(r){return t in e.L?r.return(e.L[t]):(n=e.locateFile(t,""),a=fetch(n).then((function(e){return e.arrayBuffer()})),e.L[t]=a,r.return(a))}))}function gn(e,t,n){var a,r,o,s,c,u,l,d,p,h,f,m,g,y;return C((function(b){switch(b.h){case 1:if(!n)return b.return(t);for(a={},r=0,o=i(Object.keys(n)),s=o.next();!s.done;s=o.next())c=s.value,"string"!==typeof(u=n[c])&&"texture"===u.type&&void 0!==t[u.stream]&&++r;1<r&&(e.M=!1),l=i(Object.keys(n)),s=l.next();case 2:if(s.done){b.h=4;break}if(d=s.value,"string"===typeof(p=n[d]))return g=a,y=d,x(b,function(e,t,n){var a;return C((function(r){return"number"===typeof n||n instanceof Uint8Array||n instanceof e.i.Uint8BlobList?r.return(n):n instanceof e.i.Texture2dDataOut?((a=e.v[t])||(a=new sn(e.i,e.K),e.v[t]=a),r.return(cn(a,n,e.M))):r.return(void 0)}))}(e,d,t[p]),14);if(h=t[p.stream],"detection_list"===p.type){if(h){for(var v=h.getRectList(),w=h.getLandmarksList(),k=h.getClassificationsList(),S=[],I=0;I<v.size();++I){var N=tn(v.get(I)),_=void 0;_=void 0===_?0:_,N={la:{sa:et(N,1),ta:et(N,2),height:et(N,3),width:et(N,4),rotation:et(N,5,0),pa:Je(He(N,6),_)},ea:on(w.get(I)),ba:an(qt(k.get(I)))},S.push(N)}v=S}else v=[];a[d]=v,b.h=7;break}if("proto_list"===p.type){if(h){for(v=Array(h.size()),w=0;w<h.size();w++)v[w]=h.get(w);h.delete()}else v=[];a[d]=v,b.h=7;break}if(void 0===h){b.h=3;break}if("float_list"===p.type){a[d]=h,b.h=7;break}if("proto"===p.type){a[d]=h,b.h=7;break}if("texture"!==p.type)throw Error("Unknown output config type: '"+p.type+"'");return(f=e.v[d])||(f=new sn(e.i,e.K),e.v[d]=f),x(b,cn(f,h,e.M),13);case 13:m=b.i,a[d]=m;case 7:p.transform&&a[d]&&(a[d]=p.transform(a[d])),b.h=3;break;case 14:g[y]=b.i;case 3:s=l.next(),b.h=2;break;case 4:return b.return(a)}}))}function yn(e,t){for(var n=t.name||"$",a=[].concat(c(t.wants)),r=new e.i.StringList,o=i(t.wants),s=o.next();!s.done;s=o.next())r.push_back(s.value);o=e.i.PacketListener.implement({onResults:function(r){for(var o={},s=0;s<t.wants.length;++s)o[a[s]]=r.get(s);var i=e.listeners[n];i&&(e.I=gn(e,o,t.outs).then((function(n){n=i(n);for(var r=0;r<t.wants.length;++r){var s=o[a[r]];"object"===typeof s&&s.hasOwnProperty&&s.hasOwnProperty("delete")&&s.delete()}n&&(e.I=n)})))}}),e.j.attachMultiListener(r,o),r.delete()}function bn(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function xn(e){var t=this;e=e||{},this.h=new hn({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:bn(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:on},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:on},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"===typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){var n,a,r;return C((function(o){return 1==o.h?(n=bn(e),a="third_party/mediapipe/modules/pose_landmark/"+n,x(o,mn(t.h,n),2)):(r=o.i,t.h.overrideFile(a,r),o.return(!0))}))}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=hn.prototype).close=function(){return this.j&&this.j.delete(),Promise.resolve()},e.reset=function(){var e=this;return C((function(t){e.j&&(e.j.reset(),e.s={},e.v={}),t.h=0}))},e.setOptions=function(e,t){var n=this;if(t=t||this.h.options){for(var a=[],r=[],o={},s=i(Object.keys(e)),c=s.next();!c.done;o={X:o.X,Y:o.Y},c=s.next())if(!((c=c.value)in this.l)||this.l[c]!==e[c]){this.l[c]=e[c];var u=t[c];void 0!==u&&(u.onChange&&(o.X=u.onChange,o.Y=e[c],a.push(function(e){return function(){return C((function(t){if(1==t.h)return x(t,e.X(e.Y),2);!0===t.i&&(n.u=!0),t.h=0}))}}(o))),u.graphOptionXref&&(c=Object.assign({},{calculatorName:"",calculatorIndex:0},u.graphOptionXref,{valueNumber:1===u.type?e[c]:0,valueBoolean:0===u.type&&e[c],valueString:2===u.type?e[c]:""}),r.push(c)))}0===a.length&&0===r.length||(this.u=!0,this.H=(void 0===this.H?[]:this.H).concat(r),this.F=(void 0===this.F?[]:this.F).concat(a))}},e.initialize=function(){var e=this;return C((function(t){return 1==t.h?x(t,fn(e),2):3!=t.h?x(t,function(e){var t,n,a,r,o,s,c,u;return C((function(l){if(1==l.h)return e.h.graph&&e.h.graph.url&&e.fa===e.h.graph.url?l.return():(e.u=!0,e.h.graph&&e.h.graph.url?(e.fa=e.h.graph.url,x(l,mn(e,e.h.graph.url),3)):void(l.h=2));for(2!=l.h&&(t=l.i,e.j.loadGraph(t)),n=i(Object.keys(e.D)),a=n.next();!a.done;a=n.next())r=a.value,e.j.overrideFile(r,e.D[r]);if(e.D={},e.h.listeners)for(o=i(e.h.listeners),s=o.next();!s.done;s=o.next())c=s.value,yn(e,c);u=e.l,e.l={},e.setOptions(u),l.h=0}))}(e),3):x(t,function(e){var t,n,a,r,o,s;return C((function(c){switch(c.h){case 1:if(!e.u)return c.return();if(!e.F){c.h=2;break}t=i(e.F),n=t.next();case 3:if(n.done){c.h=5;break}return x(c,(0,n.value)(),4);case 4:n=t.next(),c.h=3;break;case 5:e.F=void 0;case 2:if(e.H){for(a=new e.i.GraphOptionChangeRequestList,r=i(e.H),o=r.next();!o.done;o=r.next())s=o.value,a.push_back(s);e.j.changeOptions(a),a.delete(),e.H=void 0}e.u=!1,c.h=0}}))}(e),0)}))},e.overrideFile=function(e,t){this.j?this.j.overrideFile(e,t):this.D[e]=t},e.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},e.send=function(e,t){var n,a,r,o,s,c,u,l,d,p=this;return C((function(h){switch(h.h){case 1:return p.h.inputs?(n=1e3*(void 0===t||null===t?performance.now():t),x(h,p.I,2)):h.return();case 2:return x(h,p.initialize(),3);case 3:for(a=new p.i.PacketDataList,r=i(Object.keys(e)),o=r.next();!o.done;o=r.next())if(s=o.value,c=p.h.inputs[s]){e:{var f=e[s];switch(c.type){case"video":var m=p.s[c.stream];if(m||(m=new sn(p.i,p.K),p.s[c.stream]=m),0===m.m&&(m.m=m.i.createTexture()),"undefined"!==typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,y=f.videoHeight;else"undefined"!==typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,y=f.naturalHeight):(g=f.width,y=f.height);y={glName:m.m,width:g,height:y},(g=m.h).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),m.i.bindTexture2d(m.m),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),m.i.bindTexture2d(0),m=y;break e;case"detections":for((m=p.s[c.stream])||(m=new un(p.i),p.s[c.stream]=m),m.data||(m.data=new m.h.DetectionListData),m.data.reset(f.length),y=0;y<f.length;++y){g=f[y];var b=m.data,v=b.setBoundingBox,w=y,k=g.la,S=new Jt;if(Ze(S,1,k.sa),Ze(S,2,k.ta),Ze(S,3,k.height),Ze(S,4,k.width),Ze(S,5,k.rotation),je(S,6,k.pa),k=S.l(),v.call(b,w,k),g.ea)for(b=0;b<g.ea.length;++b){S=g.ea[b],w=(v=m.data).addNormalizedLandmark,k=y,S=Object.assign({},S,{visibility:S.visibility?S.visibility:0});var C=new Xt;Ze(C,1,S.x),Ze(C,2,S.y),Ze(C,3,S.z),S.visibility&&Ze(C,4,S.visibility),S=C.l(),w.call(v,k,S)}if(g.ba)for(b=0;b<g.ba.length;++b)w=(v=m.data).addClassification,k=y,S=g.ba[b],Ze(C=new Gt,2,S.qa),S.index&&je(C,1,S.index),S.label&&je(C,3,S.label),S.displayName&&je(C,4,S.displayName),S=C.l(),w.call(v,k,S)}m=m.data;break e;default:m={}}}switch(u=m,l=c.stream,c.type){case"video":a.pushTexture2d(Object.assign({},u,{stream:l,timestamp:n}));break;case"detections":(d=u).stream=l,d.timestamp=n,a.pushDetectionList(d);break;default:throw Error("Unknown input config type: '"+c.type+"'")}}return p.j.send(a),x(h,p.I,4);case 4:a.delete(),h.h=0}}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},_("Solution",hn),_("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=xn.prototype).reset=function(){this.h.reset()},e.close=function(){return this.h.close(),Promise.resolve()},e.onResults=function(e){this.h.onResults(e)},e.initialize=function(){var e=this;return C((function(t){return x(t,e.h.initialize(),0)}))},e.send=function(e,t){var n=this;return C((function(a){return x(a,n.h.send(e,t),0)}))},e.setOptions=function(e){this.h.setOptions(e)},_("Pose",xn),_("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),_("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),_("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),_("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),_("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),_("VERSION","0.5.1675469404")}).call(this)},764:(e,t,n)=>{var a=(()=>{var e="undefined"!==typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||"/index.js",function(t){function a(){return A.buffer!=P&&j(A.buffer),L}function r(){return A.buffer!=P&&j(A.buffer),z}function o(){return A.buffer!=P&&j(A.buffer),B}function s(){return A.buffer!=P&&j(A.buffer),W}function i(){return A.buffer!=P&&j(A.buffer),U}var c,u,l,d="undefined"!=typeof(t=t||{})?t:{};d.ready=new Promise((function(e,t){c=e,u=t})),"undefined"!==typeof process&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,h,f,m=Object.assign({},d),g=[],y=(e,t)=>{throw t},b="object"==typeof window,x="function"==typeof importScripts,v="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,w=d.ENVIRONMENT_IS_PTHREAD||!1,k="";function S(e){return d.locateFile?d.locateFile(e,k):k+e}if(v){var C=n(893),I=n(281);let e;k=x?I.dirname(k)+"/":"//",p=(e,t)=>(e=se(e)?new URL(e):I.normalize(e),C.readFileSync(e,t?void 0:"utf8")),f=e=>{var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),t},h=(e,t,n)=>{e=se(e)?new URL(e):I.normalize(e),C.readFile(e,(function(e,a){e?n(e):t(a.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),g=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ue))throw e})),process.on("unhandledRejection",(function(e){throw e})),y=(e,t)=>{if(Z())throw process.exitCode=e,t;!function(e){if(e instanceof ue)return;E("exiting due to exception: "+e)}(t),process.exit(e)},d.inspect=function(){return"[Emscripten Module object]"};try{e=n(556)}catch(Qe){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),Qe}n.g.Worker=e.Worker}else(b||x)&&(x?k=self.location.href:"undefined"!=typeof document&&document.currentScript&&(k=document.currentScript.src),"undefined"!==typeof e&&e&&(k=e),k=0!==k.indexOf("blob:")?k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):"",v||(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},x&&(f=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),h=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)}),e=>document.title=e);v&&"undefined"==typeof performance&&(n.g.performance=n(244).performance);var N=console.log.bind(console),_=console.warn.bind(console);v&&(N=e=>C.writeSync(1,e+"\n"),_=e=>C.writeSync(2,e+"\n"));var T=d.print||N,E=d.printErr||_;Object.assign(d,m),m=null,d.arguments&&(g=d.arguments),d.thisProgram&&d.thisProgram,d.quit&&(y=d.quit);var R;Atomics.load,Atomics.store,Atomics.compareExchange;d.wasmBinary&&(R=d.wasmBinary);var A,O,F=d.noExitRuntime||!0;"object"!=typeof WebAssembly&&ne("no native wasm support detected");var D,M=!1;var P,L,z,B,W,U,V="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function G(e,t,n){for(var a=(t>>>=0)+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&V)return V.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,r):e.subarray(t,r));for(var o="";t<r;){var s=e[t++];if(128&s){var i=63&e[t++];if(192!=(224&s)){var c=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|c:(7&s)<<18|i<<12|c<<6|63&e[t++])<65536)o+=String.fromCharCode(s);else{var u=s-65536;o+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else o+=String.fromCharCode((31&s)<<6|i)}else o+=String.fromCharCode(s)}return o}function H(e,t){return(e>>>=0)?G(r(),e,t):""}function j(e){P=e,d.HEAP8=L=new Int8Array(e),d.HEAP16=new Int16Array(e),d.HEAP32=B=new Int32Array(e),d.HEAPU8=z=new Uint8Array(e),d.HEAPU16=new Uint16Array(e),d.HEAPU32=W=new Uint32Array(e),d.HEAPF32=new Float32Array(e),d.HEAPF64=U=new Float64Array(e)}w&&(P=d.buffer);var K,q=d.INITIAL_MEMORY||16777216;if(w)A=d.wasmMemory,P=d.buffer;else if(d.wasmMemory)A=d.wasmMemory;else if(!((A=new WebAssembly.Memory({initial:q/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw E("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&E("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");A&&(P=A.buffer),q=P.byteLength,j(P);var X=[],Y=[],Q=[];function Z(){return F}function $(){w||me(Y)}var J=0,ee=null,te=null;function ne(e){d.onAbort&&d.onAbort(e),E(e="Aborted("+e+")"),M=!0,D=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw u(t),t}var ae,re="data:application/octet-stream;base64,";function oe(e){return e.startsWith(re)}function se(e){return e.startsWith("file://")}function ie(e){try{if(e==ae&&R)return new Uint8Array(R);if(f)return f(e);throw"both async and sync fetching of the wasm failed"}catch(E){ne(E)}}oe(ae="tfjs-backend-wasm-threaded-simd.wasm")||(ae=S(ae));var ce={};function ue(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function le(e){var t,n=fe.pthreads[e];n||ne(t),fe.returnWorkerToPool(n)}function de(e){var t=fe.getNewWorker();if(!t)return 6;fe.runningWorkers.push(t),fe.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{v&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function pe(e){if(w)return Se(1,1,e);D=e,Z()||(fe.terminateAllThreads(),d.onExit&&d.onExit(e),M=!0),y(e,new ue(e))}var he=function(e,t){if(D=e,!t&&w)throw ge(e),"unwind";pe(e)};var fe={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){w?fe.initWorker():fe.initMainThread()},initMainThread:function(){for(var e=8;e--;)fe.allocateUnusedWorker()},initWorker:function(){F=!1},setExitStatus:function(e){D=e},terminateAllThreads:function(){for(var e of Object.values(fe.pthreads))fe.returnWorkerToPool(e);for(var e of fe.unusedWorkers)e.terminate();fe.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete fe.pthreads[t],fe.unusedWorkers.push(e),fe.runningWorkers.splice(fe.runningWorkers.indexOf(e),1),e.pthread_ptr=0,v&&e.unref(),Ve(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){fe.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(t,n){t.onmessage=e=>{var a,r=e.data,o=r.cmd;if(t.pthread_ptr&&(fe.currentProxiedOperationCallerThread=t.pthread_ptr),r.targetThread&&r.targetThread!=ze()){var s=fe.pthreads[r.targetThread];return s?s.postMessage(r,r.transferList):E('Internal error! Worker sent a message "'+o+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(fe.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===o?we(r.queue):"spawnThread"===o?de(r):"cleanupThread"===o?le(r.thread):"killThread"===o?function(e){var t=fe.pthreads[e];delete fe.pthreads[e],t.terminate(),Ve(e),fe.runningWorkers.splice(fe.runningWorkers.indexOf(t),1),t.pthread_ptr=0}(r.thread):"cancelThread"===o?(a=r.thread,fe.pthreads[a].postMessage({cmd:"cancel"})):"loaded"===o?(t.loaded=!0,v&&t.unref(),n&&n(t),t.runPthread&&t.runPthread()):"print"===o?T("Thread "+r.threadId+": "+r.text):"printErr"===o?E("Thread "+r.threadId+": "+r.text):"alert"===o?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?t.postMessage(r):"callHandler"===o?d[r.handler](...r.args):o&&E("worker sent an unknown command "+o),fe.currentProxiedOperationCallerThread=void 0},t.onerror=e=>{throw E("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},v&&(t.on("message",(function(e){t.onmessage({data:e})})),t.on("error",(function(e){t.onerror(e)})),t.on("detachedExit",(function(){})));var a=[];for(var r of["onExit","onAbort","print","printErr"])d.hasOwnProperty(r)&&a.push(r);t.postMessage({cmd:"load",handlers:a,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:A,wasmModule:O})},allocateUnusedWorker:function(){var e,t=S("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),fe.unusedWorkers.push(e)},getNewWorker:function(){return 0==fe.unusedWorkers.length&&(fe.allocateUnusedWorker(),fe.loadWasmModuleToWorker(fe.unusedWorkers[0])),fe.unusedWorkers.pop()}};function me(e){for(;e.length>0;)e.shift()(d)}function ge(e){if(w)return Se(2,0,e);try{he(e)}catch(Qe){!function(e){if(e instanceof ue||"unwind"==e)return D;y(1,e)}(Qe)}}d.PThread=fe,d.establishStackSpace=function(){var e=ze(),t=o()[e+52>>>2],n=o()[e+56>>>2];He(t,t-n),Ke(t)};var ye=[];function be(e,t,n,a){return w?Se(3,1,e,t,n,a):xe(e,t,n,a)}function xe(e,t,n,a){if("undefined"==typeof SharedArrayBuffer)return E("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var r=[];if(w&&0===r.length)return be(e,t,n,a);var o={startRoutine:n,pthread_ptr:e,arg:a,transferList:r};return w?(o.cmd="spawnThread",postMessage(o,r),0):de(o)}d.invokeEntryPoint=function(e,t){var n=function(e){var t=ye[e];return t||(e>=ye.length&&(ye.length=e+1),ye[e]=t=K.get(e)),t}(e)(t);Z()?fe.setExitStatus(n):Ge(n)};var ve;function we(e){Atomics.store(o(),e>>2,1),ze()&&Ue(e),Atomics.compareExchange(o(),e>>2,1,0)}function ke(e){ke.shown||(ke.shown={}),ke.shown[e]||(ke.shown[e]=1,v&&(e="warning: "+e),E(e))}function Se(e,t){var n=arguments.length-2,a=arguments;return function(e){var t=je(),n=e();return Ke(t),n}((()=>{for(var r=n,o=qe(8*r),s=o>>3,c=0;c<n;c++){var u=a[2+c];i()[s+c>>>0]=u}return We(e,r,o,t)}))}d.executeNotifiedProxyingQueue=we,ve=v?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var Ce=[];function Ie(e){try{return A.grow(e-P.byteLength+65535>>>16),j(A.buffer),1}catch(Qe){}}function Ne(e){return w?Se(4,1,e):52}function _e(e,t,n,a,r){return w?Se(5,1,e,t,n,a,r):70}var Te=[null,[],[]];function Ee(e,t){var n=Te[e];0===t||10===t?((1===e?T:E)(G(n,0)),n.length=0):n.push(t)}function Re(e,t,n,a){if(w)return Se(6,1,e,t,n,a);for(var o=0,i=0;i<n;i++){var c=s()[t>>>2],u=s()[t+4>>>2];t+=8;for(var l=0;l<u;l++)Ee(e,r()[c+l>>>0]);o+=u}return s()[a>>>2]=o,0}function Ae(e){return d["_"+e]}function Oe(e,t,n,o,s){var i={string:e=>{var t=0;if(null!==e&&void 0!==e&&0!==e){var n=1+(e.length<<2);(function(e,t,n){(function(e,t,n,a){if(!(a>0))return 0;for(var r=n>>>=0,o=n+a-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=o)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=o)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=o)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=o)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0})(e,r(),t,n)})(e,t=qe(n),n)}return t},array:e=>{var t=qe(e.length);return function(e,t){a().set(e,t>>>0)}(e,t),t}};var c=Ae(e),u=[],l=0;if(o)for(var d=0;d<o.length;d++){var p=i[n[d]];p?(0===l&&(l=je()),u[d]=p(o[d])):u[d]=o[d]}var h=c.apply(null,u);return h=function(e){return 0!==l&&Ke(l),function(e){return"string"===t?H(e):"boolean"===t?Boolean(e):e}(e)}(h)}fe.init();var Fe,De,Me,Pe=[null,pe,ge,be,Ne,_e,Re],Le={__emscripten_init_main_thread_js:function(e){Be(e,!x,1,!b),fe.threadInitTLS()},__emscripten_thread_cleanup:function(e){w?postMessage({cmd:"cleanupThread",thread:e}):le(e)},__pthread_create_js:xe,_emscripten_default_pthread_stack_size:function(){return 65536},_emscripten_get_now_is_monotonic:function(){return true},_emscripten_notify_task_queue:function(e,t,n,a){if(e==t)setTimeout((()=>we(a)));else if(w)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:a});else{var r=fe.pthreads[e];if(!r)return;r.postMessage({cmd:"processProxyingQueue",queue:a})}return 1},_emscripten_set_offscreencanvas_size:function(e,t,n){return-1},abort:function(){ne("")},emscripten_check_blocking_allowed:function(){v||x||ke("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return 4294901760},emscripten_get_now:ve,emscripten_memcpy_big:function(e,t,n){r().copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_num_logical_cores:function(){return v?n(74).cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Ce.length=t;for(var a=n>>3,r=0;r<t;r++)Ce[r]=i()[a+r>>>0];return(e<0?ce[-e-1]:Pe[e]).apply(null,Ce)},emscripten_resize_heap:function(e){var t=r().length;if((e>>>=0)<=t)return!1;var n,a,o=4294901760;if(e>o)return!1;for(var s=1;s<=4;s*=2){var i=t*(1+.2/s);if(i=Math.min(i,e+100663296),Ie(Math.min(o,(n=Math.max(e,i))+((a=65536)-n%a)%a)))return!0}return!1},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},exit:he,fd_close:Ne,fd_seek:_e,fd_write:Re,memory:A||d.wasmMemory},ze=(function(){var e={env:Le,wasi_snapshot_preview1:Le};function t(e,t){var n,a,r=e.exports;if(d.asm=r,n=d.asm._emscripten_tls_init,fe.tlsInitFunctions.push(n),K=d.asm.__indirect_function_table,a=d.asm.__wasm_call_ctors,Y.unshift(a),O=t,!w){var o=fe.unusedWorkers.length;fe.unusedWorkers.forEach((function(e){fe.loadWasmModuleToWorker(e,(function(){--o||function(){if(J--,d.monitorRunDependencies&&d.monitorRunDependencies(J),0==J&&(null!==ee&&(clearInterval(ee),ee=null),te)){var e=te;te=null,e()}}()}))}))}}function n(e){t(e.instance,e.module)}function a(t){return function(){if(!R&&(b||x)){if("function"==typeof fetch&&!se(ae))return fetch(ae,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ae+"'";return e.arrayBuffer()})).catch((function(){return ie(ae)}));if(h)return new Promise((function(e,t){h(ae,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ie(ae)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){E("failed to asynchronously prepare wasm: "+e),ne(e)}))}if(w||(J++,d.monitorRunDependencies&&d.monitorRunDependencies(J)),d.instantiateWasm)try{return d.instantiateWasm(e,t)}catch(Qe){E("Module.instantiateWasm callback failed with error: "+Qe),u(Qe)}(R||"function"!=typeof WebAssembly.instantiateStreaming||oe(ae)||se(ae)||v||"function"!=typeof fetch?a(n):fetch(ae,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return E("wasm streaming compile failed: "+e),E("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(u)}(),d.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},d._init=function(){return(d._init=d.asm.init).apply(null,arguments)},d._init_with_threads_count=function(){return(d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},d._get_threads_count=function(){return(d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},d._register_tensor=function(){return(d._register_tensor=d.asm.register_tensor).apply(null,arguments)},d._dispose_data=function(){return(d._dispose_data=d.asm.dispose_data).apply(null,arguments)},d._dispose=function(){return(d._dispose=d.asm.dispose).apply(null,arguments)},d._Abs=function(){return(d._Abs=d.asm.Abs).apply(null,arguments)},d._Acos=function(){return(d._Acos=d.asm.Acos).apply(null,arguments)},d._Acosh=function(){return(d._Acosh=d.asm.Acosh).apply(null,arguments)},d._Add=function(){return(d._Add=d.asm.Add).apply(null,arguments)},d._AddN=function(){return(d._AddN=d.asm.AddN).apply(null,arguments)},d._All=function(){return(d._All=d.asm.All).apply(null,arguments)},d._Any=function(){return(d._Any=d.asm.Any).apply(null,arguments)},d._ArgMax=function(){return(d._ArgMax=d.asm.ArgMax).apply(null,arguments)},d._ArgMin=function(){return(d._ArgMin=d.asm.ArgMin).apply(null,arguments)},d._Asin=function(){return(d._Asin=d.asm.Asin).apply(null,arguments)},d._Asinh=function(){return(d._Asinh=d.asm.Asinh).apply(null,arguments)},d._Atan=function(){return(d._Atan=d.asm.Atan).apply(null,arguments)},d._Atan2=function(){return(d._Atan2=d.asm.Atan2).apply(null,arguments)},d._Atanh=function(){return(d._Atanh=d.asm.Atanh).apply(null,arguments)},d._AvgPool=function(){return(d._AvgPool=d.asm.AvgPool).apply(null,arguments)},d._AvgPool3D=function(){return(d._AvgPool3D=d.asm.AvgPool3D).apply(null,arguments)},d._AvgPool3DGrad=function(){return(d._AvgPool3DGrad=d.asm.AvgPool3DGrad).apply(null,arguments)},d._AvgPoolGrad=function(){return(d._AvgPoolGrad=d.asm.AvgPoolGrad).apply(null,arguments)},d._BatchMatMul=function(){return(d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},d._Bincount=function(){return(d._Bincount=d.asm.Bincount).apply(null,arguments)},d._BitwiseAnd=function(){return(d._BitwiseAnd=d.asm.BitwiseAnd).apply(null,arguments)},d._Ceil=function(){return(d._Ceil=d.asm.Ceil).apply(null,arguments)},d._ClipByValue=function(){return(d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},d._Conv2D=function(){return(d._Conv2D=d.asm.Conv2D).apply(null,arguments)},d._Conv2DBackpropInput=function(){return(d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},d._Conv3D=function(){return(d._Conv3D=d.asm.Conv3D).apply(null,arguments)},d._Conv3DBackpropFilterV2=function(){return(d._Conv3DBackpropFilterV2=d.asm.Conv3DBackpropFilterV2).apply(null,arguments)},d._Conv3DBackpropInputV2=function(){return(d._Conv3DBackpropInputV2=d.asm.Conv3DBackpropInputV2).apply(null,arguments)},d._Cos=function(){return(d._Cos=d.asm.Cos).apply(null,arguments)},d._Cosh=function(){return(d._Cosh=d.asm.Cosh).apply(null,arguments)},d._CropAndResize=function(){return(d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},d._Cumprod=function(){return(d._Cumprod=d.asm.Cumprod).apply(null,arguments)},d._Cumsum=function(){return(d._Cumsum=d.asm.Cumsum).apply(null,arguments)},d._DenseBincount=function(){return(d._DenseBincount=d.asm.DenseBincount).apply(null,arguments)},d._DepthToSpace=function(){return(d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},d._DepthwiseConv2dNative=function(){return(d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},d._Diag=function(){return(d._Diag=d.asm.Diag).apply(null,arguments)},d._Dilation2D=function(){return(d._Dilation2D=d.asm.Dilation2D).apply(null,arguments)},d._Dilation2DBackpropFilter=function(){return(d._Dilation2DBackpropFilter=d.asm.Dilation2DBackpropFilter).apply(null,arguments)},d._Dilation2DBackpropInput=function(){return(d._Dilation2DBackpropInput=d.asm.Dilation2DBackpropInput).apply(null,arguments)},d._Elu=function(){return(d._Elu=d.asm.Elu).apply(null,arguments)},d._EluGrad=function(){return(d._EluGrad=d.asm.EluGrad).apply(null,arguments)},d._Equal=function(){return(d._Equal=d.asm.Equal).apply(null,arguments)},d._Erf=function(){return(d._Erf=d.asm.Erf).apply(null,arguments)},d._Exp=function(){return(d._Exp=d.asm.Exp).apply(null,arguments)},d._Expm1=function(){return(d._Expm1=d.asm.Expm1).apply(null,arguments)},d._FlipLeftRight=function(){return(d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},d._Floor=function(){return(d._Floor=d.asm.Floor).apply(null,arguments)},d._FloorDiv=function(){return(d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},d._FusedBatchNorm=function(){return(d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},d._FusedConv2D=function(){return(d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},d._FusedDepthwiseConv2D=function(){return(d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},d._Gather=function(){return(d._Gather=d.asm.Gather).apply(null,arguments)},d._GatherNd=function(){return(d._GatherNd=d.asm.GatherNd).apply(null,arguments)},d._Greater=function(){return(d._Greater=d.asm.Greater).apply(null,arguments)},d._GreaterEqual=function(){return(d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},d._IsFinite=function(){return(d._IsFinite=d.asm.IsFinite).apply(null,arguments)},d._IsInf=function(){return(d._IsInf=d.asm.IsInf).apply(null,arguments)},d._IsNan=function(){return(d._IsNan=d.asm.IsNan).apply(null,arguments)},d._LRN=function(){return(d._LRN=d.asm.LRN).apply(null,arguments)},d._LRNGrad=function(){return(d._LRNGrad=d.asm.LRNGrad).apply(null,arguments)},d._LeakyRelu=function(){return(d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},d._Less=function(){return(d._Less=d.asm.Less).apply(null,arguments)},d._LessEqual=function(){return(d._LessEqual=d.asm.LessEqual).apply(null,arguments)},d._LinSpace=function(){return(d._LinSpace=d.asm.LinSpace).apply(null,arguments)},d._Log=function(){return(d._Log=d.asm.Log).apply(null,arguments)},d._Log1p=function(){return(d._Log1p=d.asm.Log1p).apply(null,arguments)},d._LogicalAnd=function(){return(d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},d._LogicalNot=function(){return(d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},d._LogicalOr=function(){return(d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},d._LogicalXor=function(){return(d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},d._Max=function(){return(d._Max=d.asm.Max).apply(null,arguments)},d._MaxPool=function(){return(d._MaxPool=d.asm.MaxPool).apply(null,arguments)},d._MaxPool3D=function(){return(d._MaxPool3D=d.asm.MaxPool3D).apply(null,arguments)},d._MaxPool3DGrad=function(){return(d._MaxPool3DGrad=d.asm.MaxPool3DGrad).apply(null,arguments)},d._MaxPoolGrad=function(){return(d._MaxPoolGrad=d.asm.MaxPoolGrad).apply(null,arguments)},d._MaxPoolWithArgmax=function(){return(d._MaxPoolWithArgmax=d.asm.MaxPoolWithArgmax).apply(null,arguments)},d._Maximum=function(){return(d._Maximum=d.asm.Maximum).apply(null,arguments)},d._Mean=function(){return(d._Mean=d.asm.Mean).apply(null,arguments)},d._Min=function(){return(d._Min=d.asm.Min).apply(null,arguments)},d._Minimum=function(){return(d._Minimum=d.asm.Minimum).apply(null,arguments)},d._MirrorPad=function(){return(d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},d._Mod=function(){return(d._Mod=d.asm.Mod).apply(null,arguments)},d._Multinomial=function(){return(d._Multinomial=d.asm.Multinomial).apply(null,arguments)},d._Multiply=function(){return(d._Multiply=d.asm.Multiply).apply(null,arguments)},d._Neg=function(){return(d._Neg=d.asm.Neg).apply(null,arguments)},d._NonMaxSuppressionV3=function(){return(d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},d._NonMaxSuppressionV4=function(){return(d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},d._NonMaxSuppressionV5=function(){return(d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},d._NotEqual=function(){return(d._NotEqual=d.asm.NotEqual).apply(null,arguments)},d._OneHot=function(){return(d._OneHot=d.asm.OneHot).apply(null,arguments)},d._PadV2=function(){return(d._PadV2=d.asm.PadV2).apply(null,arguments)},d._Pow=function(){return(d._Pow=d.asm.Pow).apply(null,arguments)},d._Prelu=function(){return(d._Prelu=d.asm.Prelu).apply(null,arguments)},d._Prod=function(){return(d._Prod=d.asm.Prod).apply(null,arguments)},d._RealDiv=function(){return(d._RealDiv=d.asm.RealDiv).apply(null,arguments)},d._Reciprocal=function(){return(d._Reciprocal=d.asm.Reciprocal).apply(null,arguments)},d._Relu=function(){return(d._Relu=d.asm.Relu).apply(null,arguments)},d._Relu6=function(){return(d._Relu6=d.asm.Relu6).apply(null,arguments)},d._ResizeBilinear=function(){return(d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},d._ResizeBilinearGrad=function(){return(d._ResizeBilinearGrad=d.asm.ResizeBilinearGrad).apply(null,arguments)},d._ResizeNearestNeighbor=function(){return(d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},d._ResizeNearestNeighborGrad=function(){return(d._ResizeNearestNeighborGrad=d.asm.ResizeNearestNeighborGrad).apply(null,arguments)},d._Reverse=function(){return(d._Reverse=d.asm.Reverse).apply(null,arguments)},d._RotateWithOffset=function(){return(d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},d._Round=function(){return(d._Round=d.asm.Round).apply(null,arguments)},d._Rsqrt=function(){return(d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},d._ScatterNd=function(){return(d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},d._SearchSorted=function(){return(d._SearchSorted=d.asm.SearchSorted).apply(null,arguments)},d._SelectV2=function(){return(d._SelectV2=d.asm.SelectV2).apply(null,arguments)},d._Selu=function(){return(d._Selu=d.asm.Selu).apply(null,arguments)},d._Sigmoid=function(){return(d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},d._Sign=function(){return(d._Sign=d.asm.Sign).apply(null,arguments)},d._Sin=function(){return(d._Sin=d.asm.Sin).apply(null,arguments)},d._Sinh=function(){return(d._Sinh=d.asm.Sinh).apply(null,arguments)},d._Softmax=function(){return(d._Softmax=d.asm.Softmax).apply(null,arguments)},d._Softplus=function(){return(d._Softplus=d.asm.Softplus).apply(null,arguments)},d._SparseFillEmptyRows=function(){return(d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},d._SparseReshape=function(){return(d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},d._SparseSegmentReduction=function(){return(d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},d._SparseToDense=function(){return(d._SparseToDense=d.asm.SparseToDense).apply(null,arguments)},d._Sqrt=function(){return(d._Sqrt=d.asm.Sqrt).apply(null,arguments)},d._Square=function(){return(d._Square=d.asm.Square).apply(null,arguments)},d._SquaredDifference=function(){return(d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},d._Step=function(){return(d._Step=d.asm.Step).apply(null,arguments)},d._StridedSlice=function(){return(d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},d._Sub=function(){return(d._Sub=d.asm.Sub).apply(null,arguments)},d._Sum=function(){return(d._Sum=d.asm.Sum).apply(null,arguments)},d._Tan=function(){return(d._Tan=d.asm.Tan).apply(null,arguments)},d._Tanh=function(){return(d._Tanh=d.asm.Tanh).apply(null,arguments)},d._TensorScatterUpdate=function(){return(d._TensorScatterUpdate=d.asm.TensorScatterUpdate).apply(null,arguments)},d._Tile=function(){return(d._Tile=d.asm.Tile).apply(null,arguments)},d._TopK=function(){return(d._TopK=d.asm.TopK).apply(null,arguments)},d._Transform=function(){return(d._Transform=d.asm.Transform).apply(null,arguments)},d._Transpose=function(){return(d._Transpose=d.asm.Transpose).apply(null,arguments)},d.__FusedMatMul=function(){return(d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},d._malloc=function(){return(d._malloc=d.asm.malloc).apply(null,arguments)},d._free=function(){return(d._free=d.asm.free).apply(null,arguments)},d.__emscripten_tls_init=function(){return(d.__emscripten_tls_init=d.asm._emscripten_tls_init).apply(null,arguments)},d._pthread_self=function(){return(ze=d._pthread_self=d.asm.pthread_self).apply(null,arguments)}),Be=(d.___errno_location=function(){return(d.___errno_location=d.asm.__errno_location).apply(null,arguments)},d.__emscripten_thread_init=function(){return(Be=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)}),We=(d.__emscripten_thread_crashed=function(){return(d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},d._emscripten_main_thread_process_queued_calls=function(){return(d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},d._emscripten_main_browser_thread_id=function(){return(d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},d._emscripten_run_in_main_runtime_thread_js=function(){return(We=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),Ue=(d._emscripten_dispatch_to_thread_=function(){return(d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},d.__emscripten_proxy_execute_task_queue=function(){return(Ue=d.__emscripten_proxy_execute_task_queue=d.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),Ve=d.__emscripten_thread_free_data=function(){return(Ve=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},Ge=d.__emscripten_thread_exit=function(){return(Ge=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},He=d._emscripten_stack_set_limits=function(){return(He=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},je=d.stackSave=function(){return(je=d.stackSave=d.asm.stackSave).apply(null,arguments)},Ke=d.stackRestore=function(){return(Ke=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},qe=d.stackAlloc=function(){return(qe=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)};d.dynCall_iijjiiii=function(){return(d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},d.dynCall_jiji=function(){return(d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)};function Xe(e){if(e=e||g,!(J>0)){if(w)return c(d),$(),void startWorker(d);!function(){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)e=d.preRun.shift(),X.unshift(e);var e;me(X)}(),J>0||(d.setStatus?(d.setStatus("Running..."),setTimeout((function(){setTimeout((function(){d.setStatus("")}),1),t()}),1)):t())}function t(){Fe||(Fe=!0,d.calledRun=!0,M||($(),c(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),function(){if(!w){if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;)e=d.postRun.shift(),Q.unshift(e);var e;me(Q)}}()))}}if(d.keepRuntimeAlive=Z,d.wasmMemory=A,d.cwrap=function(e,t,n,a){var r=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&r&&!a?Ae(e):function(){return Oe(e,t,n,arguments)}},d.ExitStatus=ue,d.PThread=fe,te=function e(){Fe||Xe(),Fe||(te=e)},d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();if(Xe(),l&&(De={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!l.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!l.unhandledRejection.indexOf(e)>-1}))}),"undefined"!==typeof WasmBackendModule)Me=WasmBackendModule;else{if("undefined"===typeof t)throw new Error("Could not find wasm module in post.js");Me=t}if(De){var Ye=Me._dispose;Me._dispose=function(){Ye(),De.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),De.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return t.ready}})();e.exports=a},562:e=>{e.exports.$='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'},372:(e,t,n)=>{var a=(()=>{var e="undefined"!==typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||"/index.js",function(t){var a,r,o,s="undefined"!=typeof(t=t||{})?t:{};s.ready=new Promise((function(e,t){a=e,r=t})),"undefined"!==typeof process&&process.listeners&&(o={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,c,u,l=Object.assign({},s),d=[],p="object"==typeof window,h="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,m="";if(f){var g=n(893),y=n(281);m=h?y.dirname(m)+"/":"//",i=(e,t)=>(e=G(e)?new URL(e):y.normalize(e),g.readFileSync(e,t?void 0:"utf8")),u=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},c=(e,t,n)=>{e=G(e)?new URL(e):y.normalize(e),g.readFile(e,(function(e,a){e?n(e):t(a.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof j))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}}else(p||h)&&(h?m=self.location.href:"undefined"!=typeof document&&document.currentScript&&(m=document.currentScript.src),e&&(m=e),m=0!==m.indexOf("blob:")?m.substr(0,m.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},h&&(u=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),c=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)},e=>document.title=e);var b=s.print||console.log.bind(console),x=s.printErr||console.warn.bind(console);Object.assign(s,l),l=null,s.arguments&&(d=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit;var v;s.wasmBinary&&(v=s.wasmBinary);var w,k=s.noExitRuntime||!0;"object"!=typeof WebAssembly&&z("no native wasm support detected");var S=!1;var C,I,N,_,T="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function E(e,t,n){for(var a=(t>>>=0)+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&T)return T.decode(e.subarray(t,r));for(var o="";t<r;){var s=e[t++];if(128&s){var i=63&e[t++];if(192!=(224&s)){var c=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|c:(7&s)<<18|i<<12|c<<6|63&e[t++])<65536)o+=String.fromCharCode(s);else{var u=s-65536;o+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else o+=String.fromCharCode((31&s)<<6|i)}else o+=String.fromCharCode(s)}return o}function R(e,t){return(e>>>=0)?E(N,e,t):""}function A(e){C=e,s.HEAP8=I=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=new Int32Array(e),s.HEAPU8=N=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=_=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var O=[],F=[],D=[];var M=0,P=null,L=null;function z(e){s.onAbort&&s.onAbort(e),x(e="Aborted("+e+")"),S=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}var B,W,U="data:application/octet-stream;base64,";function V(e){return e.startsWith(U)}function G(e){return e.startsWith("file://")}function H(e){try{if(e==B&&v)return new Uint8Array(v);if(u)return u(e);throw"both async and sync fetching of the wasm failed"}catch(x){z(x)}}function j(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function K(e){for(;e.length>0;)e.shift()(s)}function q(e){try{return w.grow(e-C.byteLength+65535>>>16),A(w.buffer),1}catch(t){}}V(B="tfjs-backend-wasm.wasm")||(W=B,B=s.locateFile?s.locateFile(W,m):m+W);var X=[null,[],[]];function Y(e,t){var n=X[e];0===t||10===t?((1===e?b:x)(E(n,0)),n.length=0):n.push(t)}function Q(e){return s["_"+e]}function Z(e,t,n,a,r){var o={string:e=>{var t=0;if(null!==e&&void 0!==e&&0!==e){var n=1+(e.length<<2);(function(e,t,n){(function(e,t,n,a){if(!(a>0))return 0;for(var r=n>>>=0,o=n+a-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=o)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=o)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=o)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=o)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0})(e,N,t,n)})(e,t=re(n),n)}return t},array:e=>{var t=re(e.length);return function(e,t){I.set(e,t>>>0)}(e,t),t}};var s=Q(e),i=[],c=0;if(a)for(var u=0;u<a.length;u++){var l=o[n[u]];l?(0===c&&(c=ne()),i[u]=l(a[u])):i[u]=a[u]}var d=s.apply(null,i);return d=function(e){return 0!==c&&ae(c),function(e){return"string"===t?R(e):"boolean"===t?Boolean(e):e}(e)}(d)}var $,J,ee,te={abort:function(){z("")},emscripten_get_heap_max:function(){return 4294901760},emscripten_memcpy_big:function(e,t,n){N.copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_resize_heap:function(e){var t,n,a=N.length,r=4294901760;if((e>>>=0)>r)return!1;for(var o=1;o<=4;o*=2){var s=a*(1+.2/o);if(s=Math.min(s,e+100663296),q(Math.min(r,(t=Math.max(e,s))+((n=65536)-t%n)%n)))return!0}return!1},fd_close:function(e){return 52},fd_seek:function(e,t,n,a,r){return 70},fd_write:function(e,t,n,a){for(var r=0,o=0;o<n;o++){var s=_[t>>>2],i=_[t+4>>>2];t+=8;for(var c=0;c<i;c++)Y(e,N[s+c>>>0]);r+=i}return _[a>>>2]=r,0}},ne=(function(){var e={env:te,wasi_snapshot_preview1:te};function t(e,t){var n,a=e.exports;s.asm=a,A((w=s.asm.memory).buffer),s.asm.__indirect_function_table,n=s.asm.__wasm_call_ctors,F.unshift(n),function(){if(M--,s.monitorRunDependencies&&s.monitorRunDependencies(M),0==M&&(null!==P&&(clearInterval(P),P=null),L)){var e=L;L=null,e()}}()}function n(e){t(e.instance)}function a(t){return function(){if(!v&&(p||h)){if("function"==typeof fetch&&!G(B))return fetch(B,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+B+"'";return e.arrayBuffer()})).catch((function(){return H(B)}));if(c)return new Promise((function(e,t){c(B,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return H(B)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){x("failed to asynchronously prepare wasm: "+e),z(e)}))}if(M++,s.monitorRunDependencies&&s.monitorRunDependencies(M),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(o){x("Module.instantiateWasm callback failed with error: "+o),r(o)}(v||"function"!=typeof WebAssembly.instantiateStreaming||V(B)||G(B)||f||"function"!=typeof fetch?a(n):fetch(B,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return x("wasm streaming compile failed: "+e),x("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(r)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Acos=function(){return(s._Acos=s.asm.Acos).apply(null,arguments)},s._Acosh=function(){return(s._Acosh=s.asm.Acosh).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._ArgMin=function(){return(s._ArgMin=s.asm.ArgMin).apply(null,arguments)},s._Asin=function(){return(s._Asin=s.asm.Asin).apply(null,arguments)},s._Asinh=function(){return(s._Asinh=s.asm.Asinh).apply(null,arguments)},s._Atan=function(){return(s._Atan=s.asm.Atan).apply(null,arguments)},s._Atan2=function(){return(s._Atan2=s.asm.Atan2).apply(null,arguments)},s._Atanh=function(){return(s._Atanh=s.asm.Atanh).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._AvgPool3D=function(){return(s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},s._AvgPool3DGrad=function(){return(s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},s._AvgPoolGrad=function(){return(s._AvgPoolGrad=s.asm.AvgPoolGrad).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Bincount=function(){return(s._Bincount=s.asm.Bincount).apply(null,arguments)},s._BitwiseAnd=function(){return(s._BitwiseAnd=s.asm.BitwiseAnd).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Conv3D=function(){return(s._Conv3D=s.asm.Conv3D).apply(null,arguments)},s._Conv3DBackpropFilterV2=function(){return(s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},s._Conv3DBackpropInputV2=function(){return(s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DenseBincount=function(){return(s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Diag=function(){return(s._Diag=s.asm.Diag).apply(null,arguments)},s._Dilation2D=function(){return(s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},s._Dilation2DBackpropFilter=function(){return(s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},s._Dilation2DBackpropInput=function(){return(s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._EluGrad=function(){return(s._EluGrad=s.asm.EluGrad).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Erf=function(){return(s._Erf=s.asm.Erf).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._Expm1=function(){return(s._Expm1=s.asm.Expm1).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._IsFinite=function(){return(s._IsFinite=s.asm.IsFinite).apply(null,arguments)},s._IsInf=function(){return(s._IsInf=s.asm.IsInf).apply(null,arguments)},s._IsNan=function(){return(s._IsNan=s.asm.IsNan).apply(null,arguments)},s._LRN=function(){return(s._LRN=s.asm.LRN).apply(null,arguments)},s._LRNGrad=function(){return(s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._LinSpace=function(){return(s._LinSpace=s.asm.LinSpace).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._Log1p=function(){return(s._Log1p=s.asm.Log1p).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._MaxPool3D=function(){return(s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},s._MaxPool3DGrad=function(){return(s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},s._MaxPoolGrad=function(){return(s._MaxPoolGrad=s.asm.MaxPoolGrad).apply(null,arguments)},s._MaxPoolWithArgmax=function(){return(s._MaxPoolWithArgmax=s.asm.MaxPoolWithArgmax).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Mod=function(){return(s._Mod=s.asm.Mod).apply(null,arguments)},s._Multinomial=function(){return(s._Multinomial=s.asm.Multinomial).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Reciprocal=function(){return(s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeBilinearGrad=function(){return(s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._ResizeNearestNeighborGrad=function(){return(s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SearchSorted=function(){return(s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Selu=function(){return(s._Selu=s.asm.Selu).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sign=function(){return(s._Sign=s.asm.Sign).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Sinh=function(){return(s._Sinh=s.asm.Sinh).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._Softplus=function(){return(s._Softplus=s.asm.Softplus).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._SparseToDense=function(){return(s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._TensorScatterUpdate=function(){return(s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s.stackSave=function(){return(ne=s.stackSave=s.asm.stackSave).apply(null,arguments)}),ae=s.stackRestore=function(){return(ae=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},re=s.stackAlloc=function(){return(re=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)};function oe(e){function t(){$||($=!0,s.calledRun=!0,S||(K(F),a(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),D.unshift(e);var e;K(D)}()))}e=e||d,M>0||(!function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),O.unshift(e);var e;K(O)}(),M>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),t()}),1)):t()))}if(s.cwrap=function(e,t,n,a){var r=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&r&&!a?Q(e):function(){return Z(e,t,n,arguments)}},L=function e(){$||oe(),$||(L=e)},s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(oe(),o&&(J={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!o.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!o.unhandledRejection.indexOf(e)>-1}))}),"undefined"!==typeof t)ee=t;else{if("undefined"===typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");ee=WasmBackendModuleThreadedSimd}if(J){var se=ee._dispose;ee._dispose=function(){se(),J.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),J.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return t.ready}})();e.exports=a},353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(I){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},o={};function s(e,t){var n,a,s;return t?(s=0<=(e>>>=0)&&e<256)&&(a=o[e])?a:(n=c(e,(0|e)<0?-1:0,!0),s&&(o[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=c(e,e<0?-1:0,!1),s&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():c(e%p|0,e/p|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=s,n.fromNumber=i,n.fromBits=c;var u=Math.pow;function l(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return l(e.substring(1),t,n).neg();for(var r=i(u(n,8)),o=g,s=0;s<e.length;s+=8){var c=Math.min(8,e.length-s),d=parseInt(e.substring(s,s+c),n);if(c<8){var p=i(u(n,c));o=o.mul(p).add(i(d))}else o=(o=o.mul(r)).add(i(d))}return o.unsigned=t,o}function d(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?l(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=l,n.fromValue=d;var p=4294967296,h=p*p,f=h/2,m=s(1<<24),g=s(0);n.ZERO=g;var y=s(0,!0);n.UZERO=y;var b=s(1);n.ONE=b;var x=s(1,!0);n.UONE=x;var v=s(-1);n.NEG_ONE=v;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);n.MIN_VALUE=S;var C=n.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},C.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(u(e,6),this.unsigned),o=this,s="";;){var c=o.div(r),l=(o.sub(c.mul(r)).toInt()>>>0).toString(e);if((o=c).isZero())return l+s;for(;l.length<6;)l="0"+l;s=""+l+s}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1===(1&this.low)},C.isEven=function(){return 0===(1&this.low)},C.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},C.neg=C.negate,C.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,o=65535&this.low,s=e.high>>>16,i=65535&e.high,u=e.low>>>16,l=0,p=0,h=0,f=0;return h+=(f+=o+(65535&e.low))>>>16,p+=(h+=r+u)>>>16,l+=(p+=n+i)>>>16,l+=t+s,c((h&=65535)<<16|(f&=65535),(l&=65535)<<16|(p&=65535),this.unsigned)},C.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=d(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,o=this.low>>>16,s=65535&this.low,u=e.high>>>16,l=65535&e.high,p=e.low>>>16,h=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=s*h)>>>16,y+=(b+=o*h)>>>16,b&=65535,y+=(b+=s*p)>>>16,f+=(y+=r*h)>>>16,y&=65535,f+=(y+=o*p)>>>16,y&=65535,f+=(y+=s*l)>>>16,f+=n*h+r*p+o*l+s*u,c((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,r,o;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;o=y}else{if(this.eq(S))return e.eq(b)||e.eq(v)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(r=this.sub(e.mul(n)),o=n.add(r.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(n)/Math.LN2),l=s<=48?1:u(2,s-48),p=i(n),h=p.mul(e);h.isNegative()||h.gt(r);)h=(p=i(n-=l,this.unsigned)).mul(e);p.isZero()&&(p=b),o=o.add(p),r=r.sub(h)}return o},C.div=C.divide,C.modulo=function(e){return a(e)||(e=d(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return c(~this.low,~this.high,this.unsigned)},C.and=function(e){return a(e)||(e=d(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return a(e)||(e=d(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return a(e)||(e=d(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},730:(e,t,n)=>{"use strict";var a=n(43),r=n(853);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var s=new Set,i={};function c(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(i[e]=t,e=0;e<t.length;e++)s.add(t[e])}var l=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h={},f={};function m(e,t,n,a,r,o,s){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=s}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function x(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!d.call(f,e)||!d.call(h,e)&&(p.test(e)?f[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var v=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),N=Symbol.for("react.provider"),_=Symbol.for("react.context"),T=Symbol.for("react.forward_ref"),E=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),A=Symbol.for("react.memo"),O=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var F=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var D=Symbol.iterator;function M(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=D&&e[D]||e["@@iterator"])?e:null}var P,L=Object.assign;function z(e){if(void 0===P)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);P=t&&t[1]||""}return"\n"+P+e}var B=!1;function W(e,t){if(!e||B)return"";B=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var a=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){a=u}e.call(t.prototype)}else{try{throw Error()}catch(u){a=u}e()}}catch(u){if(u&&a&&"string"===typeof u.stack){for(var r=u.stack.split("\n"),o=a.stack.split("\n"),s=r.length-1,i=o.length-1;1<=s&&0<=i&&r[s]!==o[i];)i--;for(;1<=s&&0<=i;s--,i--)if(r[s]!==o[i]){if(1!==s||1!==i)do{if(s--,0>--i||r[s]!==o[i]){var c="\n"+r[s].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=s&&0<=i);break}}}finally{B=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?z(e):""}function U(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 1:return e=W(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case I:return"Profiler";case C:return"StrictMode";case E:return"Suspense";case R:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case _:return(e.displayName||"Context")+".Consumer";case N:return(e._context.displayName||"Context")+".Provider";case T:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case A:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case O:t=e._payload,e=e._init;try{return V(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=j(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function X(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return L({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=H(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&x(e,"checked",t,!1)}function $(e,t){Z(e,t);var n=H(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,H(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+H(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return L({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(te(n)){if(1<n.length)throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:H(n)}}function oe(e,t){var n=H(t.value),a=H(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ce(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,le,de=(le=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return le(e,t)}))}:le);function pe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var he={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||he.hasOwnProperty(e)&&he[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(he).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),he[t]=he[e]}))}));var ye=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(o(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ve=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Ce=null;function Ie(e){if(e=xr(e)){if("function"!==typeof ke)throw Error(o(280));var t=e.stateNode;t&&(t=wr(t),ke(e.stateNode,e.type,t))}}function Ne(e){Se?Ce?Ce.push(e):Ce=[e]:Se=e}function _e(){if(Se){var e=Se,t=Ce;if(Ce=Se=null,Ie(e),t)for(e=0;e<t.length;e++)Ie(t[e])}}function Te(e,t){return e(t)}function Ee(){}var Re=!1;function Ae(e,t,n){if(Re)return e(t,n);Re=!0;try{return Te(e,t,n)}finally{Re=!1,(null!==Se||null!==Ce)&&(Ee(),_e())}}function Oe(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(o(231,t,typeof n));return n}var Fe=!1;if(l)try{var De={};Object.defineProperty(De,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",De,De),window.removeEventListener("test",De,De)}catch(le){Fe=!1}function Me(e,t,n,a,r,o,s,i,c){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(l){this.onError(l)}}var Pe=!1,Le=null,ze=!1,Be=null,We={onError:function(e){Pe=!0,Le=e}};function Ue(e,t,n,a,r,o,s,i,c){Pe=!1,Le=null,Me.apply(We,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function He(e){if(Ve(e)!==e)throw Error(o(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var s=r.alternate;if(null===s){if(null!==(a=r.return)){n=a;continue}break}if(r.child===s.child){for(s=r.child;s;){if(s===n)return He(r),e;if(s===a)return He(r),t;s=s.sibling}throw Error(o(188))}if(n.return!==a.return)n=r,a=s;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=s;break}if(c===a){i=!0,a=r,n=s;break}c=c.sibling}if(!i){for(c=s.child;c;){if(c===n){i=!0,n=s,a=r;break}if(c===a){i=!0,a=s,n=r;break}c=c.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==a)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e))?Ke(e):null}function Ke(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ke(e);if(null!==t)return t;e=e.sibling}return null}var qe=r.unstable_scheduleCallback,Xe=r.unstable_cancelCallback,Ye=r.unstable_shouldYield,Qe=r.unstable_requestPaint,Ze=r.unstable_now,$e=r.unstable_getCurrentPriorityLevel,Je=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,ot=null;var st=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(it(e)/ct|0)|0},it=Math.log,ct=Math.LN2;var ut=64,lt=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pt(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,o=e.pingedLanes,s=268435455&n;if(0!==s){var i=s&~r;0!==i?a=dt(i):0!==(o&=s)&&(a=dt(o))}else 0!==(s=n&~r)?a=dt(s):0!==o&&(a=dt(o));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(o=t&-t)||16===r&&0!==(4194240&o)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-st(t)),a|=e[n],t&=~r;return a}function ht(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ut;return 0===(4194240&(ut<<=1))&&(ut=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-st(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-st(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var xt=0;function vt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,St,Ct,It,Nt=!1,_t=[],Tt=null,Et=null,Rt=null,At=new Map,Ot=new Map,Ft=[],Dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":Tt=null;break;case"dragenter":case"dragleave":Et=null;break;case"mouseover":case"mouseout":Rt=null;break;case"pointerover":case"pointerout":At.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ot.delete(t.pointerId)}}function Pt(e,t,n,a,r,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:o,targetContainers:[r]},null!==t&&(null!==(t=xr(t))&&kt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function Lt(e){var t=br(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void It(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function zt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=xr(n))&&kt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);ve=a,n.target.dispatchEvent(a),ve=null,t.shift()}return!0}function Bt(e,t,n){zt(e)&&n.delete(t)}function Wt(){Nt=!1,null!==Tt&&zt(Tt)&&(Tt=null),null!==Et&&zt(Et)&&(Et=null),null!==Rt&&zt(Rt)&&(Rt=null),At.forEach(Bt),Ot.forEach(Bt)}function Ut(e,t){e.blockedOn===t&&(e.blockedOn=null,Nt||(Nt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Wt)))}function Vt(e){function t(t){return Ut(t,e)}if(0<_t.length){Ut(_t[0],e);for(var n=1;n<_t.length;n++){var a=_t[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==Tt&&Ut(Tt,e),null!==Et&&Ut(Et,e),null!==Rt&&Ut(Rt,e),At.forEach(t),Ot.forEach(t),n=0;n<Ft.length;n++)(a=Ft[n]).blockedOn===e&&(a.blockedOn=null);for(;0<Ft.length&&null===(n=Ft[0]).blockedOn;)Lt(n),null===n.blockedOn&&Ft.shift()}var Gt=v.ReactCurrentBatchConfig,Ht=!0;function jt(e,t,n,a){var r=xt,o=Gt.transition;Gt.transition=null;try{xt=1,qt(e,t,n,a)}finally{xt=r,Gt.transition=o}}function Kt(e,t,n,a){var r=xt,o=Gt.transition;Gt.transition=null;try{xt=4,qt(e,t,n,a)}finally{xt=r,Gt.transition=o}}function qt(e,t,n,a){if(Ht){var r=Yt(e,t,n,a);if(null===r)Ha(e,t,a,Xt,n),Mt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return Tt=Pt(Tt,e,t,n,a,r),!0;case"dragenter":return Et=Pt(Et,e,t,n,a,r),!0;case"mouseover":return Rt=Pt(Rt,e,t,n,a,r),!0;case"pointerover":var o=r.pointerId;return At.set(o,Pt(At.get(o)||null,e,t,n,a,r)),!0;case"gotpointercapture":return o=r.pointerId,Ot.set(o,Pt(Ot.get(o)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Mt(e,a),4&t&&-1<Dt.indexOf(e)){for(;null!==r;){var o=xr(r);if(null!==o&&wt(o),null===(o=Yt(e,t,n,a))&&Ha(e,t,a,Xt,n),o===r)break;r=o}null!==r&&a.stopPropagation()}else Ha(e,t,a,null,n)}}var Xt=null;function Yt(e,t,n,a){if(Xt=null,null!==(e=br(e=we(a))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Xt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch($e()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Zt=null,$t=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=$t,a=n.length,r="value"in Zt?Zt.value:Zt.textContent,o=r.length;for(e=0;e<a&&n[e]===r[e];e++);var s=a-e;for(t=1;t<=s&&n[a-t]===r[o-t];t++);return Jt=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,o){for(var s in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(s)&&(t=e[s],this[s]=t?t(r):r[s]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return L(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,sn,cn,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ln=rn(un),dn=L({},un,{view:0,detail:0}),pn=rn(dn),hn=L({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:In,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(on=e.screenX-cn.screenX,sn=e.screenY-cn.screenY):sn=on=0,cn=e),on)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),fn=rn(hn),mn=rn(L({},hn,{dataTransfer:0})),gn=rn(L({},dn,{relatedTarget:0})),yn=rn(L({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=L({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xn=rn(bn),vn=rn(L({},un,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function In(){return Cn}var Nn=L({},dn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:In,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),_n=rn(Nn),Tn=rn(L({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),En=rn(L({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:In})),Rn=rn(L({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=L({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),On=rn(An),Fn=[9,13,27,32],Dn=l&&"CompositionEvent"in window,Mn=null;l&&"documentMode"in document&&(Mn=document.documentMode);var Pn=l&&"TextEvent"in window&&!Mn,Ln=l&&(!Dn||Mn&&8<Mn&&11>=Mn),zn=String.fromCharCode(32),Bn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==Fn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function jn(e,t,n,a){Ne(a),0<(t=Ka(t,"onChange")).length&&(n=new ln("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var Kn=null,qn=null;function Xn(e){za(e,0)}function Yn(e){if(q(vr(e)))return e}function Qn(e,t){if("change"===e)return t}var Zn=!1;if(l){var $n;if(l){var Jn="oninput"in document;if(!Jn){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),Jn="function"===typeof ea.oninput}$n=Jn}else $n=!1;Zn=$n&&(!document.documentMode||9<document.documentMode)}function ta(){Kn&&(Kn.detachEvent("onpropertychange",na),qn=Kn=null)}function na(e){if("value"===e.propertyName&&Yn(qn)){var t=[];jn(t,qn,e,we(e)),Ae(Xn,t)}}function aa(e,t,n){"focusin"===e?(ta(),qn=n,(Kn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(qn)}function oa(e,t){if("click"===e)return Yn(t)}function sa(e,t){if("input"===e||"change"===e)return Yn(t)}var ia="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function ca(e,t){if(ia(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!d.call(t,r)||!ia(e[r],t[r]))return!1}return!0}function ua(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function la(e,t){var n,a=ua(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=ua(a)}}function da(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?da(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pa(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function ha(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=pa(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&da(n.ownerDocument.documentElement,n)){if(null!==a&&ha(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,o=Math.min(a.start,r);a=void 0===a.end?o:Math.min(a.end,r),!e.extend&&o>a&&(r=a,a=o,o=r),r=la(n,o);var s=la(n,a);r&&s&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==s.node||e.focusOffset!==s.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),o>a?(e.addRange(t),e.extend(s.node,s.offset)):(t.setEnd(s.node,s.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=l&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,xa=!1;function va(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;xa||null==ga||ga!==X(a)||("selectionStart"in(a=ga)&&ha(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ca(ba,a)||(ba=a,0<(a=Ka(ya,"onSelect")).length&&(t=new ln("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ka={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},Sa={},Ca={};function Ia(e){if(Sa[e])return Sa[e];if(!ka[e])return e;var t,n=ka[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ca)return Sa[e]=n[t];return e}l&&(Ca=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Na=Ia("animationend"),_a=Ia("animationiteration"),Ta=Ia("animationstart"),Ea=Ia("transitionend"),Ra=new Map,Aa="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Oa(e,t){Ra.set(e,t),c(t,[e])}for(var Fa=0;Fa<Aa.length;Fa++){var Da=Aa[Fa];Oa(Da.toLowerCase(),"on"+(Da[0].toUpperCase()+Da.slice(1)))}Oa(Na,"onAnimationEnd"),Oa(_a,"onAnimationIteration"),Oa(Ta,"onAnimationStart"),Oa("dblclick","onDoubleClick"),Oa("focusin","onFocus"),Oa("focusout","onBlur"),Oa(Ea,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ma="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Pa=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ma));function La(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,s,i,c,u){if(Ue.apply(this,arguments),Pe){if(!Pe)throw Error(o(198));var l=Le;Pe=!1,Le=null,ze||(ze=!0,Be=l)}}(a,t,void 0,e),e.currentTarget=null}function za(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var o=void 0;if(t)for(var s=a.length-1;0<=s;s--){var i=a[s],c=i.instance,u=i.currentTarget;if(i=i.listener,c!==o&&r.isPropagationStopped())break e;La(r,i,u),o=c}else for(s=0;s<a.length;s++){if(c=(i=a[s]).instance,u=i.currentTarget,i=i.listener,c!==o&&r.isPropagationStopped())break e;La(r,i,u),o=c}}}if(ze)throw e=Be,ze=!1,Be=null,e}function Ba(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ga(t,e,2,!1),n.add(a))}function Wa(e,t,n){var a=0;t&&(a|=4),Ga(n,e,a,t)}var Ua="_reactListening"+Math.random().toString(36).slice(2);function Va(e){if(!e[Ua]){e[Ua]=!0,s.forEach((function(t){"selectionchange"!==t&&(Pa.has(t)||Wa(t,!1,e),Wa(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ua]||(t[Ua]=!0,Wa("selectionchange",!1,t))}}function Ga(e,t,n,a){switch(Qt(t)){case 1:var r=jt;break;case 4:r=Kt;break;default:r=qt}n=r.bind(null,t,n,e),r=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function Ha(e,t,n,a,r){var o=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var s=a.tag;if(3===s||4===s){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===s)for(s=a.return;null!==s;){var c=s.tag;if((3===c||4===c)&&((c=s.stateNode.containerInfo)===r||8===c.nodeType&&c.parentNode===r))return;s=s.return}for(;null!==i;){if(null===(s=br(i)))return;if(5===(c=s.tag)||6===c){a=o=s;continue e}i=i.parentNode}}a=a.return}Ae((function(){var a=o,r=we(n),s=[];e:{var i=Ra.get(e);if(void 0!==i){var c=ln,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":c=_n;break;case"focusin":u="focus",c=gn;break;case"focusout":u="blur",c=gn;break;case"beforeblur":case"afterblur":c=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=En;break;case Na:case _a:case Ta:c=yn;break;case Ea:c=Rn;break;case"scroll":c=pn;break;case"wheel":c=On;break;case"copy":case"cut":case"paste":c=xn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=Tn}var l=0!==(4&t),d=!l&&"scroll"===e,p=l?null!==i?i+"Capture":null:i;l=[];for(var h,f=a;null!==f;){var m=(h=f).stateNode;if(5===h.tag&&null!==m&&(h=m,null!==p&&(null!=(m=Oe(f,p))&&l.push(ja(f,m,h)))),d)break;f=f.return}0<l.length&&(i=new c(i,u,null,n,r),s.push({event:i,listeners:l}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===ve||!(u=n.relatedTarget||n.fromElement)||!br(u)&&!u[fr])&&(c||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=a,null!==(u=(u=n.relatedTarget||n.toElement)?br(u):null)&&(u!==(d=Ve(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(c=null,u=a),c!==u)){if(l=fn,m="onMouseLeave",p="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(l=Tn,m="onPointerLeave",p="onPointerEnter",f="pointer"),d=null==c?i:vr(c),h=null==u?i:vr(u),(i=new l(m,f+"leave",c,n,r)).target=d,i.relatedTarget=h,m=null,br(r)===a&&((l=new l(p,f+"enter",u,n,r)).target=h,l.relatedTarget=d,m=l),d=m,c&&u)e:{for(p=u,f=0,h=l=c;h;h=qa(h))f++;for(h=0,m=p;m;m=qa(m))h++;for(;0<f-h;)l=qa(l),f--;for(;0<h-f;)p=qa(p),h--;for(;f--;){if(l===p||null!==p&&l===p.alternate)break e;l=qa(l),p=qa(p)}l=null}else l=null;null!==c&&Xa(s,i,c,l,!1),null!==u&&null!==d&&Xa(s,d,u,l,!0)}if("select"===(c=(i=a?vr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var g=Qn;else if(Hn(i))if(Zn)g=sa;else{g=ra;var y=aa}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=oa);switch(g&&(g=g(e,a))?jn(s,g,n,r):(y&&y(e,i,a),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=a?vr(a):window,e){case"focusin":(Hn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":xa=!0;break;case"contextmenu":case"mouseup":case"dragend":xa=!1,va(s,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":va(s,n,r)}var b;if(Dn)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else Vn?Wn(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(Ln&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==x?"onCompositionEnd"===x&&Vn&&(b=en()):($t="value"in(Zt=r)?Zt.value:Zt.textContent,Vn=!0)),0<(y=Ka(a,x)).length&&(x=new vn(x,e,null,n,r),s.push({event:x,listeners:y}),b?x.data=b:null!==(b=Un(n))&&(x.data=b))),(b=Pn?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(Bn=!0,zn);case"textInput":return(e=t.data)===zn&&Bn?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!Dn&&Wn(e,t)?(e=en(),Jt=$t=Zt=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=Ka(a,"onBeforeInput")).length&&(r=new vn("onBeforeInput","beforeinput",null,n,r),s.push({event:r,listeners:a}),r.data=b))}za(s,t)}))}function ja(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ka(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,o=r.stateNode;5===r.tag&&null!==o&&(r=o,null!=(o=Oe(e,n))&&a.unshift(ja(e,o,r)),null!=(o=Oe(e,t))&&a.push(ja(e,o,r))),e=e.return}return a}function qa(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Xa(e,t,n,a,r){for(var o=t._reactName,s=[];null!==n&&n!==a;){var i=n,c=i.alternate,u=i.stateNode;if(null!==c&&c===a)break;5===i.tag&&null!==u&&(i=u,r?null!=(c=Oe(n,o))&&s.unshift(ja(n,c,i)):r||null!=(c=Oe(n,o))&&s.push(ja(n,c,i))),n=n.return}0!==s.length&&e.push({event:t,listeners:s})}var Ya=/\r\n?/g,Qa=/\u0000|\uFFFD/g;function Za(e){return("string"===typeof e?e:""+e).replace(Ya,"\n").replace(Qa,"")}function $a(e,t,n){if(t=Za(t),Za(e)!==t&&n)throw Error(o(425))}function Ja(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,or="function"===typeof Promise?Promise:void 0,sr="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof or?function(e){return or.resolve(null).then(e).catch(ir)}:ar;function ir(e){setTimeout((function(){throw e}))}function cr(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Vt(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Vt(t)}function ur(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function lr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var dr=Math.random().toString(36).slice(2),pr="__reactFiber$"+dr,hr="__reactProps$"+dr,fr="__reactContainer$"+dr,mr="__reactEvents$"+dr,gr="__reactListeners$"+dr,yr="__reactHandles$"+dr;function br(e){var t=e[pr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[pr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=lr(e);null!==e;){if(n=e[pr])return n;e=lr(e)}return t}n=(e=n).parentNode}return null}function xr(e){return!(e=e[pr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function vr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function wr(e){return e[hr]||null}var kr=[],Sr=-1;function Cr(e){return{current:e}}function Ir(e){0>Sr||(e.current=kr[Sr],kr[Sr]=null,Sr--)}function Nr(e,t){Sr++,kr[Sr]=e.current,e.current=t}var _r={},Tr=Cr(_r),Er=Cr(!1),Rr=_r;function Ar(e,t){var n=e.type.contextTypes;if(!n)return _r;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,o={};for(r in n)o[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Or(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Fr(){Ir(Er),Ir(Tr)}function Dr(e,t,n){if(Tr.current!==_r)throw Error(o(168));Nr(Tr,t),Nr(Er,n)}function Mr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(o(108,G(e)||"Unknown",r));return L({},n,a)}function Pr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||_r,Rr=Tr.current,Nr(Tr,e),Nr(Er,Er.current),!0}function Lr(e,t,n){var a=e.stateNode;if(!a)throw Error(o(169));n?(e=Mr(e,t,Rr),a.__reactInternalMemoizedMergedChildContext=e,Ir(Er),Ir(Tr),Nr(Tr,e)):Ir(Er),Nr(Er,n)}var zr=null,Br=!1,Wr=!1;function Ur(e){null===zr?zr=[e]:zr.push(e)}function Vr(){if(!Wr&&null!==zr){Wr=!0;var e=0,t=xt;try{var n=zr;for(xt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}zr=null,Br=!1}catch(r){throw null!==zr&&(zr=zr.slice(e+1)),qe(Je,Vr),r}finally{xt=t,Wr=!1}}return null}var Gr=[],Hr=0,jr=null,Kr=0,qr=[],Xr=0,Yr=null,Qr=1,Zr="";function $r(e,t){Gr[Hr++]=Kr,Gr[Hr++]=jr,jr=e,Kr=t}function Jr(e,t,n){qr[Xr++]=Qr,qr[Xr++]=Zr,qr[Xr++]=Yr,Yr=e;var a=Qr;e=Zr;var r=32-st(a)-1;a&=~(1<<r),n+=1;var o=32-st(t)+r;if(30<o){var s=r-r%5;o=(a&(1<<s)-1).toString(32),a>>=s,r-=s,Qr=1<<32-st(t)+r|n<<r|a,Zr=o+e}else Qr=1<<o|n<<r|a,Zr=e}function eo(e){null!==e.return&&($r(e,1),Jr(e,1,0))}function to(e){for(;e===jr;)jr=Gr[--Hr],Gr[Hr]=null,Kr=Gr[--Hr],Gr[Hr]=null;for(;e===Yr;)Yr=qr[--Xr],qr[Xr]=null,Zr=qr[--Xr],qr[Xr]=null,Qr=qr[--Xr],qr[Xr]=null}var no=null,ao=null,ro=!1,oo=null;function so(e,t){var n=Au(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function io(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,no=e,ao=ur(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,no=e,ao=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Yr?{id:Qr,overflow:Zr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Au(18,null,null,0)).stateNode=t,n.return=e,e.child=n,no=e,ao=null,!0);default:return!1}}function co(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function uo(e){if(ro){var t=ao;if(t){var n=t;if(!io(e,t)){if(co(e))throw Error(o(418));t=ur(n.nextSibling);var a=no;t&&io(e,t)?so(a,n):(e.flags=-4097&e.flags|2,ro=!1,no=e)}}else{if(co(e))throw Error(o(418));e.flags=-4097&e.flags|2,ro=!1,no=e}}}function lo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;no=e}function po(e){if(e!==no)return!1;if(!ro)return lo(e),ro=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=ao)){if(co(e))throw ho(),Error(o(418));for(;t;)so(e,t),t=ur(t.nextSibling)}if(lo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ao=ur(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ao=null}}else ao=no?ur(e.stateNode.nextSibling):null;return!0}function ho(){for(var e=ao;e;)e=ur(e.nextSibling)}function fo(){ao=no=null,ro=!1}function mo(e){null===oo?oo=[e]:oo.push(e)}var go=v.ReactCurrentBatchConfig;function yo(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var a=n.stateNode}if(!a)throw Error(o(147,e));var r=a,s=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===s?t.ref:(t=function(e){var t=r.refs;null===e?delete t[s]:t[s]=e},t._stringRef=s,t)}if("string"!==typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function bo(e,t){throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function xo(e){return(0,e._init)(e._payload)}function vo(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Fu(e,t)).index=0,e.sibling=null,e}function s(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function c(e,t,n,a){return null===t||6!==t.tag?((t=Lu(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function u(e,t,n,a){var o=n.type;return o===S?d(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===o||"object"===typeof o&&null!==o&&o.$$typeof===O&&xo(o)===t.type)?((a=r(t,n.props)).ref=yo(e,t,n),a.return=e,a):((a=Du(n.type,n.key,n.props,null,e.mode,a)).ref=yo(e,t,n),a.return=e,a)}function l(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=zu(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function d(e,t,n,a,o){return null===t||7!==t.tag?((t=Mu(n,e.mode,a,o)).return=e,t):((t=r(t,n)).return=e,t)}function p(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Lu(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Du(t.type,t.key,t.props,null,e.mode,n)).ref=yo(e,null,t),n.return=e,n;case k:return(t=zu(t,e.mode,n)).return=e,t;case O:return p(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Mu(t,e.mode,n,null)).return=e,t;bo(e,t)}return null}function h(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:c(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?u(e,t,n,a):null;case k:return n.key===r?l(e,t,n,a):null;case O:return h(e,t,(r=n._init)(n._payload),a)}if(te(n)||M(n))return null!==r?null:d(e,t,n,a,null);bo(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return c(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case k:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case O:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||M(a))return d(t,e=e.get(n)||null,a,r,null);bo(t,a)}return null}function m(r,o,i,c){for(var u=null,l=null,d=o,m=o=0,g=null;null!==d&&m<i.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var y=h(r,d,i[m],c);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&t(r,d),o=s(y,o,m),null===l?u=y:l.sibling=y,l=y,d=g}if(m===i.length)return n(r,d),ro&&$r(r,m),u;if(null===d){for(;m<i.length;m++)null!==(d=p(r,i[m],c))&&(o=s(d,o,m),null===l?u=d:l.sibling=d,l=d);return ro&&$r(r,m),u}for(d=a(r,d);m<i.length;m++)null!==(g=f(d,r,m,i[m],c))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),o=s(g,o,m),null===l?u=g:l.sibling=g,l=g);return e&&d.forEach((function(e){return t(r,e)})),ro&&$r(r,m),u}function g(r,i,c,u){var l=M(c);if("function"!==typeof l)throw Error(o(150));if(null==(c=l.call(c)))throw Error(o(151));for(var d=l=null,m=i,g=i=0,y=null,b=c.next();null!==m&&!b.done;g++,b=c.next()){m.index>g?(y=m,m=null):y=m.sibling;var x=h(r,m,b.value,u);if(null===x){null===m&&(m=y);break}e&&m&&null===x.alternate&&t(r,m),i=s(x,i,g),null===d?l=x:d.sibling=x,d=x,m=y}if(b.done)return n(r,m),ro&&$r(r,g),l;if(null===m){for(;!b.done;g++,b=c.next())null!==(b=p(r,b.value,u))&&(i=s(b,i,g),null===d?l=b:d.sibling=b,d=b);return ro&&$r(r,g),l}for(m=a(r,m);!b.done;g++,b=c.next())null!==(b=f(m,r,g,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=s(b,i,g),null===d?l=b:d.sibling=b,d=b);return e&&m.forEach((function(e){return t(r,e)})),ro&&$r(r,g),l}return function e(a,o,s,c){if("object"===typeof s&&null!==s&&s.type===S&&null===s.key&&(s=s.props.children),"object"===typeof s&&null!==s){switch(s.$$typeof){case w:e:{for(var u=s.key,l=o;null!==l;){if(l.key===u){if((u=s.type)===S){if(7===l.tag){n(a,l.sibling),(o=r(l,s.props.children)).return=a,a=o;break e}}else if(l.elementType===u||"object"===typeof u&&null!==u&&u.$$typeof===O&&xo(u)===l.type){n(a,l.sibling),(o=r(l,s.props)).ref=yo(a,l,s),o.return=a,a=o;break e}n(a,l);break}t(a,l),l=l.sibling}s.type===S?((o=Mu(s.props.children,a.mode,c,s.key)).return=a,a=o):((c=Du(s.type,s.key,s.props,null,a.mode,c)).ref=yo(a,o,s),c.return=a,a=c)}return i(a);case k:e:{for(l=s.key;null!==o;){if(o.key===l){if(4===o.tag&&o.stateNode.containerInfo===s.containerInfo&&o.stateNode.implementation===s.implementation){n(a,o.sibling),(o=r(o,s.children||[])).return=a,a=o;break e}n(a,o);break}t(a,o),o=o.sibling}(o=zu(s,a.mode,c)).return=a,a=o}return i(a);case O:return e(a,o,(l=s._init)(s._payload),c)}if(te(s))return m(a,o,s,c);if(M(s))return g(a,o,s,c);bo(a,s)}return"string"===typeof s&&""!==s||"number"===typeof s?(s=""+s,null!==o&&6===o.tag?(n(a,o.sibling),(o=r(o,s)).return=a,a=o):(n(a,o),(o=Lu(s,a.mode,c)).return=a,a=o),i(a)):n(a,o)}}var wo=vo(!0),ko=vo(!1),So=Cr(null),Co=null,Io=null,No=null;function _o(){No=Io=Co=null}function To(e){var t=So.current;Ir(So),e._currentValue=t}function Eo(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Ro(e,t){Co=e,No=Io=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(xi=!0),e.firstContext=null)}function Ao(e){var t=e._currentValue;if(No!==e)if(e={context:e,memoizedValue:t,next:null},null===Io){if(null===Co)throw Error(o(308));Io=e,Co.dependencies={lanes:0,firstContext:e}}else Io=Io.next=e;return t}var Oo=null;function Fo(e){null===Oo?Oo=[e]:Oo.push(e)}function Do(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Fo(t)):(n.next=r.next,r.next=n),t.interleaved=n,Mo(e,a)}function Mo(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Po=!1;function Lo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function zo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Bo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Wo(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Tc)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,Mo(e,n)}return null===(r=a.interleaved)?(t.next=t,Fo(a)):(t.next=r.next,r.next=t),a.interleaved=t,Mo(e,n)}function Uo(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Vo(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var s={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?r=o=s:o=o.next=s,n=n.next}while(null!==n);null===o?r=o=t:o=o.next=t}else r=o=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:o,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Go(e,t,n,a){var r=e.updateQueue;Po=!1;var o=r.firstBaseUpdate,s=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var c=i,u=c.next;c.next=null,null===s?o=u:s.next=u,s=c;var l=e.alternate;null!==l&&((i=(l=l.updateQueue).lastBaseUpdate)!==s&&(null===i?l.firstBaseUpdate=u:i.next=u,l.lastBaseUpdate=c))}if(null!==o){var d=r.baseState;for(s=0,l=u=c=null,i=o;;){var p=i.lane,h=i.eventTime;if((a&p)===p){null!==l&&(l=l.next={eventTime:h,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(p=t,h=n,m.tag){case 1:if("function"===typeof(f=m.payload)){d=f.call(h,d,p);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(p="function"===typeof(f=m.payload)?f.call(h,d,p):f)||void 0===p)break e;d=L({},d,p);break e;case 2:Po=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(p=r.effects)?r.effects=[i]:p.push(i))}else h={eventTime:h,lane:p,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===l?(u=l=h,c=d):l=l.next=h,s|=p;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(p=i).next,p.next=null,r.lastBaseUpdate=p,r.shared.pending=null}}if(null===l&&(c=d),r.baseState=c,r.firstBaseUpdate=u,r.lastBaseUpdate=l,null!==(t=r.shared.interleaved)){r=t;do{s|=r.lane,r=r.next}while(r!==t)}else null===o&&(r.shared.lanes=0);Pc|=s,e.lanes=s,e.memoizedState=d}}function Ho(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(o(191,r));r.call(a)}}}var jo={},Ko=Cr(jo),qo=Cr(jo),Xo=Cr(jo);function Yo(e){if(e===jo)throw Error(o(174));return e}function Qo(e,t){switch(Nr(Xo,t),Nr(qo,e),Nr(Ko,jo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ce(null,"");break;default:t=ce(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ir(Ko),Nr(Ko,t)}function Zo(){Ir(Ko),Ir(qo),Ir(Xo)}function $o(e){Yo(Xo.current);var t=Yo(Ko.current),n=ce(t,e.type);t!==n&&(Nr(qo,e),Nr(Ko,n))}function Jo(e){qo.current===e&&(Ir(Ko),Ir(qo))}var es=Cr(0);function ts(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ns=[];function as(){for(var e=0;e<ns.length;e++)ns[e]._workInProgressVersionPrimary=null;ns.length=0}var rs=v.ReactCurrentDispatcher,os=v.ReactCurrentBatchConfig,ss=0,is=null,cs=null,us=null,ls=!1,ds=!1,ps=0,hs=0;function fs(){throw Error(o(321))}function ms(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ia(e[n],t[n]))return!1;return!0}function gs(e,t,n,a,r,s){if(ss=s,is=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,rs.current=null===e||null===e.memoizedState?Js:ei,e=n(a,r),ds){s=0;do{if(ds=!1,ps=0,25<=s)throw Error(o(301));s+=1,us=cs=null,t.updateQueue=null,rs.current=ti,e=n(a,r)}while(ds)}if(rs.current=$s,t=null!==cs&&null!==cs.next,ss=0,us=cs=is=null,ls=!1,t)throw Error(o(300));return e}function ys(){var e=0!==ps;return ps=0,e}function bs(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===us?is.memoizedState=us=e:us=us.next=e,us}function xs(){if(null===cs){var e=is.alternate;e=null!==e?e.memoizedState:null}else e=cs.next;var t=null===us?is.memoizedState:us.next;if(null!==t)us=t,cs=e;else{if(null===e)throw Error(o(310));e={memoizedState:(cs=e).memoizedState,baseState:cs.baseState,baseQueue:cs.baseQueue,queue:cs.queue,next:null},null===us?is.memoizedState=us=e:us=us.next=e}return us}function vs(e,t){return"function"===typeof t?t(e):t}function ws(e){var t=xs(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var a=cs,r=a.baseQueue,s=n.pending;if(null!==s){if(null!==r){var i=r.next;r.next=s.next,s.next=i}a.baseQueue=r=s,n.pending=null}if(null!==r){s=r.next,a=a.baseState;var c=i=null,u=null,l=s;do{var d=l.lane;if((ss&d)===d)null!==u&&(u=u.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),a=l.hasEagerState?l.eagerState:e(a,l.action);else{var p={lane:d,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null};null===u?(c=u=p,i=a):u=u.next=p,is.lanes|=d,Pc|=d}l=l.next}while(null!==l&&l!==s);null===u?i=a:u.next=c,ia(a,t.memoizedState)||(xi=!0),t.memoizedState=a,t.baseState=i,t.baseQueue=u,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{s=r.lane,is.lanes|=s,Pc|=s,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ks(e){var t=xs(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,s=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{s=e(s,i.action),i=i.next}while(i!==r);ia(s,t.memoizedState)||(xi=!0),t.memoizedState=s,null===t.baseQueue&&(t.baseState=s),n.lastRenderedState=s}return[s,a]}function Ss(){}function Cs(e,t){var n=is,a=xs(),r=t(),s=!ia(a.memoizedState,r);if(s&&(a.memoizedState=r,xi=!0),a=a.queue,Ps(_s.bind(null,n,a,e),[e]),a.getSnapshot!==t||s||null!==us&&1&us.memoizedState.tag){if(n.flags|=2048,As(9,Ns.bind(null,n,a,r,t),void 0,null),null===Ec)throw Error(o(349));0!==(30&ss)||Is(n,t,r)}return r}function Is(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=is.updateQueue)?(t={lastEffect:null,stores:null},is.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ns(e,t,n,a){t.value=n,t.getSnapshot=a,Ts(t)&&Es(e)}function _s(e,t,n){return n((function(){Ts(t)&&Es(e)}))}function Ts(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ia(e,n)}catch(a){return!0}}function Es(e){var t=Mo(e,1);null!==t&&nu(t,e,1,-1)}function Rs(e){var t=bs();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:vs,lastRenderedState:e},t.queue=e,e=e.dispatch=Xs.bind(null,is,e),[t.memoizedState,e]}function As(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=is.updateQueue)?(t={lastEffect:null,stores:null},is.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Os(){return xs().memoizedState}function Fs(e,t,n,a){var r=bs();is.flags|=e,r.memoizedState=As(1|t,n,void 0,void 0===a?null:a)}function Ds(e,t,n,a){var r=xs();a=void 0===a?null:a;var o=void 0;if(null!==cs){var s=cs.memoizedState;if(o=s.destroy,null!==a&&ms(a,s.deps))return void(r.memoizedState=As(t,n,o,a))}is.flags|=e,r.memoizedState=As(1|t,n,o,a)}function Ms(e,t){return Fs(8390656,8,e,t)}function Ps(e,t){return Ds(2048,8,e,t)}function Ls(e,t){return Ds(4,2,e,t)}function zs(e,t){return Ds(4,4,e,t)}function Bs(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ws(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Ds(4,4,Bs.bind(null,t,e),n)}function Us(){}function Vs(e,t){var n=xs();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&ms(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Gs(e,t){var n=xs();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&ms(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Hs(e,t,n){return 0===(21&ss)?(e.baseState&&(e.baseState=!1,xi=!0),e.memoizedState=n):(ia(n,t)||(n=mt(),is.lanes|=n,Pc|=n,e.baseState=!0),t)}function js(e,t){var n=xt;xt=0!==n&&4>n?n:4,e(!0);var a=os.transition;os.transition={};try{e(!1),t()}finally{xt=n,os.transition=a}}function Ks(){return xs().memoizedState}function qs(e,t,n){var a=tu(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},Ys(e))Qs(t,n);else if(null!==(n=Do(e,t,n,a))){nu(n,e,a,eu()),Zs(n,t,a)}}function Xs(e,t,n){var a=tu(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(Ys(e))Qs(t,r);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var s=t.lastRenderedState,i=o(s,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,s)){var c=t.interleaved;return null===c?(r.next=r,Fo(t)):(r.next=c.next,c.next=r),void(t.interleaved=r)}}catch(u){}null!==(n=Do(e,t,r,a))&&(nu(n,e,a,r=eu()),Zs(n,t,a))}}function Ys(e){var t=e.alternate;return e===is||null!==t&&t===is}function Qs(e,t){ds=ls=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Zs(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var $s={readContext:Ao,useCallback:fs,useContext:fs,useEffect:fs,useImperativeHandle:fs,useInsertionEffect:fs,useLayoutEffect:fs,useMemo:fs,useReducer:fs,useRef:fs,useState:fs,useDebugValue:fs,useDeferredValue:fs,useTransition:fs,useMutableSource:fs,useSyncExternalStore:fs,useId:fs,unstable_isNewReconciler:!1},Js={readContext:Ao,useCallback:function(e,t){return bs().memoizedState=[e,void 0===t?null:t],e},useContext:Ao,useEffect:Ms,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Fs(4194308,4,Bs.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Fs(4194308,4,e,t)},useInsertionEffect:function(e,t){return Fs(4,2,e,t)},useMemo:function(e,t){var n=bs();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=bs();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=qs.bind(null,is,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},bs().memoizedState=e},useState:Rs,useDebugValue:Us,useDeferredValue:function(e){return bs().memoizedState=e},useTransition:function(){var e=Rs(!1),t=e[0];return e=js.bind(null,e[1]),bs().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=is,r=bs();if(ro){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===Ec)throw Error(o(349));0!==(30&ss)||Is(a,t,n)}r.memoizedState=n;var s={value:n,getSnapshot:t};return r.queue=s,Ms(_s.bind(null,a,s,e),[e]),a.flags|=2048,As(9,Ns.bind(null,a,s,n,t),void 0,null),n},useId:function(){var e=bs(),t=Ec.identifierPrefix;if(ro){var n=Zr;t=":"+t+"R"+(n=(Qr&~(1<<32-st(Qr)-1)).toString(32)+n),0<(n=ps++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=hs++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ei={readContext:Ao,useCallback:Vs,useContext:Ao,useEffect:Ps,useImperativeHandle:Ws,useInsertionEffect:Ls,useLayoutEffect:zs,useMemo:Gs,useReducer:ws,useRef:Os,useState:function(){return ws(vs)},useDebugValue:Us,useDeferredValue:function(e){return Hs(xs(),cs.memoizedState,e)},useTransition:function(){return[ws(vs)[0],xs().memoizedState]},useMutableSource:Ss,useSyncExternalStore:Cs,useId:Ks,unstable_isNewReconciler:!1},ti={readContext:Ao,useCallback:Vs,useContext:Ao,useEffect:Ps,useImperativeHandle:Ws,useInsertionEffect:Ls,useLayoutEffect:zs,useMemo:Gs,useReducer:ks,useRef:Os,useState:function(){return ks(vs)},useDebugValue:Us,useDeferredValue:function(e){var t=xs();return null===cs?t.memoizedState=e:Hs(t,cs.memoizedState,e)},useTransition:function(){return[ks(vs)[0],xs().memoizedState]},useMutableSource:Ss,useSyncExternalStore:Cs,useId:Ks,unstable_isNewReconciler:!1};function ni(e,t){if(e&&e.defaultProps){for(var n in t=L({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function ai(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:L({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ri={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=eu(),r=tu(e),o=Bo(a,r);o.payload=t,void 0!==n&&null!==n&&(o.callback=n),null!==(t=Wo(e,o,r))&&(nu(t,e,r,a),Uo(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=eu(),r=tu(e),o=Bo(a,r);o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),null!==(t=Wo(e,o,r))&&(nu(t,e,r,a),Uo(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=eu(),a=tu(e),r=Bo(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Wo(e,r,a))&&(nu(t,e,a,n),Uo(t,e,a))}};function oi(e,t,n,a,r,o,s){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,o,s):!t.prototype||!t.prototype.isPureReactComponent||(!ca(n,a)||!ca(r,o))}function si(e,t,n){var a=!1,r=_r,o=t.contextType;return"object"===typeof o&&null!==o?o=Ao(o):(r=Or(t)?Rr:Tr.current,o=(a=null!==(a=t.contextTypes)&&void 0!==a)?Ar(e,r):_r),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ri,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=o),t}function ii(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&ri.enqueueReplaceState(t,t.state,null)}function ci(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs={},Lo(e);var o=t.contextType;"object"===typeof o&&null!==o?r.context=Ao(o):(o=Or(t)?Rr:Tr.current,r.context=Ar(e,o)),r.state=e.memoizedState,"function"===typeof(o=t.getDerivedStateFromProps)&&(ai(e,t,o,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&ri.enqueueReplaceState(r,r.state,null),Go(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function ui(e,t){try{var n="",a=t;do{n+=U(a),a=a.return}while(a);var r=n}catch(o){r="\nError generating stack: "+o.message+"\n"+o.stack}return{value:e,source:t,stack:r,digest:null}}function li(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function di(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var pi="function"===typeof WeakMap?WeakMap:Map;function hi(e,t,n){(n=Bo(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Hc||(Hc=!0,jc=a),di(0,t)},n}function fi(e,t,n){(n=Bo(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){di(0,t)}}var o=e.stateNode;return null!==o&&"function"===typeof o.componentDidCatch&&(n.callback=function(){di(0,t),"function"!==typeof a&&(null===Kc?Kc=new Set([this]):Kc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mi(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new pi;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Iu.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Bo(-1,1)).tag=2,Wo(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var bi=v.ReactCurrentOwner,xi=!1;function vi(e,t,n,a){t.child=null===e?ko(t,null,n,a):wo(t,e.child,n,a)}function wi(e,t,n,a,r){n=n.render;var o=t.ref;return Ro(t,r),a=gs(e,t,n,a,o,r),n=ys(),null===e||xi?(ro&&n&&eo(t),t.flags|=1,vi(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function ki(e,t,n,a,r){if(null===e){var o=n.type;return"function"!==typeof o||Ou(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Du(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Si(e,t,o,a,r))}if(o=e.child,0===(e.lanes&r)){var s=o.memoizedProps;if((n=null!==(n=n.compare)?n:ca)(s,a)&&e.ref===t.ref)return Hi(e,t,r)}return t.flags|=1,(e=Fu(o,a)).ref=t.ref,e.return=t,t.child=e}function Si(e,t,n,a,r){if(null!==e){var o=e.memoizedProps;if(ca(o,a)&&e.ref===t.ref){if(xi=!1,t.pendingProps=a=o,0===(e.lanes&r))return t.lanes=e.lanes,Hi(e,t,r);0!==(131072&e.flags)&&(xi=!0)}}return Ni(e,t,n,a,r)}function Ci(e,t,n){var a=t.pendingProps,r=a.children,o=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Nr(Fc,Oc),Oc|=n;else{if(0===(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Nr(Fc,Oc),Oc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==o?o.baseLanes:n,Nr(Fc,Oc),Oc|=a}else null!==o?(a=o.baseLanes|n,t.memoizedState=null):a=n,Nr(Fc,Oc),Oc|=a;return vi(e,t,r,n),t.child}function Ii(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ni(e,t,n,a,r){var o=Or(n)?Rr:Tr.current;return o=Ar(t,o),Ro(t,r),n=gs(e,t,n,a,o,r),a=ys(),null===e||xi?(ro&&a&&eo(t),t.flags|=1,vi(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function _i(e,t,n,a,r){if(Or(n)){var o=!0;Pr(t)}else o=!1;if(Ro(t,r),null===t.stateNode)Gi(e,t),si(t,n,a),ci(t,n,a,r),a=!0;else if(null===e){var s=t.stateNode,i=t.memoizedProps;s.props=i;var c=s.context,u=n.contextType;"object"===typeof u&&null!==u?u=Ao(u):u=Ar(t,u=Or(n)?Rr:Tr.current);var l=n.getDerivedStateFromProps,d="function"===typeof l||"function"===typeof s.getSnapshotBeforeUpdate;d||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i!==a||c!==u)&&ii(t,s,a,u),Po=!1;var p=t.memoizedState;s.state=p,Go(t,a,s,r),c=t.memoizedState,i!==a||p!==c||Er.current||Po?("function"===typeof l&&(ai(t,n,l,a),c=t.memoizedState),(i=Po||oi(t,n,i,a,p,c,u))?(d||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||("function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"===typeof s.componentDidMount&&(t.flags|=4194308)):("function"===typeof s.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=c),s.props=a,s.state=c,s.context=u,a=i):("function"===typeof s.componentDidMount&&(t.flags|=4194308),a=!1)}else{s=t.stateNode,zo(e,t),i=t.memoizedProps,u=t.type===t.elementType?i:ni(t.type,i),s.props=u,d=t.pendingProps,p=s.context,"object"===typeof(c=n.contextType)&&null!==c?c=Ao(c):c=Ar(t,c=Or(n)?Rr:Tr.current);var h=n.getDerivedStateFromProps;(l="function"===typeof h||"function"===typeof s.getSnapshotBeforeUpdate)||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i!==d||p!==c)&&ii(t,s,a,c),Po=!1,p=t.memoizedState,s.state=p,Go(t,a,s,r);var f=t.memoizedState;i!==d||p!==f||Er.current||Po?("function"===typeof h&&(ai(t,n,h,a),f=t.memoizedState),(u=Po||oi(t,n,u,a,p,f,c)||!1)?(l||"function"!==typeof s.UNSAFE_componentWillUpdate&&"function"!==typeof s.componentWillUpdate||("function"===typeof s.componentWillUpdate&&s.componentWillUpdate(a,f,c),"function"===typeof s.UNSAFE_componentWillUpdate&&s.UNSAFE_componentWillUpdate(a,f,c)),"function"===typeof s.componentDidUpdate&&(t.flags|=4),"function"===typeof s.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof s.componentDidUpdate||i===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!==typeof s.getSnapshotBeforeUpdate||i===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),s.props=a,s.state=f,s.context=c,a=u):("function"!==typeof s.componentDidUpdate||i===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!==typeof s.getSnapshotBeforeUpdate||i===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),a=!1)}return Ti(e,t,n,a,o,r)}function Ti(e,t,n,a,r,o){Ii(e,t);var s=0!==(128&t.flags);if(!a&&!s)return r&&Lr(t,n,!1),Hi(e,t,o);a=t.stateNode,bi.current=t;var i=s&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&s?(t.child=wo(t,e.child,null,o),t.child=wo(t,null,i,o)):vi(e,t,i,o),t.memoizedState=a.state,r&&Lr(t,n,!0),t.child}function Ei(e){var t=e.stateNode;t.pendingContext?Dr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Dr(0,t.context,!1),Qo(e,t.containerInfo)}function Ri(e,t,n,a,r){return fo(),mo(r),t.flags|=256,vi(e,t,n,a),t.child}var Ai,Oi,Fi,Di,Mi={dehydrated:null,treeContext:null,retryLane:0};function Pi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Li(e,t,n){var a,r=t.pendingProps,s=es.current,i=!1,c=0!==(128&t.flags);if((a=c)||(a=(null===e||null!==e.memoizedState)&&0!==(2&s)),a?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(s|=1),Nr(es,1&s),null===e)return uo(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(c=r.children,e=r.fallback,i?(r=t.mode,i=t.child,c={mode:"hidden",children:c},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=Pu(c,r,0,null),e=Mu(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Pi(n),t.memoizedState=Mi,e):zi(t,c));if(null!==(s=e.memoizedState)&&null!==(a=s.dehydrated))return function(e,t,n,a,r,s,i){if(n)return 256&t.flags?(t.flags&=-257,Bi(e,t,i,a=li(Error(o(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(s=a.fallback,r=t.mode,a=Pu({mode:"visible",children:a.children},r,0,null),(s=Mu(s,r,i,null)).flags|=2,a.return=t,s.return=t,a.sibling=s,t.child=a,0!==(1&t.mode)&&wo(t,e.child,null,i),t.child.memoizedState=Pi(i),t.memoizedState=Mi,s);if(0===(1&t.mode))return Bi(e,t,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var c=a.dgst;return a=c,Bi(e,t,i,a=li(s=Error(o(419)),a,void 0))}if(c=0!==(i&e.childLanes),xi||c){if(null!==(a=Ec)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==s.retryLane&&(s.retryLane=r,Mo(e,r),nu(a,e,r,-1))}return mu(),Bi(e,t,i,a=li(Error(o(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=_u.bind(null,e),r._reactRetry=t,null):(e=s.treeContext,ao=ur(r.nextSibling),no=t,ro=!0,oo=null,null!==e&&(qr[Xr++]=Qr,qr[Xr++]=Zr,qr[Xr++]=Yr,Qr=e.id,Zr=e.overflow,Yr=t),t=zi(t,a.children),t.flags|=4096,t)}(e,t,c,r,a,s,n);if(i){i=r.fallback,c=t.mode,a=(s=e.child).sibling;var u={mode:"hidden",children:r.children};return 0===(1&c)&&t.child!==s?((r=t.child).childLanes=0,r.pendingProps=u,t.deletions=null):(r=Fu(s,u)).subtreeFlags=14680064&s.subtreeFlags,null!==a?i=Fu(a,i):(i=Mu(i,c,n,null)).flags|=2,i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,c=null===(c=e.child.memoizedState)?Pi(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=e.childLanes&~n,t.memoizedState=Mi,r}return e=(i=e.child).sibling,r=Fu(i,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function zi(e,t){return(t=Pu({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Bi(e,t,n,a){return null!==a&&mo(a),wo(t,e.child,null,n),(e=zi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Eo(e.return,t,n)}function Ui(e,t,n,a,r){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=a,o.tail=n,o.tailMode=r)}function Vi(e,t,n){var a=t.pendingProps,r=a.revealOrder,o=a.tail;if(vi(e,t,a.children,n),0!==(2&(a=es.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Nr(es,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===ts(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Ui(t,!1,r,n,o);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===ts(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Ui(t,!0,n,null,o);break;case"together":Ui(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Gi(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Hi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Pc|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Fu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Fu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ji(e,t){if(!ro)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function Ki(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function qi(e,t,n){var a=t.pendingProps;switch(to(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ki(t),null;case 1:case 17:return Or(t.type)&&Fr(),Ki(t),null;case 3:return a=t.stateNode,Zo(),Ir(Er),Ir(Tr),as(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(po(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==oo&&(su(oo),oo=null))),Oi(e,t),Ki(t),null;case 5:Jo(t);var r=Yo(Xo.current);if(n=t.type,null!==e&&null!=t.stateNode)Fi(e,t,n,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(o(166));return Ki(t),null}if(e=Yo(Ko.current),po(t)){a=t.stateNode,n=t.type;var s=t.memoizedProps;switch(a[pr]=t,a[hr]=s,e=0!==(1&t.mode),n){case"dialog":Ba("cancel",a),Ba("close",a);break;case"iframe":case"object":case"embed":Ba("load",a);break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],a);break;case"source":Ba("error",a);break;case"img":case"image":case"link":Ba("error",a),Ba("load",a);break;case"details":Ba("toggle",a);break;case"input":Q(a,s),Ba("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!s.multiple},Ba("invalid",a);break;case"textarea":re(a,s),Ba("invalid",a)}for(var c in be(n,s),r=null,s)if(s.hasOwnProperty(c)){var u=s[c];"children"===c?"string"===typeof u?a.textContent!==u&&(!0!==s.suppressHydrationWarning&&$a(a.textContent,u,e),r=["children",u]):"number"===typeof u&&a.textContent!==""+u&&(!0!==s.suppressHydrationWarning&&$a(a.textContent,u,e),r=["children",""+u]):i.hasOwnProperty(c)&&null!=u&&"onScroll"===c&&Ba("scroll",a)}switch(n){case"input":K(a),J(a,s,!0);break;case"textarea":K(a),se(a);break;case"select":case"option":break;default:"function"===typeof s.onClick&&(a.onclick=Ja)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{c=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=c.createElement(n,{is:a.is}):(e=c.createElement(n),"select"===n&&(c=e,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):e=c.createElementNS(e,n),e[pr]=t,e[hr]=a,Ai(e,t,!1,!1),t.stateNode=e;e:{switch(c=xe(n,a),n){case"dialog":Ba("cancel",e),Ba("close",e),r=a;break;case"iframe":case"object":case"embed":Ba("load",e),r=a;break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],e);r=a;break;case"source":Ba("error",e),r=a;break;case"img":case"image":case"link":Ba("error",e),Ba("load",e),r=a;break;case"details":Ba("toggle",e),r=a;break;case"input":Q(e,a),r=Y(e,a),Ba("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=L({},a,{value:void 0}),Ba("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Ba("invalid",e)}for(s in be(n,r),u=r)if(u.hasOwnProperty(s)){var l=u[s];"style"===s?ge(e,l):"dangerouslySetInnerHTML"===s?null!=(l=l?l.__html:void 0)&&de(e,l):"children"===s?"string"===typeof l?("textarea"!==n||""!==l)&&pe(e,l):"number"===typeof l&&pe(e,""+l):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(i.hasOwnProperty(s)?null!=l&&"onScroll"===s&&Ba("scroll",e):null!=l&&x(e,s,l,c))}switch(n){case"input":K(e),J(e,a,!1);break;case"textarea":K(e),se(e);break;case"option":null!=a.value&&e.setAttribute("value",""+H(a.value));break;case"select":e.multiple=!!a.multiple,null!=(s=a.value)?ne(e,!!a.multiple,s,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=Ja)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Ki(t),null;case 6:if(e&&null!=t.stateNode)Di(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(o(166));if(n=Yo(Xo.current),Yo(Ko.current),po(t)){if(a=t.stateNode,n=t.memoizedProps,a[pr]=t,(s=a.nodeValue!==n)&&null!==(e=no))switch(e.tag){case 3:$a(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&$a(a.nodeValue,n,0!==(1&e.mode))}s&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[pr]=t,t.stateNode=a}return Ki(t),null;case 13:if(Ir(es),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ro&&null!==ao&&0!==(1&t.mode)&&0===(128&t.flags))ho(),fo(),t.flags|=98560,s=!1;else if(s=po(t),null!==a&&null!==a.dehydrated){if(null===e){if(!s)throw Error(o(318));if(!(s=null!==(s=t.memoizedState)?s.dehydrated:null))throw Error(o(317));s[pr]=t}else fo(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Ki(t),s=!1}else null!==oo&&(su(oo),oo=null),s=!0;if(!s)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&es.current)?0===Dc&&(Dc=3):mu())),null!==t.updateQueue&&(t.flags|=4),Ki(t),null);case 4:return Zo(),Oi(e,t),null===e&&Va(t.stateNode.containerInfo),Ki(t),null;case 10:return To(t.type._context),Ki(t),null;case 19:if(Ir(es),null===(s=t.memoizedState))return Ki(t),null;if(a=0!==(128&t.flags),null===(c=s.rendering))if(a)ji(s,!1);else{if(0!==Dc||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=ts(e))){for(t.flags|=128,ji(s,!1),null!==(a=c.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(s=n).flags&=14680066,null===(c=s.alternate)?(s.childLanes=0,s.lanes=e,s.child=null,s.subtreeFlags=0,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null,s.stateNode=null):(s.childLanes=c.childLanes,s.lanes=c.lanes,s.child=c.child,s.subtreeFlags=0,s.deletions=null,s.memoizedProps=c.memoizedProps,s.memoizedState=c.memoizedState,s.updateQueue=c.updateQueue,s.type=c.type,e=c.dependencies,s.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Nr(es,1&es.current|2),t.child}e=e.sibling}null!==s.tail&&Ze()>Vc&&(t.flags|=128,a=!0,ji(s,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=ts(c))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ji(s,!0),null===s.tail&&"hidden"===s.tailMode&&!c.alternate&&!ro)return Ki(t),null}else 2*Ze()-s.renderingStartTime>Vc&&1073741824!==n&&(t.flags|=128,a=!0,ji(s,!1),t.lanes=4194304);s.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=s.last)?n.sibling=c:t.child=c,s.last=c)}return null!==s.tail?(t=s.tail,s.rendering=t,s.tail=t.sibling,s.renderingStartTime=Ze(),t.sibling=null,n=es.current,Nr(es,a?1&n|2:1&n),t):(Ki(t),null);case 22:case 23:return du(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Oc)&&(Ki(t),6&t.subtreeFlags&&(t.flags|=8192)):Ki(t),null;case 24:case 25:return null}throw Error(o(156,t.tag))}function Xi(e,t){switch(to(t),t.tag){case 1:return Or(t.type)&&Fr(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Zo(),Ir(Er),Ir(Tr),as(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Jo(t),null;case 13:if(Ir(es),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));fo()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ir(es),null;case 4:return Zo(),null;case 10:return To(t.type._context),null;case 22:case 23:return du(),null;default:return null}}Ai=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Oi=function(){},Fi=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,Yo(Ko.current);var o,s=null;switch(n){case"input":r=Y(e,r),a=Y(e,a),s=[];break;case"select":r=L({},r,{value:void 0}),a=L({},a,{value:void 0}),s=[];break;case"textarea":r=ae(e,r),a=ae(e,a),s=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=Ja)}for(l in be(n,a),n=null,r)if(!a.hasOwnProperty(l)&&r.hasOwnProperty(l)&&null!=r[l])if("style"===l){var c=r[l];for(o in c)c.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(i.hasOwnProperty(l)?s||(s=[]):(s=s||[]).push(l,null));for(l in a){var u=a[l];if(c=null!=r?r[l]:void 0,a.hasOwnProperty(l)&&u!==c&&(null!=u||null!=c))if("style"===l)if(c){for(o in c)!c.hasOwnProperty(o)||u&&u.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in u)u.hasOwnProperty(o)&&c[o]!==u[o]&&(n||(n={}),n[o]=u[o])}else n||(s||(s=[]),s.push(l,n)),n=u;else"dangerouslySetInnerHTML"===l?(u=u?u.__html:void 0,c=c?c.__html:void 0,null!=u&&c!==u&&(s=s||[]).push(l,u)):"children"===l?"string"!==typeof u&&"number"!==typeof u||(s=s||[]).push(l,""+u):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(i.hasOwnProperty(l)?(null!=u&&"onScroll"===l&&Ba("scroll",e),s||c===u||(s=[])):(s=s||[]).push(l,u))}n&&(s=s||[]).push("style",n);var l=s;(t.updateQueue=l)&&(t.flags|=4)}},Di=function(e,t,n,a){n!==a&&(t.flags|=4)};var Yi=!1,Qi=!1,Zi="function"===typeof WeakSet?WeakSet:Set,$i=null;function Ji(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Cu(e,t,a)}else n.current=null}function ec(e,t,n){try{n()}catch(a){Cu(e,t,a)}}var tc=!1;function nc(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var o=r.destroy;r.destroy=void 0,void 0!==o&&ec(t,n,o)}r=r.next}while(r!==a)}}function ac(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function rc(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function oc(e){var t=e.alternate;null!==t&&(e.alternate=null,oc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[pr],delete t[hr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function sc(e){return 5===e.tag||3===e.tag||4===e.tag}function ic(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||sc(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Ja));else if(4!==a&&null!==(e=e.child))for(cc(e,t,n),e=e.sibling;null!==e;)cc(e,t,n),e=e.sibling}function uc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(uc(e,t,n),e=e.sibling;null!==e;)uc(e,t,n),e=e.sibling}var lc=null,dc=!1;function pc(e,t,n){for(n=n.child;null!==n;)hc(e,t,n),n=n.sibling}function hc(e,t,n){if(ot&&"function"===typeof ot.onCommitFiberUnmount)try{ot.onCommitFiberUnmount(rt,n)}catch(i){}switch(n.tag){case 5:Qi||Ji(n,t);case 6:var a=lc,r=dc;lc=null,pc(e,t,n),dc=r,null!==(lc=a)&&(dc?(e=lc,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):lc.removeChild(n.stateNode));break;case 18:null!==lc&&(dc?(e=lc,n=n.stateNode,8===e.nodeType?cr(e.parentNode,n):1===e.nodeType&&cr(e,n),Vt(e)):cr(lc,n.stateNode));break;case 4:a=lc,r=dc,lc=n.stateNode.containerInfo,dc=!0,pc(e,t,n),lc=a,dc=r;break;case 0:case 11:case 14:case 15:if(!Qi&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var o=r,s=o.destroy;o=o.tag,void 0!==s&&(0!==(2&o)||0!==(4&o))&&ec(n,t,s),r=r.next}while(r!==a)}pc(e,t,n);break;case 1:if(!Qi&&(Ji(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Cu(n,t,i)}pc(e,t,n);break;case 21:pc(e,t,n);break;case 22:1&n.mode?(Qi=(a=Qi)||null!==n.memoizedState,pc(e,t,n),Qi=a):pc(e,t,n);break;default:pc(e,t,n)}}function fc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zi),t.forEach((function(t){var a=Tu.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function mc(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var s=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 5:lc=c.stateNode,dc=!1;break e;case 3:case 4:lc=c.stateNode.containerInfo,dc=!0;break e}c=c.return}if(null===lc)throw Error(o(160));hc(s,i,r),lc=null,dc=!1;var u=r.alternate;null!==u&&(u.return=null),r.return=null}catch(l){Cu(r,t,l)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gc(t,e),t=t.sibling}function gc(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mc(t,e),yc(e),4&a){try{nc(3,e,e.return),ac(3,e)}catch(g){Cu(e,e.return,g)}try{nc(5,e,e.return)}catch(g){Cu(e,e.return,g)}}break;case 1:mc(t,e),yc(e),512&a&&null!==n&&Ji(n,n.return);break;case 5:if(mc(t,e),yc(e),512&a&&null!==n&&Ji(n,n.return),32&e.flags){var r=e.stateNode;try{pe(r,"")}catch(g){Cu(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var s=e.memoizedProps,i=null!==n?n.memoizedProps:s,c=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===c&&"radio"===s.type&&null!=s.name&&Z(r,s),xe(c,i);var l=xe(c,s);for(i=0;i<u.length;i+=2){var d=u[i],p=u[i+1];"style"===d?ge(r,p):"dangerouslySetInnerHTML"===d?de(r,p):"children"===d?pe(r,p):x(r,d,p,l)}switch(c){case"input":$(r,s);break;case"textarea":oe(r,s);break;case"select":var h=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!s.multiple;var f=s.value;null!=f?ne(r,!!s.multiple,f,!1):h!==!!s.multiple&&(null!=s.defaultValue?ne(r,!!s.multiple,s.defaultValue,!0):ne(r,!!s.multiple,s.multiple?[]:"",!1))}r[hr]=s}catch(g){Cu(e,e.return,g)}}break;case 6:if(mc(t,e),yc(e),4&a){if(null===e.stateNode)throw Error(o(162));r=e.stateNode,s=e.memoizedProps;try{r.nodeValue=s}catch(g){Cu(e,e.return,g)}}break;case 3:if(mc(t,e),yc(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Vt(t.containerInfo)}catch(g){Cu(e,e.return,g)}break;case 4:default:mc(t,e),yc(e);break;case 13:mc(t,e),yc(e),8192&(r=e.child).flags&&(s=null!==r.memoizedState,r.stateNode.isHidden=s,!s||null!==r.alternate&&null!==r.alternate.memoizedState||(Uc=Ze())),4&a&&fc(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Qi=(l=Qi)||d,mc(t,e),Qi=l):mc(t,e),yc(e),8192&a){if(l=null!==e.memoizedState,(e.stateNode.isHidden=l)&&!d&&0!==(1&e.mode))for($i=e,d=e.child;null!==d;){for(p=$i=d;null!==$i;){switch(f=(h=$i).child,h.tag){case 0:case 11:case 14:case 15:nc(4,h,h.return);break;case 1:Ji(h,h.return);var m=h.stateNode;if("function"===typeof m.componentWillUnmount){a=h,n=h.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Cu(a,n,g)}}break;case 5:Ji(h,h.return);break;case 22:if(null!==h.memoizedState){wc(p);continue}}null!==f?(f.return=h,$i=f):wc(p)}d=d.sibling}e:for(d=null,p=e;;){if(5===p.tag){if(null===d){d=p;try{r=p.stateNode,l?"function"===typeof(s=r.style).setProperty?s.setProperty("display","none","important"):s.display="none":(c=p.stateNode,i=void 0!==(u=p.memoizedProps.style)&&null!==u&&u.hasOwnProperty("display")?u.display:null,c.style.display=me("display",i))}catch(g){Cu(e,e.return,g)}}}else if(6===p.tag){if(null===d)try{p.stateNode.nodeValue=l?"":p.memoizedProps}catch(g){Cu(e,e.return,g)}}else if((22!==p.tag&&23!==p.tag||null===p.memoizedState||p===e)&&null!==p.child){p.child.return=p,p=p.child;continue}if(p===e)break e;for(;null===p.sibling;){if(null===p.return||p.return===e)break e;d===p&&(d=null),p=p.return}d===p&&(d=null),p.sibling.return=p.return,p=p.sibling}}break;case 19:mc(t,e),yc(e),4&a&&fc(e);case 21:}}function yc(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(sc(n)){var a=n;break e}n=n.return}throw Error(o(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(pe(r,""),a.flags&=-33),uc(e,ic(e),r);break;case 3:case 4:var s=a.stateNode.containerInfo;cc(e,ic(e),s);break;default:throw Error(o(161))}}catch(i){Cu(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bc(e,t,n){$i=e,xc(e,t,n)}function xc(e,t,n){for(var a=0!==(1&e.mode);null!==$i;){var r=$i,o=r.child;if(22===r.tag&&a){var s=null!==r.memoizedState||Yi;if(!s){var i=r.alternate,c=null!==i&&null!==i.memoizedState||Qi;i=Yi;var u=Qi;if(Yi=s,(Qi=c)&&!u)for($i=r;null!==$i;)c=(s=$i).child,22===s.tag&&null!==s.memoizedState?kc(r):null!==c?(c.return=s,$i=c):kc(r);for(;null!==o;)$i=o,xc(o,t,n),o=o.sibling;$i=r,Yi=i,Qi=u}vc(e)}else 0!==(8772&r.subtreeFlags)&&null!==o?(o.return=r,$i=o):vc(e)}}function vc(e){for(;null!==$i;){var t=$i;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Qi||ac(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Qi)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:ni(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var s=t.updateQueue;null!==s&&Ho(t,s,a);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Ho(t,i,n)}break;case 5:var c=t.stateNode;if(null===n&&4&t.flags){n=c;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var l=t.alternate;if(null!==l){var d=l.memoizedState;if(null!==d){var p=d.dehydrated;null!==p&&Vt(p)}}}break;default:throw Error(o(163))}Qi||512&t.flags&&rc(t)}catch(h){Cu(t,t.return,h)}}if(t===e){$i=null;break}if(null!==(n=t.sibling)){n.return=t.return,$i=n;break}$i=t.return}}function wc(e){for(;null!==$i;){var t=$i;if(t===e){$i=null;break}var n=t.sibling;if(null!==n){n.return=t.return,$i=n;break}$i=t.return}}function kc(e){for(;null!==$i;){var t=$i;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ac(4,t)}catch(c){Cu(t,n,c)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(c){Cu(t,r,c)}}var o=t.return;try{rc(t)}catch(c){Cu(t,o,c)}break;case 5:var s=t.return;try{rc(t)}catch(c){Cu(t,s,c)}}}catch(c){Cu(t,t.return,c)}if(t===e){$i=null;break}var i=t.sibling;if(null!==i){i.return=t.return,$i=i;break}$i=t.return}}var Sc,Cc=Math.ceil,Ic=v.ReactCurrentDispatcher,Nc=v.ReactCurrentOwner,_c=v.ReactCurrentBatchConfig,Tc=0,Ec=null,Rc=null,Ac=0,Oc=0,Fc=Cr(0),Dc=0,Mc=null,Pc=0,Lc=0,zc=0,Bc=null,Wc=null,Uc=0,Vc=1/0,Gc=null,Hc=!1,jc=null,Kc=null,qc=!1,Xc=null,Yc=0,Qc=0,Zc=null,$c=-1,Jc=0;function eu(){return 0!==(6&Tc)?Ze():-1!==$c?$c:$c=Ze()}function tu(e){return 0===(1&e.mode)?1:0!==(2&Tc)&&0!==Ac?Ac&-Ac:null!==go.transition?(0===Jc&&(Jc=mt()),Jc):0!==(e=xt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function nu(e,t,n,a){if(50<Qc)throw Qc=0,Zc=null,Error(o(185));yt(e,n,a),0!==(2&Tc)&&e===Ec||(e===Ec&&(0===(2&Tc)&&(Lc|=n),4===Dc&&iu(e,Ac)),au(e,a),1===n&&0===Tc&&0===(1&t.mode)&&(Vc=Ze()+500,Br&&Vr()))}function au(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,o=e.pendingLanes;0<o;){var s=31-st(o),i=1<<s,c=r[s];-1===c?0!==(i&n)&&0===(i&a)||(r[s]=ht(i,t)):c<=t&&(e.expiredLanes|=i),o&=~i}}(e,t);var a=pt(e,e===Ec?Ac:0);if(0===a)null!==n&&Xe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Xe(n),1===t)0===e.tag?function(e){Br=!0,Ur(e)}(cu.bind(null,e)):Ur(cu.bind(null,e)),sr((function(){0===(6&Tc)&&Vr()})),n=null;else{switch(vt(a)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=Eu(n,ru.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ru(e,t){if($c=-1,Jc=0,0!==(6&Tc))throw Error(o(327));var n=e.callbackNode;if(ku()&&e.callbackNode!==n)return null;var a=pt(e,e===Ec?Ac:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=gu(e,a);else{t=a;var r=Tc;Tc|=2;var s=fu();for(Ec===e&&Ac===t||(Gc=null,Vc=Ze()+500,pu(e,t));;)try{bu();break}catch(c){hu(e,c)}_o(),Ic.current=s,Tc=r,null!==Rc?t=0:(Ec=null,Ac=0,t=Dc)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=ou(e,r))),1===t)throw n=Mc,pu(e,0),iu(e,a),au(e,Ze()),n;if(6===t)iu(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],o=r.getSnapshot;r=r.value;try{if(!ia(o(),r))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=gu(e,a))&&(0!==(s=ft(e))&&(a=s,t=ou(e,s))),1===t))throw n=Mc,pu(e,0),iu(e,a),au(e,Ze()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(o(345));case 2:case 5:wu(e,Wc,Gc);break;case 3:if(iu(e,a),(130023424&a)===a&&10<(t=Uc+500-Ze())){if(0!==pt(e,0))break;if(((r=e.suspendedLanes)&a)!==a){eu(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(wu.bind(null,e,Wc,Gc),t);break}wu(e,Wc,Gc);break;case 4:if(iu(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var i=31-st(a);s=1<<i,(i=t[i])>r&&(r=i),a&=~s}if(a=r,10<(a=(120>(a=Ze()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Cc(a/1960))-a)){e.timeoutHandle=ar(wu.bind(null,e,Wc,Gc),a);break}wu(e,Wc,Gc);break;default:throw Error(o(329))}}}return au(e,Ze()),e.callbackNode===n?ru.bind(null,e):null}function ou(e,t){var n=Bc;return e.current.memoizedState.isDehydrated&&(pu(e,t).flags|=256),2!==(e=gu(e,t))&&(t=Wc,Wc=n,null!==t&&su(t)),e}function su(e){null===Wc?Wc=e:Wc.push.apply(Wc,e)}function iu(e,t){for(t&=~zc,t&=~Lc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-st(t),a=1<<n;e[n]=-1,t&=~a}}function cu(e){if(0!==(6&Tc))throw Error(o(327));ku();var t=pt(e,0);if(0===(1&t))return au(e,Ze()),null;var n=gu(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=ou(e,a))}if(1===n)throw n=Mc,pu(e,0),iu(e,t),au(e,Ze()),n;if(6===n)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wu(e,Wc,Gc),au(e,Ze()),null}function uu(e,t){var n=Tc;Tc|=1;try{return e(t)}finally{0===(Tc=n)&&(Vc=Ze()+500,Br&&Vr())}}function lu(e){null!==Xc&&0===Xc.tag&&0===(6&Tc)&&ku();var t=Tc;Tc|=1;var n=_c.transition,a=xt;try{if(_c.transition=null,xt=1,e)return e()}finally{xt=a,_c.transition=n,0===(6&(Tc=t))&&Vr()}}function du(){Oc=Fc.current,Ir(Fc)}function pu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Rc)for(n=Rc.return;null!==n;){var a=n;switch(to(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Fr();break;case 3:Zo(),Ir(Er),Ir(Tr),as();break;case 5:Jo(a);break;case 4:Zo();break;case 13:case 19:Ir(es);break;case 10:To(a.type._context);break;case 22:case 23:du()}n=n.return}if(Ec=e,Rc=e=Fu(e.current,null),Ac=Oc=t,Dc=0,Mc=null,zc=Lc=Pc=0,Wc=Bc=null,null!==Oo){for(t=0;t<Oo.length;t++)if(null!==(a=(n=Oo[t]).interleaved)){n.interleaved=null;var r=a.next,o=n.pending;if(null!==o){var s=o.next;o.next=r,a.next=s}n.pending=a}Oo=null}return e}function hu(e,t){for(;;){var n=Rc;try{if(_o(),rs.current=$s,ls){for(var a=is.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}ls=!1}if(ss=0,us=cs=is=null,ds=!1,ps=0,Nc.current=null,null===n||null===n.return){Dc=1,Mc=t,Rc=null;break}e:{var s=e,i=n.return,c=n,u=t;if(t=Ac,c.flags|=32768,null!==u&&"object"===typeof u&&"function"===typeof u.then){var l=u,d=c,p=d.tag;if(0===(1&d.mode)&&(0===p||11===p||15===p)){var h=d.alternate;h?(d.updateQueue=h.updateQueue,d.memoizedState=h.memoizedState,d.lanes=h.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=gi(i);if(null!==f){f.flags&=-257,yi(f,i,c,0,t),1&f.mode&&mi(s,l,t),u=l;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(u),t.updateQueue=g}else m.add(u);break e}if(0===(1&t)){mi(s,l,t),mu();break e}u=Error(o(426))}else if(ro&&1&c.mode){var y=gi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yi(y,i,c,0,t),mo(ui(u,c));break e}}s=u=ui(u,c),4!==Dc&&(Dc=2),null===Bc?Bc=[s]:Bc.push(s),s=i;do{switch(s.tag){case 3:s.flags|=65536,t&=-t,s.lanes|=t,Vo(s,hi(0,u,t));break e;case 1:c=u;var b=s.type,x=s.stateNode;if(0===(128&s.flags)&&("function"===typeof b.getDerivedStateFromError||null!==x&&"function"===typeof x.componentDidCatch&&(null===Kc||!Kc.has(x)))){s.flags|=65536,t&=-t,s.lanes|=t,Vo(s,fi(s,c,t));break e}}s=s.return}while(null!==s)}vu(n)}catch(v){t=v,Rc===n&&null!==n&&(Rc=n=n.return);continue}break}}function fu(){var e=Ic.current;return Ic.current=$s,null===e?$s:e}function mu(){0!==Dc&&3!==Dc&&2!==Dc||(Dc=4),null===Ec||0===(268435455&Pc)&&0===(268435455&Lc)||iu(Ec,Ac)}function gu(e,t){var n=Tc;Tc|=2;var a=fu();for(Ec===e&&Ac===t||(Gc=null,pu(e,t));;)try{yu();break}catch(r){hu(e,r)}if(_o(),Tc=n,Ic.current=a,null!==Rc)throw Error(o(261));return Ec=null,Ac=0,Dc}function yu(){for(;null!==Rc;)xu(Rc)}function bu(){for(;null!==Rc&&!Ye();)xu(Rc)}function xu(e){var t=Sc(e.alternate,e,Oc);e.memoizedProps=e.pendingProps,null===t?vu(e):Rc=t,Nc.current=null}function vu(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=qi(n,t,Oc)))return void(Rc=n)}else{if(null!==(n=Xi(n,t)))return n.flags&=32767,void(Rc=n);if(null===e)return Dc=6,void(Rc=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rc=t);Rc=t=e}while(null!==t);0===Dc&&(Dc=5)}function wu(e,t,n){var a=xt,r=_c.transition;try{_c.transition=null,xt=1,function(e,t,n,a){do{ku()}while(null!==Xc);if(0!==(6&Tc))throw Error(o(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var s=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-st(n),o=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~o}}(e,s),e===Ec&&(Rc=Ec=null,Ac=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||qc||(qc=!0,Eu(tt,(function(){return ku(),null}))),s=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||s){s=_c.transition,_c.transition=null;var i=xt;xt=1;var c=Tc;Tc|=4,Nc.current=null,function(e,t){if(er=Ht,ha(e=pa())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,s=a.focusNode;a=a.focusOffset;try{n.nodeType,s.nodeType}catch(w){n=null;break e}var i=0,c=-1,u=-1,l=0,d=0,p=e,h=null;t:for(;;){for(var f;p!==n||0!==r&&3!==p.nodeType||(c=i+r),p!==s||0!==a&&3!==p.nodeType||(u=i+a),3===p.nodeType&&(i+=p.nodeValue.length),null!==(f=p.firstChild);)h=p,p=f;for(;;){if(p===e)break t;if(h===n&&++l===r&&(c=i),h===s&&++d===a&&(u=i),null!==(f=p.nextSibling))break;h=(p=h).parentNode}p=f}n=-1===c||-1===u?null:{start:c,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},Ht=!1,$i=t;null!==$i;)if(e=(t=$i).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,$i=e;else for(;null!==$i;){t=$i;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,x=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:ni(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var v=t.stateNode.containerInfo;1===v.nodeType?v.textContent="":9===v.nodeType&&v.documentElement&&v.removeChild(v.documentElement);break;default:throw Error(o(163))}}catch(w){Cu(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,$i=e;break}$i=t.return}m=tc,tc=!1}(e,n),gc(n,e),fa(tr),Ht=!!er,tr=er=null,e.current=n,bc(n,e,r),Qe(),Tc=c,xt=i,_c.transition=s}else e.current=n;if(qc&&(qc=!1,Xc=e,Yc=r),s=e.pendingLanes,0===s&&(Kc=null),function(e){if(ot&&"function"===typeof ot.onCommitFiberRoot)try{ot.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),au(e,Ze()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(Hc)throw Hc=!1,e=jc,jc=null,e;0!==(1&Yc)&&0!==e.tag&&ku(),s=e.pendingLanes,0!==(1&s)?e===Zc?Qc++:(Qc=0,Zc=e):Qc=0,Vr()}(e,t,n,a)}finally{_c.transition=r,xt=a}return null}function ku(){if(null!==Xc){var e=vt(Yc),t=_c.transition,n=xt;try{if(_c.transition=null,xt=16>e?16:e,null===Xc)var a=!1;else{if(e=Xc,Xc=null,Yc=0,0!==(6&Tc))throw Error(o(331));var r=Tc;for(Tc|=4,$i=e.current;null!==$i;){var s=$i,i=s.child;if(0!==(16&$i.flags)){var c=s.deletions;if(null!==c){for(var u=0;u<c.length;u++){var l=c[u];for($i=l;null!==$i;){var d=$i;switch(d.tag){case 0:case 11:case 15:nc(8,d,s)}var p=d.child;if(null!==p)p.return=d,$i=p;else for(;null!==$i;){var h=(d=$i).sibling,f=d.return;if(oc(d),d===l){$i=null;break}if(null!==h){h.return=f,$i=h;break}$i=f}}}var m=s.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}$i=s}}if(0!==(2064&s.subtreeFlags)&&null!==i)i.return=s,$i=i;else e:for(;null!==$i;){if(0!==(2048&(s=$i).flags))switch(s.tag){case 0:case 11:case 15:nc(9,s,s.return)}var b=s.sibling;if(null!==b){b.return=s.return,$i=b;break e}$i=s.return}}var x=e.current;for($i=x;null!==$i;){var v=(i=$i).child;if(0!==(2064&i.subtreeFlags)&&null!==v)v.return=i,$i=v;else e:for(i=x;null!==$i;){if(0!==(2048&(c=$i).flags))try{switch(c.tag){case 0:case 11:case 15:ac(9,c)}}catch(k){Cu(c,c.return,k)}if(c===i){$i=null;break e}var w=c.sibling;if(null!==w){w.return=c.return,$i=w;break e}$i=c.return}}if(Tc=r,Vr(),ot&&"function"===typeof ot.onPostCommitFiberRoot)try{ot.onPostCommitFiberRoot(rt,e)}catch(k){}a=!0}return a}finally{xt=n,_c.transition=t}}return!1}function Su(e,t,n){e=Wo(e,t=hi(0,t=ui(n,t),1),1),t=eu(),null!==e&&(yt(e,1,t),au(e,t))}function Cu(e,t,n){if(3===e.tag)Su(e,e,n);else for(;null!==t;){if(3===t.tag){Su(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===Kc||!Kc.has(a))){t=Wo(t,e=fi(t,e=ui(n,e),1),1),e=eu(),null!==t&&(yt(t,1,e),au(t,e));break}}t=t.return}}function Iu(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=eu(),e.pingedLanes|=e.suspendedLanes&n,Ec===e&&(Ac&n)===n&&(4===Dc||3===Dc&&(130023424&Ac)===Ac&&500>Ze()-Uc?pu(e,0):zc|=n),au(e,t)}function Nu(e,t){0===t&&(0===(1&e.mode)?t=1:(t=lt,0===(130023424&(lt<<=1))&&(lt=4194304)));var n=eu();null!==(e=Mo(e,t))&&(yt(e,t,n),au(e,n))}function _u(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Nu(e,n)}function Tu(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(o(314))}null!==a&&a.delete(t),Nu(e,n)}function Eu(e,t){return qe(e,t)}function Ru(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Au(e,t,n,a){return new Ru(e,t,n,a)}function Ou(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Fu(e,t){var n=e.alternate;return null===n?((n=Au(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Du(e,t,n,a,r,s){var i=2;if(a=e,"function"===typeof e)Ou(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case S:return Mu(n.children,r,s,t);case C:i=8,r|=8;break;case I:return(e=Au(12,n,t,2|r)).elementType=I,e.lanes=s,e;case E:return(e=Au(13,n,t,r)).elementType=E,e.lanes=s,e;case R:return(e=Au(19,n,t,r)).elementType=R,e.lanes=s,e;case F:return Pu(n,r,s,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case N:i=10;break e;case _:i=9;break e;case T:i=11;break e;case A:i=14;break e;case O:i=16,a=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Au(i,n,t,r)).elementType=e,t.type=a,t.lanes=s,t}function Mu(e,t,n,a){return(e=Au(7,e,a,t)).lanes=n,e}function Pu(e,t,n,a){return(e=Au(22,e,a,t)).elementType=F,e.lanes=n,e.stateNode={isHidden:!1},e}function Lu(e,t,n){return(e=Au(6,e,null,t)).lanes=n,e}function zu(e,t,n){return(t=Au(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bu(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Wu(e,t,n,a,r,o,s,i,c){return e=new Bu(e,t,n,i,c),1===t?(t=1,!0===o&&(t|=8)):t=0,o=Au(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Lo(o),e}function Uu(e){if(!e)return _r;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Or(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(o(171))}if(1===e.tag){var n=e.type;if(Or(n))return Mr(e,n,t)}return t}function Vu(e,t,n,a,r,o,s,i,c){return(e=Wu(n,a,!0,e,0,o,0,i,c)).context=Uu(null),n=e.current,(o=Bo(a=eu(),r=tu(n))).callback=void 0!==t&&null!==t?t:null,Wo(n,o,r),e.current.lanes=r,yt(e,r,a),au(e,a),e}function Gu(e,t,n,a){var r=t.current,o=eu(),s=tu(r);return n=Uu(n),null===t.context?t.context=n:t.pendingContext=n,(t=Bo(o,s)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Wo(r,t,s))&&(nu(e,r,s,o),Uo(e,r,s)),s}function Hu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function ju(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Ku(e,t){ju(e,t),(e=e.alternate)&&ju(e,t)}Sc=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Er.current)xi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return xi=!1,function(e,t,n){switch(t.tag){case 3:Ei(t),fo();break;case 5:$o(t);break;case 1:Or(t.type)&&Pr(t);break;case 4:Qo(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Nr(So,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Nr(es,1&es.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Li(e,t,n):(Nr(es,1&es.current),null!==(e=Hi(e,t,n))?e.sibling:null);Nr(es,1&es.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Vi(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Nr(es,es.current),a)break;return null;case 22:case 23:return t.lanes=0,Ci(e,t,n)}return Hi(e,t,n)}(e,t,n);xi=0!==(131072&e.flags)}else xi=!1,ro&&0!==(1048576&t.flags)&&Jr(t,Kr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Gi(e,t),e=t.pendingProps;var r=Ar(t,Tr.current);Ro(t,n),r=gs(null,t,a,e,r,n);var s=ys();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Or(a)?(s=!0,Pr(t)):s=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Lo(t),r.updater=ri,t.stateNode=r,r._reactInternals=t,ci(t,a,e,n),t=Ti(null,t,a,!0,s,n)):(t.tag=0,ro&&s&&eo(t),vi(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Gi(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Ou(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===T)return 11;if(e===A)return 14}return 2}(a),e=ni(a,e),r){case 0:t=Ni(null,t,a,e,n);break e;case 1:t=_i(null,t,a,e,n);break e;case 11:t=wi(null,t,a,e,n);break e;case 14:t=ki(null,t,a,ni(a.type,e),n);break e}throw Error(o(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Ni(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 1:return a=t.type,r=t.pendingProps,_i(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 3:e:{if(Ei(t),null===e)throw Error(o(387));a=t.pendingProps,r=(s=t.memoizedState).element,zo(e,t),Go(t,a,null,n);var i=t.memoizedState;if(a=i.element,s.isDehydrated){if(s={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=s,t.memoizedState=s,256&t.flags){t=Ri(e,t,a,n,r=ui(Error(o(423)),t));break e}if(a!==r){t=Ri(e,t,a,n,r=ui(Error(o(424)),t));break e}for(ao=ur(t.stateNode.containerInfo.firstChild),no=t,ro=!0,oo=null,n=ko(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(fo(),a===r){t=Hi(e,t,n);break e}vi(e,t,a,n)}t=t.child}return t;case 5:return $o(t),null===e&&uo(t),a=t.type,r=t.pendingProps,s=null!==e?e.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==s&&nr(a,s)&&(t.flags|=32),Ii(e,t),vi(e,t,i,n),t.child;case 6:return null===e&&uo(t),null;case 13:return Li(e,t,n);case 4:return Qo(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=wo(t,null,a,n):vi(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,wi(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 7:return vi(e,t,t.pendingProps,n),t.child;case 8:case 12:return vi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,s=t.memoizedProps,i=r.value,Nr(So,a._currentValue),a._currentValue=i,null!==s)if(ia(s.value,i)){if(s.children===r.children&&!Er.current){t=Hi(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var c=s.dependencies;if(null!==c){i=s.child;for(var u=c.firstContext;null!==u;){if(u.context===a){if(1===s.tag){(u=Bo(-1,n&-n)).tag=2;var l=s.updateQueue;if(null!==l){var d=(l=l.shared).pending;null===d?u.next=u:(u.next=d.next,d.next=u),l.pending=u}}s.lanes|=n,null!==(u=s.alternate)&&(u.lanes|=n),Eo(s.return,n,t),c.lanes|=n;break}u=u.next}}else if(10===s.tag)i=s.type===t.type?null:s.child;else if(18===s.tag){if(null===(i=s.return))throw Error(o(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Eo(i,n,t),i=s.sibling}else i=s.child;if(null!==i)i.return=s;else for(i=s;null!==i;){if(i===t){i=null;break}if(null!==(s=i.sibling)){s.return=i.return,i=s;break}i=i.return}s=i}vi(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,Ro(t,n),a=a(r=Ao(r)),t.flags|=1,vi(e,t,a,n),t.child;case 14:return r=ni(a=t.type,t.pendingProps),ki(e,t,a,r=ni(a.type,r),n);case 15:return Si(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:ni(a,r),Gi(e,t),t.tag=1,Or(a)?(e=!0,Pr(t)):e=!1,Ro(t,n),si(t,a,r),ci(t,a,r,n),Ti(null,t,a,!0,e,n);case 19:return Vi(e,t,n);case 22:return Ci(e,t,n)}throw Error(o(156,t.tag))};var qu="function"===typeof reportError?reportError:function(e){console.error(e)};function Xu(e){this._internalRoot=e}function Yu(e){this._internalRoot=e}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function $u(){}function Ju(e,t,n,a,r){var o=n._reactRootContainer;if(o){var s=o;if("function"===typeof r){var i=r;r=function(){var e=Hu(s);i.call(e)}}Gu(t,s,e,r)}else s=function(e,t,n,a,r){if(r){if("function"===typeof a){var o=a;a=function(){var e=Hu(s);o.call(e)}}var s=Vu(t,a,e,0,null,!1,0,"",$u);return e._reactRootContainer=s,e[fr]=s.current,Va(8===e.nodeType?e.parentNode:e),lu(),s}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var i=a;a=function(){var e=Hu(c);i.call(e)}}var c=Wu(e,0,!1,null,0,!1,0,"",$u);return e._reactRootContainer=c,e[fr]=c.current,Va(8===e.nodeType?e.parentNode:e),lu((function(){Gu(t,c,n,a)})),c}(n,t,e,r,a);return Hu(s)}Yu.prototype.render=Xu.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));Gu(e,t,null,null)},Yu.prototype.unmount=Xu.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;lu((function(){Gu(null,e,null,null)})),t[fr]=null}},Yu.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ft.length&&0!==t&&t<Ft[n].priority;n++);Ft.splice(n,0,e),0===n&&Lt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),au(t,Ze()),0===(6&Tc)&&(Vc=Ze()+500,Vr()))}break;case 13:lu((function(){var t=Mo(e,1);if(null!==t){var n=eu();nu(t,e,1,n)}})),Ku(e,1)}},kt=function(e){if(13===e.tag){var t=Mo(e,134217728);if(null!==t)nu(t,e,134217728,eu());Ku(e,134217728)}},St=function(e){if(13===e.tag){var t=tu(e),n=Mo(e,t);if(null!==n)nu(n,e,t,eu());Ku(e,t)}},Ct=function(){return xt},It=function(e,t){var n=xt;try{return xt=e,t()}finally{xt=n}},ke=function(e,t,n){switch(t){case"input":if($(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(o(90));q(a),$(a,r)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Te=uu,Ee=lu;var el={usingClientEntryPoint:!1,Events:[xr,vr,wr,Ne,_e,uu]},tl={findFiberByHostInstance:br,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nl={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var al=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!al.isDisabled&&al.supportsFiber)try{rt=al.inject(nl),ot=al}catch(le){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=el,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qu(t))throw Error(o(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Qu(e))throw Error(o(299));var n=!1,a="",r=qu;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Wu(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Va(8===e.nodeType?e.parentNode:e),new Xu(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return lu(e)},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(o(200));return Ju(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Qu(e))throw Error(o(405));var a=null!=n&&n.hydratedSources||null,r=!1,s="",i=qu;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(s=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Vu(t,null,e,1,null!=n?n:null,r,0,s,i),e[fr]=t.current,Va(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Yu(t)},t.render=function(e,t,n){if(!Zu(t))throw Error(o(200));return Ju(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(o(40));return!!e._reactRootContainer&&(lu((function(){Ju(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=uu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Zu(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return Ju(e,t,n,!1,a)},t.version="18.3.1-next-f1338f8080-20240426"},391:(e,t,n)=>{"use strict";var a=n(950);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},153:(e,t,n)=>{"use strict";var a=n(43),r=Symbol.for("react.element"),o=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,n){var a,o={},u=null,l=null;for(a in void 0!==n&&(u=""+n),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(l=t.ref),t)s.call(t,a)&&!c.hasOwnProperty(a)&&(o[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===o[a]&&(o[a]=t[a]);return{$$typeof:r,type:e,key:u,ref:l,props:o,_owner:i.current}}t.Fragment=o,t.jsx=u,t.jsxs=u},202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),s=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),c=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),l=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),h=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function x(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var v=x.prototype=new b;v.constructor=x,m(v,y.prototype),v.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function I(e,t,a){var r,o={},s=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(s=""+t.key),t)k.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var c=arguments.length-2;if(1===c)o.children=a;else if(1<c){for(var u=Array(c),l=0;l<c;l++)u[l]=arguments[l+2];o.children=u}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===o[r]&&(o[r]=c[r]);return{$$typeof:n,type:e,key:s,ref:i,props:o,_owner:S.current}}function N(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var _=/\/+/g;function T(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function E(e,t,r,o,s){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case a:c=!0}}if(c)return s=s(c=e),e=""===o?"."+T(c,0):o,w(s)?(r="",null!=e&&(r=e.replace(_,"$&/")+"/"),E(s,t,r,"",(function(e){return e}))):null!=s&&(N(s)&&(s=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(s,r+(!s.key||c&&c.key===s.key?"":(""+s.key).replace(_,"$&/")+"/")+e)),t.push(s)),1;if(c=0,o=""===o?".":o+":",w(e))for(var u=0;u<e.length;u++){var l=o+T(i=e[u],u);c+=E(i,t,r,l,s)}else if(l=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=h&&e[h]||e["@@iterator"])?e:null}(e),"function"===typeof l)for(e=l.call(e),u=0;!(i=e.next()).done;)c+=E(i=i.value,t,r,l=o+T(i,u++),s);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return c}function R(e,t,n){if(null==e)return e;var a=[],r=0;return E(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function A(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var O={current:null},F={transition:null},D={ReactCurrentDispatcher:O,ReactCurrentBatchConfig:F,ReactCurrentOwner:S};function M(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:R,forEach:function(e,t,n){R(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return R(e,(function(){t++})),t},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!N(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=s,t.PureComponent=x,t.StrictMode=o,t.Suspense=l,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,t.act=M,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),o=e.key,s=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(s=t.ref,i=S.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(u in t)k.call(t,u)&&!C.hasOwnProperty(u)&&(r[u]=void 0===t[u]&&void 0!==c?c[u]:t[u])}var u=arguments.length-2;if(1===u)r.children=a;else if(1<u){c=Array(u);for(var l=0;l<u;l++)c[l]=arguments[l+2];r.children=c}return{$$typeof:n,type:e.type,key:o,ref:s,props:r,_owner:i}},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=I,t.createFactory=function(e){var t=I.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:A}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=F.transition;F.transition={};try{e()}finally{F.transition=t}},t.unstable_act=M,t.useCallback=function(e,t){return O.current.useCallback(e,t)},t.useContext=function(e){return O.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return O.current.useDeferredValue(e)},t.useEffect=function(e,t){return O.current.useEffect(e,t)},t.useId=function(){return O.current.useId()},t.useImperativeHandle=function(e,t,n){return O.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return O.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return O.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return O.current.useMemo(e,t)},t.useReducer=function(e,t,n){return O.current.useReducer(e,t,n)},t.useRef=function(e){return O.current.useRef(e)},t.useState=function(e){return O.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return O.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return O.current.useTransition()},t.version="18.3.1"},43:(e,t,n)=>{"use strict";e.exports=n(202)},579:(e,t,n)=>{"use strict";e.exports=n(153)},234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<o(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,s=r>>>1;a<s;){var i=2*(a+1)-1,c=e[i],u=i+1,l=e[u];if(0>o(c,n))u<r&&0>o(l,c)?(e[a]=l,e[u]=n,a=u):(e[a]=c,e[i]=n,a=i);else{if(!(u<r&&0>o(l,n)))break e;e[a]=l,e[u]=n,a=u}}}return t}function o(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var s=performance;t.unstable_now=function(){return s.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var u=[],l=[],d=1,p=null,h=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,x="undefined"!==typeof setImmediate?setImmediate:null;function v(e){for(var t=a(l);null!==t;){if(null===t.callback)r(l);else{if(!(t.startTime<=e))break;r(l),t.sortIndex=t.expirationTime,n(u,t)}t=a(l)}}function w(e){if(g=!1,v(e),!m)if(null!==a(u))m=!0,F(k);else{var t=a(l);null!==t&&D(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(N),N=-1),f=!0;var o=h;try{for(v(n),p=a(u);null!==p&&(!(p.expirationTime>n)||e&&!E());){var s=p.callback;if("function"===typeof s){p.callback=null,h=p.priorityLevel;var i=s(p.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?p.callback=i:p===a(u)&&r(u),v(n)}else r(u);p=a(u)}if(null!==p)var c=!0;else{var d=a(l);null!==d&&D(w,d.startTime-n),c=!1}return c}finally{p=null,h=o,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,C=!1,I=null,N=-1,_=5,T=-1;function E(){return!(t.unstable_now()-T<_)}function R(){if(null!==I){var e=t.unstable_now();T=e;var n=!0;try{n=I(!0,e)}finally{n?S():(C=!1,I=null)}}else C=!1}if("function"===typeof x)S=function(){x(R)};else if("undefined"!==typeof MessageChannel){var A=new MessageChannel,O=A.port2;A.port1.onmessage=R,S=function(){O.postMessage(null)}}else S=function(){y(R,0)};function F(e){I=e,C||(C=!0,S())}function D(e,n){N=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,F(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):_=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return h},t.unstable_getFirstCallbackNode=function(){return a(u)},t.unstable_next=function(e){switch(h){case 1:case 2:case 3:var t=3;break;default:t=h}var n=h;h=t;try{return e()}finally{h=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=h;h=e;try{return t()}finally{h=n}},t.unstable_scheduleCallback=function(e,r,o){var s=t.unstable_now();switch("object"===typeof o&&null!==o?o="number"===typeof(o=o.delay)&&0<o?s+o:s:o=s,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:d++,callback:r,priorityLevel:e,startTime:o,expirationTime:i=o+i,sortIndex:-1},o>s?(e.sortIndex=o,n(l,e),null===a(u)&&e===a(l)&&(g?(b(N),N=-1):g=!0,D(w,o-s))):(e.sortIndex=i,n(u,e),m||f||(m=!0,F(k))),e},t.unstable_shouldYield=E,t.unstable_wrapCallback=function(e){var t=h;return function(){var n=h;h=t;try{return e.apply(this,arguments)}finally{h=n}}}},853:(e,t,n)=>{"use strict";e.exports=n(234)},334:(e,t,n)=>{var a=n(359),r=n(66),o=n(16),s=n(538),i=n(288),c=n(262),u=n(430);u.alea=a,u.xor128=r,u.xorwow=o,u.xorshift7=s,u.xor4096=i,u.tychei=c,e.exports=u},359:function(e,t,n){var a;!function(e,r){function o(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new o(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.alea=i}(0,e=n.nmd(e),n.amdD)},262:function(e,t,n){var a;!function(e,r){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.tychei=i}(0,e=n.nmd(e),n.amdD)},66:function(e,t,n){var a;!function(e,r){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xor128=i}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var a;!function(e,r){function o(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,o=t.i;return t.w=a=a+1640531527|0,n=r[o+34&127],e=r[o=o+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[o]=n^e,t.i=o,n+(a^a>>>16)|0},function(e,t){var n,a,r,o,s,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),r=0,o=-32;o<c;++o)t&&(a^=t.charCodeAt((o+32)%t.length)),0===o&&(s=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,o>=0&&(s=s+1640531527|0,r=0==(n=i[127&o]^=a+s)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,o=512;o>0;--o)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=s,e.X=i,e.i=r}(t,e)}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xor4096=i}(0,e=n.nmd(e),n.amdD)},538:function(e,t,n){var a;!function(e,r){function o(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xorshift7=i}(0,e=n.nmd(e),n.amdD)},16:function(e,t,n){var a;!function(e,r){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xorwow=i}(0,e=n.nmd(e),n.amdD)},430:function(e,t,n){var a;!function(r,o,s){var i,c=256,u=s.pow(c,6),l=s.pow(2,52),d=2*l,p=c-1;function h(e,t,n){var a=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(o)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(o)]}}():e,3),a),h=new f(a),x=function(){for(var e=h.g(6),t=u,n=0;e<l;)e=(e+n)*c,t*=c,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,y(b(h.S),o),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(x,p,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,a=this,r=0,o=a.i=a.j=0,s=a.S=[];for(n||(e=[n++]);r<c;)s[r]=r++;for(r=0;r<c;r++)s[r]=s[o=p&o+e[r%n]+(t=s[r])],s[o]=t;(a.g=function(e){for(var t,n=0,r=a.i,o=a.j,s=a.S;e--;)t=s[r=p&r+1],n=n*c+s[p&(s[r]=s[o=p&o+t])+(s[o]=t)];return a.i=r,a.j=o,n})(c)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(o){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[p&r]=p&(n^=19*t[p&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(s.random(),o),e.exports){e.exports=h;try{i=n(996)}catch(x){}}else void 0===(a=function(){return h}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},893:()=>{},74:()=>{},281:()=>{},244:()=>{},556:()=>{},817:()=>{},590:()=>{},996:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(a,r){if(1&r&&(a=this(a)),8&r)return a;if("object"===typeof a&&a){if(4&r&&a.__esModule)return a;if(16&r&&"function"===typeof a.then)return a}var o=Object.create(null);n.r(o);var s={};e=e||[null,t({}),t([]),t(t)];for(var i=2&r&&a;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((e=>s[e]=()=>a[e]));return s.default=()=>a,n.d(o,s),o}})(),n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[])),n.u=e=>"static/js/"+e+".2c41c3b9.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="dance-teacher:";n.l=(a,r,o,s)=>{if(e[a])e[a].push(r);else{var i,c;if(void 0!==o)for(var u=document.getElementsByTagName("script"),l=0;l<u.length;l++){var d=u[l];if(d.getAttribute("src")==a||d.getAttribute("data-webpack")==t+o){i=d;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+o),i.src=a),e[a]=[r];var p=(t,n)=>{i.onerror=i.onload=null,clearTimeout(h);var r=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),r&&r.forEach((e=>e(n))),t)return t(n)},h=setTimeout(p.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=p.bind(null,i.onerror),i.onload=p.bind(null,i.onload),c&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/dance-teacher/",(()=>{var e={792:0};n.f.j=(t,a)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var o=new Promise(((n,a)=>r=e[t]=[n,a]));a.push(r[2]=o);var s=n.p+n.u(t),i=new Error;n.l(s,(a=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var o=a&&("load"===a.type?"missing":a.type),s=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+o+": "+s+")",i.name="ChunkLoadError",i.type=o,i.request=s,r[1](i)}}),"chunk-"+t,t)}};var t=(t,a)=>{var r,o,s=a[0],i=a[1],c=a[2],u=0;if(s.some((t=>0!==e[t]))){for(r in i)n.o(i,r)&&(n.m[r]=i[r]);if(c)c(n)}for(t&&t(a);u<s.length;u++)o=s[u],n.o(e,o)&&e[o]&&e[o][0](),e[o]=0},a=self.webpackChunkdance_teacher=self.webpackChunkdance_teacher||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>Ks,browserFiles:()=>Dc,browserHTTPRequest:()=>Gc,concatenateArrayBuffers:()=>di,copyModel:()=>Qi,decodeWeights:()=>ni,decodeWeightsStream:()=>ii,encodeWeights:()=>ti,fromMemory:()=>qc,fromMemorySync:()=>Xc,getLoadHandlers:()=>ki,getModelArtifactsForJSON:()=>mi,getModelArtifactsForJSONSync:()=>fi,getModelArtifactsInfoForJSON:()=>gi,getSaveHandlers:()=>wi,getWeightSpecs:()=>yi,http:()=>Vc,isHTTPScheme:()=>Wc,listModels:()=>Xi,loadWeights:()=>Lc,moveModel:()=>Zi,registerLoadRouter:()=>vi,registerSaveRouter:()=>xi,removeModel:()=>Yi,weightsLoaderFactory:()=>zc,withSaveHandler:()=>Yc,withSaveHandlerSync:()=>Qc});var t={};n.r(t),n.d(t,{assertParamsValid:()=>lu,computeFlatOffset:()=>Su,computeOutShape:()=>pu,getNormalizedAxes:()=>gu,isSliceContinous:()=>ku,maskToAxes:()=>du,parseSliceParams:()=>Cu,sliceInfo:()=>Iu,startForAxis:()=>vu,startIndicesWithElidedDims:()=>yu,stopForAxis:()=>wu,stopIndicesWithElidedDims:()=>bu,stridesForAxis:()=>xu,stridesWithElidedDims:()=>hu});var a={};n.r(a),n.d(a,{conv2d:()=>Mh,depthwiseConv2d:()=>zh,matMul:()=>Bh});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:()=>jm,computeOutShape:()=>Hm,segOpComputeOptimalWindowSize:()=>Gm});var o={};n.r(o),n.d(o,{ERF_A1:()=>im,ERF_A2:()=>cm,ERF_A3:()=>um,ERF_A4:()=>lm,ERF_A5:()=>dm,ERF_P:()=>sm,PARALLELIZE_THRESHOLD:()=>Qf,RowPartitionType:()=>jf,SELU_SCALE:()=>om,SELU_SCALEALPHA:()=>rm,applyActivation:()=>Fh,assertAndGetBroadcastShape:()=>_c,assertAxesAreInnerMostDims:()=>$l,assertParamsConsistent:()=>Gf,assignToTypedArray:()=>ym,axesAreInnerMostDims:()=>Xl,calculateShapes:()=>iu,checkEinsumDimSizes:()=>Nm,checkPadOnDimRoundingMode:()=>Ju,combineLocations:()=>Yl,combineRaggedTensorToTensorShapes:()=>Kf,complexWithEvenIndex:()=>fm,complexWithOddIndex:()=>mm,computeConv2DInfo:()=>Vu,computeConv3DInfo:()=>Gu,computeDefaultPad:()=>Hu,computeDilation2DInfo:()=>Bu,computeOptimalWindowSize:()=>Zf,computeOutAndReduceShapes:()=>Ql,computeOutShape:()=>Hf,computePool2DInfo:()=>Wu,computePool3DInfo:()=>Uu,convertConv2DDataFormat:()=>$u,decodeEinsumEquation:()=>Cm,eitherStridesOrDilationsAreOne:()=>Qu,expandShapeToKeepDim:()=>Zl,exponent:()=>xm,exponents:()=>bm,fromStringArrayToUint8:()=>qm,fromUint8ToStringArray:()=>Km,getAxesPermutation:()=>Jl,getBroadcastDims:()=>Ic,getComplexWithIndex:()=>gm,getEinsumComputePath:()=>_m,getEinsumPermutation:()=>Im,getFusedBiasGradient:()=>Oh,getFusedDyActivation:()=>Ah,getImageCenter:()=>$f,getInnerMostAxes:()=>td,getPermuted:()=>em,getRaggedRank:()=>Xf,getReductionAxes:()=>Nc,getReshaped:()=>Jf,getReshapedPermuted:()=>tm,getRowPartitionTypesHelper:()=>qf,getSliceBeginCoords:()=>nm,getSliceSize:()=>am,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Am,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Om,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Fm,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Pm,getSparseReshapeInputOutputMismatchErrorMessage:()=>zm,getSparseReshapeInputOutputMultipleErrorMessage:()=>Lm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Dm,getSparseReshapeNegativeOutputDimErrorMessage:()=>Mm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Vm,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Bm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Wm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Um,getUndoAxesPermutation:()=>ed,isIdentityPermutation:()=>Tm,log:()=>bo,mergeRealAndImagArrays:()=>pm,prepareAndValidate:()=>ru,prepareSplitSize:()=>Rm,segment_util:()=>r,shouldFuse:()=>Dh,slice_util:()=>t,splitRealAndImagArrays:()=>hm,stridesOrDilationsArePositive:()=>Zu,tupleValuesAreOne:()=>Yu,upcastType:()=>bs,validateDefaultValueShape:()=>Yf,validateInput:()=>su,validateUpdateShape:()=>ou,warn:()=>yo});var s={};n.r(s),n.d(s,{mx:()=>Ey,XI:()=>Ay,Nk:()=>Oy,f6:()=>Fy,ct:()=>Iy,YG:()=>Ly,hH:()=>zy,z3:()=>By,sG:()=>Wy,uM:()=>Uy,C1:()=>Gy,vS:()=>Vy,qB:()=>Hy,GG:()=>jy,lg:()=>qy,rq:()=>Ky,cu:()=>Yy,WR:()=>Xy,GE:()=>Qy,px:()=>Zy,jC:()=>$y,He:()=>Jy,hE:()=>eb,BF:()=>tb,Dk:()=>ab,cl:()=>rb,_B:()=>sb,ub:()=>lb,_f:()=>pb,Ku:()=>yb,qy:()=>bb,Zy:()=>xb,bu:()=>vb,zv:()=>wb,dH:()=>xy,HS:()=>kb,yH:()=>Sb,l3:()=>Cb,z9:()=>Ib,x6:()=>Nb,_m:()=>_b,eW:()=>Tb,GK:()=>Rb,SP:()=>Ob,yr:()=>Fb,dl:()=>Db,Dw:()=>Pb,xT:()=>Bb,_X:()=>ob,wz:()=>Wb});var i={};n.r(i),n.d(i,{json:()=>RU});var c={};n.r(c),n.d(c,{json:()=>AU});var u={};n.r(u),n.d(u,{json:()=>OU});var l={};n.r(l),n.d(l,{json:()=>FU});var d={};n.r(d),n.d(d,{json:()=>DU});var p={};n.r(p),n.d(p,{json:()=>MU});var h={};n.r(h),n.d(h,{json:()=>PU});var f={};n.r(f),n.d(f,{json:()=>LU});var m={};n.r(m),n.d(m,{json:()=>zU});var g={};n.r(g),n.d(g,{json:()=>BU});var y={};n.r(y),n.d(y,{json:()=>WU});var b={};n.r(b),n.d(b,{json:()=>UU});var x={};n.r(x),n.d(x,{json:()=>VU});var v={};n.r(v),n.d(v,{json:()=>GU});var w={};n.r(w),n.d(w,{json:()=>HU});var k={};n.r(k),n.d(k,{json:()=>jU});var S={};n.r(S),n.d(S,{json:()=>KU});var C={};n.r(C),n.d(C,{json:()=>qU});var I={};n.r(I),n.d(I,{json:()=>XU});var N={};n.r(N),n.d(N,{OP_SCOPE_SUFFIX:()=>Ws,abs:()=>Cc,acos:()=>_u,acosh:()=>Tu,add:()=>sc,addN:()=>Eu,all:()=>Ru,any:()=>Au,argMax:()=>Ou,argMin:()=>Fu,asin:()=>Du,asinh:()=>Mu,atan:()=>Pu,atan2:()=>Lu,atanh:()=>zu,avgPool:()=>tl,avgPool3d:()=>nl,basicLSTMCell:()=>cl,batchNorm:()=>ll,batchNorm2d:()=>dl,batchNorm3d:()=>pl,batchNorm4d:()=>hl,batchToSpaceND:()=>ul,bincount:()=>fl,bitwiseAnd:()=>ml,booleanMaskAsync:()=>vh,broadcastArgs:()=>gl,broadcastTo:()=>yl,buffer:()=>nc,cast:()=>ac,ceil:()=>bl,clipByValue:()=>xl,clone:()=>rc,complex:()=>Vs,concat:()=>al,concat1d:()=>vl,concat2d:()=>wl,concat3d:()=>kl,concat4d:()=>Sl,conv1d:()=>Il,conv2d:()=>Cl,conv2dTranspose:()=>_l,conv3d:()=>Tl,conv3dTranspose:()=>Rl,cos:()=>Al,cosh:()=>Ol,cosineWindow:()=>Th,cumprod:()=>Fl,cumsum:()=>Dl,denseBincount:()=>Ml,depthToSpace:()=>Pl,depthwiseConv2d:()=>Ll,diag:()=>zl,dilation2d:()=>Bl,div:()=>cc,divNoNan:()=>Vl,dot:()=>Gl,dropout:()=>Nh,einsum:()=>Hl,elu:()=>jl,enclosingPowerOfTwo:()=>_h,ensureShape:()=>Kl,equal:()=>Wl,erf:()=>ql,euclideanNorm:()=>id,exp:()=>cd,expandDims:()=>ud,expm1:()=>ld,eye:()=>pd,fft:()=>Xp,fill:()=>wc,floor:()=>hd,floorDiv:()=>ic,fused:()=>a,gather:()=>fd,gatherND:()=>Ih,greater:()=>md,greaterEqual:()=>gd,ifft:()=>Yp,imag:()=>yd,image:()=>Lf,inTopKAsync:()=>Eh,irfft:()=>Qp,isFinite:()=>bd,isInf:()=>xd,isNaN:()=>vd,leakyRelu:()=>wd,less:()=>kd,lessEqual:()=>Sd,linalg:()=>zf,linspace:()=>Cd,localResponseNormalization:()=>Id,log:()=>Nd,log1p:()=>_d,logSigmoid:()=>Rd,logSoftmax:()=>Ad,logSumExp:()=>Od,logicalAnd:()=>Fd,logicalNot:()=>Dd,logicalOr:()=>Md,logicalXor:()=>Pd,losses:()=>Bf,lowerBound:()=>Bd,matMul:()=>rl,max:()=>nd,maxPool:()=>Wd,maxPool3d:()=>Ud,maxPoolWithArgmax:()=>Vd,maximum:()=>Tc,mean:()=>Gd,meshgrid:()=>Kd,min:()=>ad,minimum:()=>qd,mirrorPad:()=>Xd,mod:()=>Yd,moments:()=>Qd,movingAverage:()=>kh,mul:()=>uc,multiRNNCell:()=>Zd,multinomial:()=>$d,neg:()=>Td,norm:()=>sd,notEqual:()=>Jd,oneHot:()=>ep,ones:()=>jd,onesLike:()=>tp,op:()=>Us,outerProduct:()=>np,pad:()=>ap,pad1d:()=>rp,pad2d:()=>op,pad3d:()=>sp,pad4d:()=>ip,pool:()=>up,pow:()=>kc,prelu:()=>lp,print:()=>oc,prod:()=>dp,raggedGather:()=>pp,raggedRange:()=>hp,raggedTensorToTensor:()=>fp,rand:()=>mp,randomGamma:()=>vp,randomNormal:()=>wp,randomStandardNormal:()=>kp,randomUniform:()=>Sp,randomUniformInt:()=>Cp,range:()=>Ip,real:()=>Np,reciprocal:()=>_p,relu:()=>Tp,relu6:()=>Ep,reshape:()=>el,reverse:()=>Rp,reverse1d:()=>Ap,reverse2d:()=>Op,reverse3d:()=>Fp,reverse4d:()=>Dp,rfft:()=>$p,round:()=>Mp,rsqrt:()=>Pp,scalar:()=>fc,scatterND:()=>Sh,searchSorted:()=>zd,selu:()=>Lp,separableConv2d:()=>zp,setdiff1dAsync:()=>Bp,sigmoid:()=>ol,sign:()=>Wp,signal:()=>Pf,sin:()=>Up,sinh:()=>Vp,slice:()=>sl,slice1d:()=>Gp,slice2d:()=>Hp,slice3d:()=>jp,slice4d:()=>Kp,softmax:()=>qp,softplus:()=>Ed,spaceToBatchND:()=>cp,sparse:()=>Wf,sparseToDense:()=>Ch,spectral:()=>Mf,split:()=>Zp,sqrt:()=>lc,square:()=>dc,squaredDifference:()=>Jp,squeeze:()=>eh,stack:()=>th,step:()=>nh,stridedSlice:()=>ah,string:()=>Uf,sub:()=>Sc,sum:()=>rd,tan:()=>rh,tanh:()=>il,tensor:()=>Hs,tensor1d:()=>oh,tensor2d:()=>sh,tensor3d:()=>Zc,tensor4d:()=>ih,tensor5d:()=>ch,tensor6d:()=>uh,tensorScatterUpdate:()=>lh,tile:()=>dd,topk:()=>dh,transpose:()=>wh,truncatedNormal:()=>ph,unique:()=>hh,unsortedSegmentSum:()=>fh,unstack:()=>mh,upperBound:()=>gh,variable:()=>yh,where:()=>Ul,whereAsync:()=>xh,zeros:()=>Hd,zerosLike:()=>pc});var _=n(43),T=n.t(_,2),E=n(391);const R=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,453)).then((t=>{let{getCLS:n,getFID:a,getFCP:r,getLCP:o,getTTFB:s}=t;n(e),a(e),r(e),o(e),s(e)}))};var A,O=n(950),F=n.t(O,2);function D(){return D=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},D.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(A||(A={}));const M="popstate";function P(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function L(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(n){}}}function z(e,t){return{usr:e.state,key:e.key,idx:t}}function B(e,t,n,a){return void 0===n&&(n=null),D({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?U(t):t,{state:n,key:t&&t.key||a||Math.random().toString(36).substr(2,8)})}function W(e){let{pathname:t="/",search:n="",hash:a=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),a&&"#"!==a&&(t+="#"===a.charAt(0)?a:"#"+a),t}function U(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}function V(e,t,n,a){void 0===a&&(a={});let{window:r=document.defaultView,v5Compat:o=!1}=a,s=r.history,i=A.Pop,c=null,u=l();function l(){return(s.state||{idx:null}).idx}function d(){i=A.Pop;let e=l(),t=null==e?null:e-u;u=e,c&&c({action:i,location:h.location,delta:t})}function p(e){let t="null"!==r.location.origin?r.location.origin:r.location.href,n="string"===typeof e?e:W(e);return n=n.replace(/ $/,"%20"),P(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==u&&(u=0,s.replaceState(D({},s.state,{idx:u}),""));let h={get action(){return i},get location(){return e(r,s)},listen(e){if(c)throw new Error("A history only accepts one active listener");return r.addEventListener(M,d),c=e,()=>{r.removeEventListener(M,d),c=null}},createHref:e=>t(r,e),createURL:p,encodeLocation(e){let t=p(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){i=A.Push;let a=B(h.location,e,t);n&&n(a,e),u=l()+1;let d=z(a,u),p=h.createHref(a);try{s.pushState(d,"",p)}catch(f){if(f instanceof DOMException&&"DataCloneError"===f.name)throw f;r.location.assign(p)}o&&c&&c({action:i,location:h.location,delta:1})},replace:function(e,t){i=A.Replace;let a=B(h.location,e,t);n&&n(a,e),u=l();let r=z(a,u),d=h.createHref(a);s.replaceState(r,"",d),o&&c&&c({action:i,location:h.location,delta:0})},go:e=>s.go(e)};return h}var G;!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(G||(G={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function H(e,t,n){return void 0===n&&(n="/"),j(e,t,n,!1)}function j(e,t,n,a){let r=oe(("string"===typeof t?U(t):t).pathname||"/",n);if(null==r)return null;let o=K(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){let n=e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(o);let s=null;for(let i=0;null==s&&i<o.length;++i){let e=re(r);s=ne(o[i],e,a)}return s}function K(e,t,n,a){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===a&&(a="");let r=(e,r,o)=>{let s={relativePath:void 0===o?e.path||"":o,caseSensitive:!0===e.caseSensitive,childrenIndex:r,route:e};s.relativePath.startsWith("/")&&(P(s.relativePath.startsWith(a),'Absolute route path "'+s.relativePath+'" nested under path "'+a+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),s.relativePath=s.relativePath.slice(a.length));let i=le([a,s.relativePath]),c=n.concat(s);e.children&&e.children.length>0&&(P(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+i+'".'),K(e.children,t,c,i)),(null!=e.path||e.index)&&t.push({path:i,score:te(i,e.index),routesMeta:c})};return e.forEach(((e,t)=>{var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?"))for(let a of q(e.path))r(e,t,a);else r(e,t)})),t}function q(e){let t=e.split("/");if(0===t.length)return[];let[n,...a]=t,r=n.endsWith("?"),o=n.replace(/\?$/,"");if(0===a.length)return r?[o,""]:[o];let s=q(a.join("/")),i=[];return i.push(...s.map((e=>""===e?o:[o,e].join("/")))),r&&i.push(...s),i.map((t=>e.startsWith("/")&&""===t?"/":t))}const X=/^:[\w-]+$/,Y=3,Q=2,Z=1,$=10,J=-2,ee=e=>"*"===e;function te(e,t){let n=e.split("/"),a=n.length;return n.some(ee)&&(a+=J),t&&(a+=Q),n.filter((e=>!ee(e))).reduce(((e,t)=>e+(X.test(t)?Y:""===t?Z:$)),a)}function ne(e,t,n){void 0===n&&(n=!1);let{routesMeta:a}=e,r={},o="/",s=[];for(let i=0;i<a.length;++i){let e=a[i],c=i===a.length-1,u="/"===o?t:t.slice(o.length)||"/",l=ae({path:e.relativePath,caseSensitive:e.caseSensitive,end:c},u),d=e.route;if(!l&&c&&n&&!a[a.length-1].route.index&&(l=ae({path:e.relativePath,caseSensitive:e.caseSensitive,end:!1},u)),!l)return null;Object.assign(r,l.params),s.push({params:r,pathname:le([o,l.pathname]),pathnameBase:de(le([o,l.pathnameBase])),route:d}),"/"!==l.pathnameBase&&(o=le([o,l.pathnameBase]))}return s}function ae(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,a]=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);L("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let a=[],r="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,t,n)=>(a.push({paramName:t,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)")));e.endsWith("*")?(a.push({paramName:"*"}),r+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?r+="\\/*$":""!==e&&"/"!==e&&(r+="(?:(?=\\/|$))");let o=new RegExp(r,t?void 0:"i");return[o,a]}(e.path,e.caseSensitive,e.end),r=t.match(n);if(!r)return null;let o=r[0],s=o.replace(/(.)\/+$/,"$1"),i=r.slice(1);return{params:a.reduce(((e,t,n)=>{let{paramName:a,isOptional:r}=t;if("*"===a){let e=i[n]||"";s=o.slice(0,o.length-e.length).replace(/(.)\/+$/,"$1")}const c=i[n];return e[a]=r&&!c?void 0:(c||"").replace(/%2F/g,"/"),e}),{}),pathname:o,pathnameBase:s,pattern:e}}function re(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(t){return L(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function oe(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,a=e.charAt(n);return a&&"/"!==a?null:e.slice(n)||"/"}function se(e,t,n,a){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(a)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function ie(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function ce(e,t){let n=ie(e);return t?n.map(((e,t)=>t===n.length-1?e.pathname:e.pathnameBase)):n.map((e=>e.pathnameBase))}function ue(e,t,n,a){let r;void 0===a&&(a=!1),"string"===typeof e?r=U(e):(r=D({},e),P(!r.pathname||!r.pathname.includes("?"),se("?","pathname","search",r)),P(!r.pathname||!r.pathname.includes("#"),se("#","pathname","hash",r)),P(!r.search||!r.search.includes("#"),se("#","search","hash",r)));let o,s=""===e||""===r.pathname,i=s?"/":r.pathname;if(null==i)o=n;else{let e=t.length-1;if(!a&&i.startsWith("..")){let t=i.split("/");for(;".."===t[0];)t.shift(),e-=1;r.pathname=t.join("/")}o=e>=0?t[e]:"/"}let c=function(e,t){void 0===t&&(t="/");let{pathname:n,search:a="",hash:r=""}="string"===typeof e?U(e):e,o=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:o,search:pe(a),hash:he(r)}}(r,o),u=i&&"/"!==i&&i.endsWith("/"),l=(s||"."===i)&&n.endsWith("/");return c.pathname.endsWith("/")||!u&&!l||(c.pathname+="/"),c}const le=e=>e.join("/").replace(/\/\/+/g,"/"),de=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),pe=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",he=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;function fe(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}const me=["post","put","patch","delete"],ge=(new Set(me),["get",...me]);new Set(ge),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function ye(){return ye=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},ye.apply(this,arguments)}const be=_.createContext(null);const xe=_.createContext(null);const ve=_.createContext(null);const we=_.createContext(null);const ke=_.createContext({outlet:null,matches:[],isDataRoute:!1});const Se=_.createContext(null);function Ce(){return null!=_.useContext(we)}function Ie(){return Ce()||P(!1),_.useContext(we).location}function Ne(e){_.useContext(ve).static||_.useLayoutEffect(e)}function _e(){let{isDataRoute:e}=_.useContext(ke);return e?function(){let{router:e}=ze(Pe.UseNavigateStable),t=We(Le.UseNavigateStable),n=_.useRef(!1);return Ne((()=>{n.current=!0})),_.useCallback((function(a,r){void 0===r&&(r={}),n.current&&("number"===typeof a?e.navigate(a):e.navigate(a,ye({fromRouteId:t},r)))}),[e,t])}():function(){Ce()||P(!1);let e=_.useContext(be),{basename:t,future:n,navigator:a}=_.useContext(ve),{matches:r}=_.useContext(ke),{pathname:o}=Ie(),s=JSON.stringify(ce(r,n.v7_relativeSplatPath)),i=_.useRef(!1);Ne((()=>{i.current=!0}));let c=_.useCallback((function(n,r){if(void 0===r&&(r={}),!i.current)return;if("number"===typeof n)return void a.go(n);let c=ue(n,JSON.parse(s),o,"path"===r.relative);null==e&&"/"!==t&&(c.pathname="/"===c.pathname?t:le([t,c.pathname])),(r.replace?a.replace:a.push)(c,r.state,r)}),[t,a,s,o,e]);return c}()}const Te=_.createContext(null);function Ee(e,t){let{relative:n}=void 0===t?{}:t,{future:a}=_.useContext(ve),{matches:r}=_.useContext(ke),{pathname:o}=Ie(),s=JSON.stringify(ce(r,a.v7_relativeSplatPath));return _.useMemo((()=>ue(e,JSON.parse(s),o,"path"===n)),[e,s,o,n])}function Re(e,t,n,a){Ce()||P(!1);let{navigator:r}=_.useContext(ve),{matches:o}=_.useContext(ke),s=o[o.length-1],i=s?s.params:{},c=(s&&s.pathname,s?s.pathnameBase:"/");s&&s.route;let u,l=Ie();if(t){var d;let e="string"===typeof t?U(t):t;"/"===c||(null==(d=e.pathname)?void 0:d.startsWith(c))||P(!1),u=e}else u=l;let p=u.pathname||"/",h=p;if("/"!==c){let e=c.replace(/^\//,"").split("/");h="/"+p.replace(/^\//,"").split("/").slice(e.length).join("/")}let f=H(e,{pathname:h});let m=Me(f&&f.map((e=>Object.assign({},e,{params:Object.assign({},i,e.params),pathname:le([c,r.encodeLocation?r.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?c:le([c,r.encodeLocation?r.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),o,n,a);return t&&m?_.createElement(we.Provider,{value:{location:ye({pathname:"/",search:"",hash:"",state:null,key:"default"},u),navigationType:A.Pop}},m):m}function Ae(){let e=function(){var e;let t=_.useContext(Se),n=Be(Le.UseRouteError),a=We(Le.UseRouteError);if(void 0!==t)return t;return null==(e=n.errors)?void 0:e[a]}(),t=fe(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,a="rgba(200,200,200, 0.5)",r={padding:"0.5rem",backgroundColor:a};return _.createElement(_.Fragment,null,_.createElement("h2",null,"Unexpected Application Error!"),_.createElement("h3",{style:{fontStyle:"italic"}},t),n?_.createElement("pre",{style:r},n):null,null)}const Oe=_.createElement(Ae,null);class Fe extends _.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return void 0!==this.state.error?_.createElement(ke.Provider,{value:this.props.routeContext},_.createElement(Se.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function De(e){let{routeContext:t,match:n,children:a}=e,r=_.useContext(be);return r&&r.static&&r.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(r.staticContext._deepestRenderedBoundaryId=n.route.id),_.createElement(ke.Provider,{value:t},a)}function Me(e,t,n,a){var r;if(void 0===t&&(t=[]),void 0===n&&(n=null),void 0===a&&(a=null),null==e){var o;if(!n)return null;if(n.errors)e=n.matches;else{if(!(null!=(o=a)&&o.v7_partialHydration&&0===t.length&&!n.initialized&&n.matches.length>0))return null;e=n.matches}}let s=e,i=null==(r=n)?void 0:r.errors;if(null!=i){let e=s.findIndex((e=>e.route.id&&void 0!==(null==i?void 0:i[e.route.id])));e>=0||P(!1),s=s.slice(0,Math.min(s.length,e+1))}let c=!1,u=-1;if(n&&a&&a.v7_partialHydration)for(let l=0;l<s.length;l++){let e=s[l];if((e.route.HydrateFallback||e.route.hydrateFallbackElement)&&(u=l),e.route.id){let{loaderData:t,errors:a}=n,r=e.route.loader&&void 0===t[e.route.id]&&(!a||void 0===a[e.route.id]);if(e.route.lazy||r){c=!0,s=u>=0?s.slice(0,u+1):[s[0]];break}}}return s.reduceRight(((e,a,r)=>{let o,l=!1,d=null,p=null;var h;n&&(o=i&&a.route.id?i[a.route.id]:void 0,d=a.route.errorElement||Oe,c&&(u<0&&0===r?(h="route-fallback",!1||Ue[h]||(Ue[h]=!0),l=!0,p=null):u===r&&(l=!0,p=a.route.hydrateFallbackElement||null)));let f=t.concat(s.slice(0,r+1)),m=()=>{let t;return t=o?d:l?p:a.route.Component?_.createElement(a.route.Component,null):a.route.element?a.route.element:e,_.createElement(De,{match:a,routeContext:{outlet:e,matches:f,isDataRoute:null!=n},children:t})};return n&&(a.route.ErrorBoundary||a.route.errorElement||0===r)?_.createElement(Fe,{location:n.location,revalidation:n.revalidation,component:d,error:o,children:m(),routeContext:{outlet:null,matches:f,isDataRoute:!0}}):m()}),null)}var Pe=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(Pe||{}),Le=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(Le||{});function ze(e){let t=_.useContext(be);return t||P(!1),t}function Be(e){let t=_.useContext(xe);return t||P(!1),t}function We(e){let t=function(){let e=_.useContext(ke);return e||P(!1),e}(),n=t.matches[t.matches.length-1];return n.route.id||P(!1),n.route.id}const Ue={};T.startTransition;function Ve(e){return function(e){let t=_.useContext(ke).outlet;return t?_.createElement(Te.Provider,{value:e},t):t}(e.context)}function Ge(e){P(!1)}function He(e){let{basename:t="/",children:n=null,location:a,navigationType:r=A.Pop,navigator:o,static:s=!1,future:i}=e;Ce()&&P(!1);let c=t.replace(/^\/*/,"/"),u=_.useMemo((()=>({basename:c,navigator:o,static:s,future:ye({v7_relativeSplatPath:!1},i)})),[c,i,o,s]);"string"===typeof a&&(a=U(a));let{pathname:l="/",search:d="",hash:p="",state:h=null,key:f="default"}=a,m=_.useMemo((()=>{let e=oe(l,c);return null==e?null:{location:{pathname:e,search:d,hash:p,state:h,key:f},navigationType:r}}),[c,l,d,p,h,f,r]);return null==m?null:_.createElement(ve.Provider,{value:u},_.createElement(we.Provider,{children:n,value:m}))}function je(e){let{children:t,location:n}=e;return Re(Ke(t),n)}new Promise((()=>{}));_.Component;function Ke(e,t){void 0===t&&(t=[]);let n=[];return _.Children.forEach(e,((e,a)=>{if(!_.isValidElement(e))return;let r=[...t,a];if(e.type===_.Fragment)return void n.push.apply(n,Ke(e.props.children,r));e.type!==Ge&&P(!1),e.props.index&&e.props.children&&P(!1);let o={id:e.props.id||r.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(o.children=Ke(e.props.children,r)),n.push(o)})),n}function qe(){return qe=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},qe.apply(this,arguments)}function Xe(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);const Ye=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","unstable_viewTransition"];try{window.__reactRouterVersion="6"}catch(_j){}new Map;const Qe=T.startTransition;F.flushSync,T.useId;function Ze(e){let{basename:t,children:n,future:a,window:r}=e,o=_.useRef();var s;null==o.current&&(o.current=(void 0===(s={window:r,v5Compat:!0})&&(s={}),V((function(e,t){let{pathname:n,search:a,hash:r}=e.location;return B("",{pathname:n,search:a,hash:r},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:W(t)}),null,s)));let i=o.current,[c,u]=_.useState({action:i.action,location:i.location}),{v7_startTransition:l}=a||{},d=_.useCallback((e=>{l&&Qe?Qe((()=>u(e))):u(e)}),[u,l]);return _.useLayoutEffect((()=>i.listen(d)),[i,d]),_.createElement(He,{basename:t,children:n,location:c.location,navigationType:c.action,navigator:i,future:a})}const $e="undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement,Je=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,et=_.forwardRef((function(e,t){let n,{onClick:a,relative:r,reloadDocument:o,replace:s,state:i,target:c,to:u,preventScrollReset:l,unstable_viewTransition:d}=e,p=Xe(e,Ye),{basename:h}=_.useContext(ve),f=!1;if("string"===typeof u&&Je.test(u)&&(n=u,$e))try{let e=new URL(window.location.href),t=u.startsWith("//")?new URL(e.protocol+u):new URL(u),n=oe(t.pathname,h);t.origin===e.origin&&null!=n?u=n+t.search+t.hash:f=!0}catch(_j){}let m=function(e,t){let{relative:n}=void 0===t?{}:t;Ce()||P(!1);let{basename:a,navigator:r}=_.useContext(ve),{hash:o,pathname:s,search:i}=Ee(e,{relative:n}),c=s;return"/"!==a&&(c="/"===s?a:le([a,s])),r.createHref({pathname:c,search:i,hash:o})}(u,{relative:r}),g=function(e,t){let{target:n,replace:a,state:r,preventScrollReset:o,relative:s,unstable_viewTransition:i}=void 0===t?{}:t,c=_e(),u=Ie(),l=Ee(e,{relative:s});return _.useCallback((t=>{if(function(e,t){return 0===e.button&&(!t||"_self"===t)&&!function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)}(t,n)){t.preventDefault();let n=void 0!==a?a:W(u)===W(l);c(e,{replace:n,state:r,preventScrollReset:o,relative:s,unstable_viewTransition:i})}}),[u,c,l,a,r,n,e,o,s,i])}(u,{replace:s,state:i,target:c,preventScrollReset:l,relative:r,unstable_viewTransition:d});return _.createElement("a",qe({},p,{href:n||m,onClick:f||o?a:function(e){a&&a(e),e.defaultPrevented||g(e)},ref:t,target:c}))}));var tt,nt;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(tt||(tt={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(nt||(nt={}));var at=n(579);const rt=function(){return(0,at.jsxs)(at.Fragment,{children:[(0,at.jsx)("nav",{className:"navbar",children:(0,at.jsx)(et,{to:"http://github.com",children:"GitHub"})}),(0,at.jsx)(Ve,{})]})},ot=n.p+"static/media/dancer.18d4eb7c2c248ce148ba.png",st=n.p+"static/media/repeatA.32af11bd75a28ad1ca9d.png",it=n.p+"static/media/repeatB.5a4f72e21d8e57bda398.png";const ct=function(){const e=window.innerWidth,t=Math.ceil(e/(19.6-.08));return(0,at.jsxs)("main",{className:"main-page",children:[(0,at.jsxs)("div",{className:"header",children:[(0,at.jsx)("header",{children:" Dance "}),(0,at.jsx)("header",{children:" Teacher  "})]}),(0,at.jsx)("img",{src:ot,alt:"Dancer",style:{width:"30%",position:"fixed",bottom:"0px",left:"0px",borderRadius:"40% 40% 0 0"}}),[...Array(t).keys()].map((e=>(0,at.jsx)(_.Fragment,{children:(0,at.jsx)("img",{src:e%2===0?it:st,alt:"Repeat",style:{width:"".concat(9.8,"%"),position:"fixed",bottom:"0px",left:"".concat(30+9.72*e,"%")}})},e)))]})},ut=()=>(0,at.jsx)(ct,{}),lt=()=>(0,at.jsx)("h1",{style:{color:"white"},children:"Investors page"}),dt=()=>(0,at.jsx)("h1",{style:{color:"white"},children:"404"});class pt{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class ht{refCount(e){return ft("refCount")}incRef(e){return ft("incRef")}timerAvailable(){return!0}time(e){return ft("time")}read(e){return ft("read")}readSync(e){return ft("readSync")}readToGPU(e,t){return ft("readToGPU")}numDataIds(){return ft("numDataIds")}disposeData(e,t){return ft("disposeData")}write(e,t,n){return ft("write")}move(e,t,n,a,r){return ft("move")}createTensorFromGPUData(e,t,n){return ft("createTensorFromGPUData")}memory(){return ft("memory")}floatPrecision(){return ft("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return ft("dispose")}}function ft(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}function mt(e,t,n){return Math.max(e,Math.min(t,n))}function gt(e){return e%2===0?e:e+1}function yt(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function bt(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function xt(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function vt(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";xt(Ct(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function wt(e){xt(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function kt(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function St(e){return 0===e.length}function Ct(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function It(e){return e%1===0}function Nt(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function _t(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Tt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,o)=>{let s=0;const i=()=>{if(e())return void r();s++;const c=t(s);null!=n&&s>=n?o():null!=a?a(i,c):setTimeout(i,c)};i()}))}function Et(e,t){let n=1,a=-1;for(let o=0;o<e.length;++o)if(e[o]>=0)n*=e[o];else if(-1===e[o]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(o));a=o}else if(e[o]<0)throw Error("Shapes can not be < 0. Found ".concat(e[o]," at dim ").concat(o));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function Rt(e,t){const n=t.length;return xt((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),xt(e.every((e=>It(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function At(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||r?null:Rt(t,e).sort();let s=0;for(let i=0;i<e.length;++i){if(null!=o){if(o[s]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==o[s]||o[s]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),o[s]<=i&&s++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function Ot(e,t){return Ft(e,t)}function Ft(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function Dt(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function Mt(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function Pt(e){return"string"===typeof e||e instanceof String}function Lt(e){return Array.isArray(e)?Lt(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":"number"===typeof e?"float32":Pt(e)?"string":function(e){return"boolean"===typeof e}(e)?"bool":"float32"}function zt(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Bt(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Wt(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function Ut(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const o=t[0]*(a?2:1);for(let t=0;t<o;t++)r[t]=n[e+t]}else{const o=t[0],s=t.slice(1),i=s.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<o;t++)r[t]=Ut(e+t*i,s,n,a)}return r}function Vt(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return Ut(0,e,t,n)}function Gt(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}function Ht(e,t){const n=jt(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function jt(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function Kt(e){e.forEach((t=>{xt(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function qt(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function Xt(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function Yt(e){return e&&e.then&&"function"===typeof e.then}const Qt="tfjsflags";class Zt{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=$t,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Jt().getBool("IS_TEST")||Jt().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Jt().getBool("IS_TEST")||Jt().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Yt(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(Qt in e){e[Qt].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function $t(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function Jt(){return tn}let en,tn=null;function nn(){if(null==en){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}en=e}return en}function an(e,t){const n=function(){const e=nn();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const rn="Abs",on="Acos",sn="Acosh",cn="Add",un="AddN",ln="All",dn="Any",pn="ArgMax",hn="ArgMin",fn="Asin",mn="Asinh",gn="Atan",yn="Atanh",bn="Atan2",xn="AvgPool",vn="AvgPoolGrad",wn="AvgPool3D",kn="AvgPool3DGrad",Sn="BatchMatMul",Cn="BatchToSpaceND",In="Bincount",Nn="BitwiseAnd",_n="BroadcastArgs",Tn="Cast",En="Ceil",Rn="ClipByValue",An="Complex",On="ComplexAbs",Fn="Concat",Dn="Conv2D",Mn="Conv2DBackpropFilter",Pn="Conv2DBackpropInput",Ln="Conv3D",zn="Conv3DBackpropFilterV2",Bn="Conv3DBackpropInputV2",Wn="Cos",Un="Cosh",Vn="Cumprod",Gn="Cumsum",Hn="CropAndResize",jn="DenseBincount",Kn="DepthToSpace",qn="DepthwiseConv2dNative",Xn="DepthwiseConv2dNativeBackpropFilter",Yn="DepthwiseConv2dNativeBackpropInput",Qn="Diag",Zn="Dilation2D",$n="Dilation2DBackpropInput",Jn="Dilation2DBackpropFilter",ea="Draw",ta="RealDiv",na="Einsum",aa="Elu",ra="EluGrad",oa="Erf",sa="Equal",ia="Exp",ca="ExpandDims",ua="Expm1",la="FFT",da="Fill",pa="FlipLeftRight",ha="Floor",fa="FloorDiv",ma="FusedBatchNorm",ga="GatherV2",ya="GatherNd",ba="Greater",xa="GreaterEqual",va="Identity",wa="IFFT",ka="Imag",Sa="IsFinite",Ca="IsInf",Ia="IsNan",Na="LeakyRelu",_a="Less",Ta="LessEqual",Ea="LinSpace",Ra="Log",Aa="Log1p",Oa="LogicalAnd",Fa="LogicalNot",Da="LogicalOr",Ma="LRN",Pa="LRNGrad",La="Max",za="Maximum",Ba="MaxPool",Wa="MaxPoolGrad",Ua="MaxPool3D",Va="MaxPool3DGrad",Ga="MaxPoolWithArgmax",Ha="Mean",ja="Min",Ka="Minimum",qa="MirrorPad",Xa="Mod",Ya="Multinomial",Qa="Multiply",Za="Neg",$a="NotEqual",Ja="NonMaxSuppressionV3",er="NonMaxSuppressionV4",tr="NonMaxSuppressionV5",nr="OnesLike",ar="OneHot",rr="Pack",or="PadV2",sr="Pow",ir="Prelu",cr="Prod",ur="RaggedGather",lr="RaggedRange",dr="RaggedTensorToTensor",pr="Range",hr="Real",fr="Reciprocal",mr="Relu",gr="Reshape",yr="ResizeNearestNeighbor",br="ResizeNearestNeighborGrad",xr="ResizeBilinear",vr="ResizeBilinearGrad",wr="Relu6",kr="Reverse",Sr="Round",Cr="Rsqrt",Ir="ScatterNd",Nr="TensorScatterUpdate",_r="SearchSorted",Tr="Select",Er="Selu",Rr="Slice",Ar="Sin",Or="Sinh",Fr="Sign",Dr="Sigmoid",Mr="Softplus",Pr="Sqrt",Lr="Sum",zr="SpaceToBatchND",Br="SplitV",Wr="Softmax",Ur="SparseFillEmptyRows",Vr="SparseReshape",Gr="SparseSegmentMean",Hr="SparseSegmentSum",jr="SparseToDense",Kr="SquaredDifference",qr="Square",Xr="StaticRegexReplace",Yr="StridedSlice",Qr="StringNGrams",Zr="StringSplit",$r="StringToHashBucketFast",Jr="Sub",eo="Tan",to="Tanh",no="Tile",ao="TopK",ro="Transform",oo="Transpose",so="Unique",io="Unpack",co="UnsortedSegmentSum",uo="ZerosLike",lo="Step",po="FromPixels",ho="RotateWithOffset",fo="_FusedMatMul",mo="FusedConv2D",go="FusedDepthwiseConv2D";function yo(){Jt().getBool("IS_TEST")||Jt().getBool("PROD")||console.warn(...arguments)}function bo(){Jt().getBool("IS_TEST")||Jt().getBool("PROD")||console.log(...arguments)}const xo=an("kernelRegistry",(()=>new Map)),vo=an("gradRegistry",(()=>new Map));function wo(e,t){const n=Io(e,t);return xo.get(n)}function ko(e){return vo.get(e)}function So(e){const t=xo.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[o,s]=r,[i]=o.split("_");i===e&&n.push(s)}return n}function Co(e){const{kernelName:t,backendName:n}=e,a=Io(t,n);xo.has(a)&&yo("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),xo.set(a,e)}function Io(e,t){return"".concat(t,"_").concat(e)}function No(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var _o=n(353);const To=n.n(_o)()||_o;function Eo(e){return To.fromString(e,!0,16)}const Ro=Eo("c3a5c85c97cb3127"),Ao=Eo("b492b66fbe98f273"),Oo=Eo("9ae16a3b2f90404f");function Fo(e){return e.xor(e.shru(47))}function Do(e,t,n){const a=e.slice(t,t+n);return To.fromBytes(Array.from(a),!0,!0)}function Mo(e,t){return Do(e,t,8)}function Po(e,t){return Do(e,t,4)}function Lo(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function zo(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Eo("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Bo(e,t,n,a){return function(e,t,n,a,r,o){r=r.add(e),o=Lo(o.add(r).add(a),21);const s=r;return r=(r=r.add(t)).add(n),o=o.add(Lo(r,44)),[r.add(a),o.add(s)]}(Mo(e,t),Mo(e,t+8),Mo(e,t+16),Mo(e,t+24),n,a)}function Wo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=To.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=Oo.add(2*t),a=Mo(e,0).add(Oo),r=Mo(e,t-8);return zo(Lo(r,37).mul(n).add(a),Lo(a,25).add(r).mul(n),n)}if(t>=4){const n=Oo.add(2*t);return zo(Po(e,0).shl(3).add(t),Po(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return Fo(Oo.mul(n).xor(Ro.mul(a))).mul(Oo)}return Oo}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Oo.add(2*t),a=Mo(e,0).mul(Ao),r=Mo(e,8),o=Mo(e,t-8).mul(n),s=Mo(e,t-16).mul(Oo);return zo(Lo(a.add(r),43).add(Lo(o,30)).add(s),a.add(Lo(r.add(Oo),18)).add(o),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Oo.add(2*t),a=Mo(e,0).mul(Oo),r=Mo(e,8),o=Mo(e,t-8).mul(n),s=Mo(e,t-16).mul(Oo),i=Lo(a.add(r),43).add(Lo(o,30)).add(s),c=zo(i,a.add(Lo(r.add(Oo),18)).add(o),n),u=Mo(e,16).mul(n),l=Mo(e,24),d=i.add(Mo(e,t-32)).mul(n),p=c.add(Mo(e,t-24)).mul(n);return zo(Lo(u.add(l),43).add(Lo(d,30)).add(p),u.add(Lo(l.add(a),18)).add(d),n)}(e,t);let a=n,r=n.mul(Ao).add(113),o=Fo(r.mul(Oo).add(113)).mul(Oo),s=[To.UZERO,To.UZERO],i=[To.UZERO,To.UZERO];a=a.mul(Oo).add(Mo(e,0));let c=0;const u=64*(t-1>>6),l=u+(t-1&63)-63;do{a=Lo(a.add(r).add(s[0]).add(Mo(e,c+8)),37).mul(Ao),r=Lo(r.add(s[1]).add(Mo(e,c+48)),42).mul(Ao),a=a.xor(i[1]),r=r.add(s[0]).add(Mo(e,c+40)),o=Lo(o.add(i[0]),33).mul(Ao),s=Bo(e,c,s[1].mul(Ao),a.add(i[0])),i=Bo(e,c+32,o.add(i[1]),r.add(Mo(e,c+16))),[o,a]=[a,o],c+=64}while(c!==u);const d=Ao.add(o.and(255).shl(1));return c=l,i[0]=i[0].add(t-1&63),s[0]=s[0].add(i[0]),i[0]=i[0].add(s[0]),a=Lo(a.add(r).add(s[0]).add(Mo(e,c+8)),37).mul(d),r=Lo(r.add(s[1]).add(Mo(e,c+48)),42).mul(d),a=a.xor(i[1].mul(9)),r=r.add(s[0].mul(9).add(Mo(e,c+40))),o=Lo(o.add(i[0]),33).mul(d),s=Bo(e,c,s[1].mul(d),a.add(i[0])),i=Bo(e,c+32,o.add(i[1]),r.add(Mo(e,c+16))),[o,a]=[a,o],zo(zo(s[0],i[0],d).add(Fo(r).mul(Ro)).add(o),zo(s[1],i[1],d).add(a),d)}function Uo(e,t){return"string"===t?Ho(e):Vo([e],t)}function Vo(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=qo(e)),Jt().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function Go(){return Jt().platform.now()}function Ho(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Jt().platform.encode(e,t)}function jo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Jt().platform.decode(e,t)}function Ko(e){return null!=Jt().platform.isTypedArray?Jt().platform.isTypedArray(e):No(e)}function qo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||Yt(e)||null==e||Ko(e)&&n)t.push(e);else if(Array.isArray(e)||Ko(e))for(let a=0;a<e.length;++a)qo(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)qo(e[r],t,n)}return t}class Xo{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Qo)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let o;const s=Go();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();o=Promise.resolve({kernelMs:Go()-s})}if(Jt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<a.length;i++){const t=a[i];t.data().then((n=>{Yo(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:o}=e;n.forEach((e=>{Promise.all([e.data(),a,o]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function Yo(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class Qo{logKernelProfile(e,t,n,a,r,o){const s="number"===typeof a?_t("".concat(a,"ms"),9):a.error,i=_t(e,25),c=t.rank,u=t.size,l=_t(t.shape.toString(),14);let d="";for(const p in r){const e=r[p];if(null!=e){const n=e.shape||t.shape,a=n.length;d+="".concat(p,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(s,"\t%c").concat(c,"D ").concat(l,"\t%c").concat(u,"\t%c").concat(d,"\t%c").concat(o),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Zo=20,$o=3,Jo=7;function es(e,t,n,a){const r=Wt(t),o=function(e,t,n,a){const r=kt(t),o=a[a.length-1],s=new Array(o).fill(0),i=t.length,c="complex64"===n?rs(e):e;if(i>1)for(let u=0;u<r/o;u++){const e=u*o;for(let t=0;t<o;t++)s[t]=Math.max(s[t],ts(c[e+t],0,n).length)}return s}(e,t,n,r),s=t.length,i=as(e,t,n,r,o),c=["Tensor"];return a&&(c.push("  dtype: ".concat(n)),c.push("  rank: ".concat(s)),c.push("  shape: [".concat(t,"]")),c.push("  values:")),c.push(i.map((e=>"    "+e)).join("\n")),c.join("\n")}function ts(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(Jo))," + ")+"".concat(parseFloat(e[1].toFixed(Jo)),"j"):Pt(e)?"'".concat(e,"'"):"bool"===n?ns(e):parseFloat(e.toFixed(Jo)).toString(),_t(a,t)}function ns(e){return 0===e?"false":"true"}function as(e,t,n,a,r){let o=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const s="complex64"===n?2:1,i=t[0],c=t.length;if(0===c){if("complex64"===n){return[ts(rs(e)[0],0,n)]}return"bool"===n?[ns(e[0])]:[e[0].toString()]}if(1===c){if(i>Zo){const t=$o*s;let a=Array.from(e.slice(0,t)),o=Array.from(e.slice((i-$o)*s,i*s));return"complex64"===n&&(a=rs(a),o=rs(o)),["["+a.map(((e,t)=>ts(e,r[t],n))).join(", ")+", ..., "+o.map(((e,t)=>ts(e,r[i-$o+t],n))).join(", ")+"]"]}return["["+("complex64"===n?rs(e):Array.from(e)).map(((e,t)=>ts(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),l=a.slice(1),d=a[0]*s,p=[];if(i>Zo){for(let t=0;t<$o;t++){const a=t*d,o=a+d;p.push(...as(e.slice(a,o),u,n,l,r,!1))}p.push("...");for(let t=i-$o;t<i;t++){const a=t*d,o=a+d;p.push(...as(e.slice(a,o),u,n,l,r,t===i-1))}}else for(let m=0;m<i;m++){const t=m*d,a=t+d;p.push(...as(e.slice(t,a),u,n,l,r,m===i-1))}const h=2===c?",":"";p[0]="["+(i>0?p[0]+h:"");for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=",\n";for(let m=2;m<c;m++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(o?"":f),p}function rs(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class os{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=kt(e),null!=n){const e=n.length;xt(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Ft(t,this.size),this.strides=Wt(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),xt(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const o of t){if(o<0||o>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let o=0;o<t.length-1;++o)r+=this.strides[o]*t[o];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ss().makeTensor(this.values,this.shape,this.dtype)}}let ss=null,is=null,cs=null;class us{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=kt(e),this.strides=Wt(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return is.buffer(this.shape,this.dtype,e)}bufferSync(){return is.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Vt(this.shape,e,"complex64"===this.dtype)}arraySync(){return Vt(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=ss().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>jo(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ss().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ss().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>jo(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ss().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ss().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return is.print(this,e)}clone(){return this.throwIfDisposed(),is.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return es(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),is.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),ss().makeVariable(this,e,t,n)}}function ls(){return an("Tensor",(()=>us))}Object.defineProperty(us,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ls();class ds extends us{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!Ct(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));ss().disposeTensor(this),this.dataId=e.dataId,ss().incRef(this,null)}dispose(){ss().disposeVariable(this),this.isDisposedInternal=!0}}var ps,hs,fs,ms,gs;Object.defineProperty(ds,Symbol.hasInstance,{value:e=>e instanceof us&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ps||(ps={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(hs||(hs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(fs||(fs={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ms||(ms={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(gs||(gs={}));const ys={float32:ms,int32:hs,bool:fs,complex64:gs};function bs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return ys[e][t]}function xs(e){return bs(e,"int32")}function vs(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function ws(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function ks(e,t){if(e.dtype===t.dtype)return[e,t];const n=bs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ss(e){const t=[];return Cs(e,t,new Set),t}function Cs(e,t,n){if(null==e)return;if(e instanceof us)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=e;for(const o in r){const e=r[o];n.has(e)||(n.add(e),Cs(e,t,n))}}function Is(e){return null!=e.kernelName}class Ns{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class _s{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ns}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(yo("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Xo(this.backendInstance),!0}setupRegisteredKernels(){So(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){So(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof ht||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,yo("Initialization of backend ".concat(e," failed")),yo(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return yo("Initialization of backend ".concat(e," failed")),yo(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),o=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return _s.nextTensorId++}nextVariableId(){return _s.nextVariableId++}clone(e){const t=Es.runKernel(va,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Es.runKernel(Tn,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=wo(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=a-t-r-o;if(s>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(s," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,o=this.state.numTensors;let s,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=Is(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Is(e)){const{kernelName:t,inputs:r,attrs:o}=e;null==this.backendName&&this.backend;const c=wo(t,this.backendName);xt(null!=c,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),s=()=>{const e=this.backend.numDataIds();i=c.kernelFunc({inputs:r,attrs:o,backend:this.backend});const s=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const u=s.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};s=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:u,attrs:l}=e,d=Is(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(c,u,(()=>s())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=s()})),a&&this.addTapeNode(c,u,t,d,n,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=ko(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let o;a.saveAllInputs?(xt(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),o=Object.keys(t).map((e=>t[e]))):o=e.map((e=>t[e]));const s=n.filter(((e,t)=>r[t]));return o.concat(s)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&Pt(e[0])&&(r=e.map((e=>Ho(e))));const o=a.write(r,t,n),s=new us(t,n,o,this.nextTensorId());if(this.trackTensor(s,a),"string"===n){const e=this.state.tensorInfo.get(o),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,o=new us(a,r,n,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new ds(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Mt(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ds||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Mt(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,o){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=ko(e);null!=i&&(a=i.gradFunc),null!=a&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=jt(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,o))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Ss(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(xt(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));xt(r instanceof us,(()=>"The result y returned by f() must be a tensor."));const o=function(e,t,n){const a={},r={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],o=n.inputs;for(const e in o){const s=o[e];let i=!1;for(let e=0;e<t.length;e++)if(a[s.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const s={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(o[t.outputs[e].id]){for(const e in n)o[n[e].id]=!0,s[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(r[t.id]&&s[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===o.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=Ht(kt(e),"float32");return Es.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const o=t[r],s=[];if(o.outputs.forEach((t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)})),null==o.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(o.kernelName,"."));const i=o.gradient(s);for(const t in o.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const s=o.inputs[t];if(!Ct(r.shape,s.shape))throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(s.shape,"'"));if(null==e[s.id])e[s.id]=r;else{const t=e[s.id];e[s.id]=a(t,r),t.dispose()}}}}(e,o,(e=>this.tidy(e)),Rs);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return xt(zt(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let o;xt(a.every((e=>e instanceof us)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};a.forEach(((e,t)=>{s[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(o=e(...a,n),xt(o.value instanceof us,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),xt(zt(o.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),o.value),backwardsFunc:(e,t)=>{const n=o.gradFunc(e,t),r=Array.isArray(n)?n:[n];xt(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),xt(r.every((e=>e instanceof us)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return r.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Go(),n=await this.backend.time(e);return n.wallMs=Go()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ns;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ts(){const e=nn();if(null==e._tfengine){const t=new Zt(e);e._tfengine=new _s(t)}var t;return t=e._tfengine.ENV,tn=t,function(e){ss=e}((()=>e._tfengine)),e._tfengine}_s.nextTensorId=0,_s.nextVariableId=0;const Es=Ts();function Rs(e,t){const n={a:e,b:t};return Es.runKernel(cn,n)}let As;function Os(e){if(void 0!==As)return As;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Fs(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const Ds=Jt();function Ms(e,t){let n=e;if(Ko(e))return"string"===t?[]:[e.length];if(vs(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(ws(e))return[e.buffer.size/(null==t?4:Mt(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||Ko(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&Jt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ps(e,a,[]),a}function Ps(e,t,n){if(n=n||[],!Array.isArray(e)&&!Ko(e))return void xt(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));xt(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),xt(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)Ps(e[r],a,n.concat(r))}function Ls(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function zs(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof ls())return Ls(a,e.dtype,t,n),e;let r=Lt(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),Ls(a,r,t,n),null==e||!Ko(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const o=Ms(e,r);Ko(e)||Array.isArray(e)||(e=[e]);const s="string"!==r?Vo(e,r):qo(e,[],!0);return Es.makeTensor(s,o,r)}function Bs(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,r)=>zs(e,"".concat(t,"[").concat(r,"]"),n,a)))}Ds.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ds.registerFlag("IS_BROWSER",(()=>Fs())),Ds.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),Ds.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ds.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Ds.registerFlag("PROD",(()=>!1)),Ds.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ds.getBool("DEBUG"))),Ds.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ds.registerFlag("IS_TEST",(()=>!1)),Ds.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Ds.getBool("DEBUG"))),Ds.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Ds.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Ds.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Ws="__op";function Us(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ws;const r=function(){Es.startScope(n);try{const e=a(...arguments);return Yt(e)&&console.error("Cannot return a Promise inside of tidy."),Es.endScope(e),e}catch(e){throw Es.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const Vs=Us({complex_:function(e,t){const n=zs(e,"real","complex"),a=zs(t,"imag","complex");vt(n.shape,a.shape,"real and imag shapes, ".concat(n.shape," and ").concat(a.shape,", ")+"must match in call to tf.complex().");const r={real:n,imag:a};return Es.runKernel(An,r)}});function Gs(e,t,n,a){if(null==a)a=Lt(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(ws(e)||vs(e)){if("float32"!==a&&"int32"!==a)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(a,"."));return Es.backend.createTensorFromGPUData(e,t||n,a)}if(!Ko(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Kt(t);const e=kt(t),a=kt(n);xt(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==kt(t.slice(r));xt(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return Ko(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?Vo(e,a):qo(e,[],!0),Es.makeTensor(e,t,a)}function Hs(e,t,n){return Gs(e,t,Ms(e,n),n)}const js={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Ks{static join(e){return new Ks(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Ko(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let o=0;for(let s=n;s<this.shards.length;s++){const n=this.shards[s],a=e+o-n.start,i=o,c=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,a,c-a);if(r.set(u,i),o+=u.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,o=t(e[r]);if(0===o)return r;o<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function qs(){return Es}function Xs(e,t){return Es.tidy(e,t)}function Ys(e){Ss(e).forEach((e=>e.dispose()))}function Qs(e){return Es.keep(e)}function Zs(){return Es.backendName}function $s(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Es.registerBackend(e,t,n)}function Js(){return Es.backend}!function(e){cs=e}((function(e){Jt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}));const ei=4;async function ti(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let o=0;o<r.length;++o){const s=r[o],i=Array.isArray(e)?e[o].tensor:e[s];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(s,"': ").concat(i.dtype));const c={name:s,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+ei*t.length,a=new Uint8Array(n);let r=0;for(let o=0;o<t.length;o++){const e=t[o],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=ei,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:ci(await Promise.all(a)),specs:n}}function ni(e,t){const n=new Ks(e),a={};let r=0;for(const o of t){const e=ai(o,((e,t)=>n.slice(r+e,r+t)));a[o.name]=oi(o,n.slice(r,r+e)),r+=e}return a}function ai(e,t){const n=kt(e.shape);let a;if("quantization"in e){const t=e.quantization;a=js[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=ei+new Uint32Array(t(e,e+ei))[0];return e}a=js[e.dtype]}return n*a}async function ri(e,t){const n=kt(e.shape);let a;if("quantization"in e){const t=e.quantization;a=js[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=ei+new Uint32Array(await t(e,e+ei))[0];return e}a=js[e.dtype]}return n*a}function oi(e,t){const n=e.name,a=e.dtype,r=e.shape,o=kt(r);let s,i=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error("Weight ".concat(e.name," with quantization ").concat(r.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==r.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(r.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==a)throw new Error("Weight ".concat(e.name," is quantized with ").concat(r.dtype," ")+"which only supports weights of type float32 not ".concat(a,"."))}const c=js[r.dtype],u="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===r.dtype||"uint16"===r.dtype){s=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];s[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),o=new Uint32Array(r);for(let s=0;s<a.length;s++){const r=a[s],i=e[n[r>>10]+(1023&r)]+t[r>>10];o[s]=i}return new Float32Array(r)}}();s=e(u)}}else{if("int32"!==a)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a));if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type int32.");s=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];s[e]=Math.round(t*r.scale+r.min)}}i+=o*c}else if("string"===a){const n=kt(e.shape);s=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(i,i+ei))[0];i+=ei;const n=new Uint8Array(t.slice(i,i+e));s.push(n),i+=e}}else{const e=js[a];if("float32"===a)s=new Float32Array(t);else if("int32"===a)s=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){s=new Float32Array(t);const e=new Float32Array(s.length/2),n=new Float32Array(s.length/2);for(let t=0;t<e.length;t++)e[t]=s[2*t],n[t]=s[2*t+1];const a=Hs(e,r,"float32"),o=Hs(n,r,"float32"),i=Vs(a,o);return a.dispose(),o.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a))}s=new Uint8Array(t)}i+=o*e}return Hs(s,r,a)}async function si(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const o=new Uint8Array(a.length+r.byteLength);o.set(a,0),o.set(new Uint8Array(r),a.length),a=o}return a.buffer}async function ii(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const o of t){const e=await ri(o,(async(e,t)=>(r=await si(a,r,t),r.slice(e,t))));r=await si(a,r,e);const t=r.slice(0,e);r=r.slice(e);const s=oi(o,t);if(n[o.name]=s,"webgpu"===Zs()){const e=Js();"uploadToGPU"in e&&kt(s.shape)>=Jt().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(s.dataId)}}return n}function ci(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const ui="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function li(e){return ui?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function di(e){return Ks.join(e)}function pi(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function hi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function fi(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function mi(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),fi(e,n,a)}function gi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:li(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:li(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ks(e.weightData).byteLength}}function yi(e){const t=[];for(const n of e)t.push(...n.weights);return t}class bi{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==bi.instance&&(bi.instance=new bi),bi.instance}static registerSaveRouter(e){bi.getInstance().saveRouters.push(e)}static registerLoadRouter(e){bi.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return bi.getHandlers(e,"save")}static getLoadHandlers(e,t){return bi.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?bi.getInstance().loadRouters:bi.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const xi=e=>bi.registerSaveRouter(e),vi=e=>bi.registerLoadRouter(e),wi=e=>bi.getSaveHandlers(e),ki=(e,t)=>bi.getLoadHandlers(e,t),Si="tensorflowjs",Ci="models_store",Ii="model_info_store";function Ni(){if(!Jt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function _i(e){const t=e.result;t.createObjectStore(Ci,{keyPath:"modelPath"}),t.createObjectStore(Ii,{keyPath:"modelPath"})}class Ti{constructor(e){if(this.indexedDB=Ni(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(Si,1);a.onupgradeneeded=()=>_i(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(Ci,"readonly"),a=t.objectStore(Ci).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=Ks.join(t.weightData);const a=gi(t),s=r.transaction(Ii,"readwrite");let i,c,u=s.objectStore(Ii);try{i=u.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(o){return n(o)}i.onsuccess=()=>{c=r.transaction(Ci,"readwrite");const i=c.objectStore(Ci);let l;try{l=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(o){return n(o)}l.onsuccess=()=>e({modelArtifactsInfo:a}),l.onerror=e=>{u=s.objectStore(Ii);const t=u.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(l.error)),t.onerror=e=>(r.close(),n(l.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}Ti.URL_SCHEME="indexeddb://";const Ei=e=>{return Jt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ti.URL_SCHEME)?(t=e.slice(Ti.URL_SCHEME.length),new Ti(t)):null;var t};bi.registerSaveRouter(Ei),bi.registerLoadRouter(Ei);class Ri{constructor(){this.indexedDB=Ni()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Si,1);n.onupgradeneeded=()=>_i(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(Ii,"readonly"),o=r.objectStore(Ii).getAll();o.onsuccess=()=>{const t={};for(const e of o.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},o.onerror=e=>(a.close(),t(o.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Ti.URL_SCHEME)?t.slice(Ti.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(Si,1);a.onupgradeneeded=()=>_i(a),a.onsuccess=()=>{const r=a.result,o=r.transaction(Ii,"readwrite"),s=o.objectStore(Ii),i=s.get(e);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=s.delete(e),o=()=>{c=r.transaction(Ci,"readwrite");const a=c.objectStore(Ci).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=o,a.onerror=e=>(o(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}const Ai="/",Oi="tensorflowjs_models",Fi="info",Di="model_topology",Mi="weight_specs",Pi="weight_data",Li="model_metadata";function zi(e){return{info:[Oi,e,Fi].join(Ai),topology:[Oi,e,Di].join(Ai),weightSpecs:[Oi,e,Mi].join(Ai),weightData:[Oi,e,Pi].join(Ai),modelMetadata:[Oi,e,Li].join(Ai)}}function Bi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Wi(e){const t=e.split(Ai);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(Ai)}class Ui{constructor(e){if(!Jt().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=zi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=gi(e),o=Ks.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(e){if(ui)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}(o));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw Bi(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=function(e){if(ui){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}(o),t}}Ui.URL_SCHEME="localstorage://";const Vi=e=>{return Jt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ui.URL_SCHEME)?(t=e.slice(Ui.URL_SCHEME.length),new Ui(t)):null;var t};bi.registerSaveRouter(Vi),bi.registerLoadRouter(Vi);class Gi{constructor(){xt(Jt().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),xt("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Oi+Ai,n=Ai+Fi;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[Wi(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=zi(e=(t=e).startsWith(Ui.URL_SCHEME)?t.slice(Ui.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return Bi(n),a}}const Hi="://";class ji{constructor(){this.managers={}}static getInstance(){return null==ji.instance&&(ji.instance=new ji),ji.instance}static registerManager(e,t){xt(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Hi)&&(e=e.slice(0,e.indexOf(Hi))),xt(e.length>0,(()=>"scheme must not be an empty string."));const n=ji.getInstance();xt(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=ji.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(ji.getInstance().managers)}}function Ki(e){if(-1===e.indexOf(Hi))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(ji.getSchemes().join(",")));return{scheme:e.split(Hi)[0],path:e.split(Hi)[1]}}async function qi(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];xt(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=bi.getLoadHandlers(e);xt(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),xt(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],o=bi.getSaveHandlers(t);xt(o.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),xt(o.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const s=o[0],i=Ki(e).scheme,c=Ki(e).path,u=i===Ki(e).scheme,l=await r.load();n&&u&&await ji.getManager(i).removeModel(c);const d=await s.save(l);return n&&!u&&await ji.getManager(i).removeModel(c),d.modelArtifactsInfo}async function Xi(){const e=ji.getSchemes(),t={};for(const n of e){const e=await ji.getManager(n).listModels();for(const a in e){t[n+Hi+a]=e[a]}}return t}async function Yi(e){const t=Ki(e);return ji.getManager(t.scheme).removeModel(t.path)}async function Qi(e,t){return qi(e,t,!1)}async function Zi(e,t){return qi(e,t,!0)}class $i{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&Jt().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return No(e)}}if(Jt().get("IS_BROWSER")){Jt().setPlatform("browser",new $i);try{ji.registerManager(Ui.URL_SCHEME,new Gi)}catch(Tj){}try{ji.registerManager(Ti.URL_SCHEME,new Ri)}catch(Tj){}}const Ji=()=>n(817);let ec;class tc{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Jt().global.fetch?Jt().global.fetch(e,t):(null==ec&&(ec=Ji()),ec(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function nc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",Kt(e),new os(e,t,n)}Jt().get("IS_NODE")&&!Jt().get("IS_BROWSER")&&Jt().setPlatform("node",new tc);const ac=Us({cast_:function(e,t){const n=zs(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:t};return Es.runKernel(Tn,a,r)}});const rc=Us({clone_:function(e){const t={x:zs(e,"x","clone","string_or_numeric")};return Es.runKernel(va,t)}});function oc(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}Ts();is={buffer:nc,cast:ac,clone:rc,print:oc};const sc=Us({add_:function(e,t){let n=zs(e,"a","add"),a=zs(t,"b","add");[n,a]=ks(n,a);const r={a:n,b:a};return Es.runKernel(cn,r)}});const ic=Us({floorDiv_:function(e,t){let n=zs(e,"a","floorDiv"),a=zs(t,"b","floorDiv");[n,a]=ks(n,a);const r={a:n,b:a};return Es.runKernel(fa,r)}});const cc=Us({div_:function(e,t){let n=zs(e,"a","div"),a=zs(t,"b","div");if([n,a]=ks(n,a),"int32"===n.dtype&&"int32"===a.dtype)return ic(n,a);const r={a:n,b:a};return Es.runKernel(ta,r,{})}});const uc=Us({mul_:function(e,t){let n=zs(e,"a","mul"),a=zs(t,"b","mul");[n,a]=ks(n,a);const r={a:n,b:a};return Es.runKernel(Qa,r)}});const lc=Us({sqrt_:function(e){const t={x:zs(e,"x","sqrt","float32")};return Es.runKernel(Pr,t)}});const dc=Us({square_:function(e){const t=zs(e,"x","square");return Es.runKernel("Square",{x:t},{})}});const pc=Us({zerosLike_:function(e){const t={x:zs(e,"x","zerosLike")};return Es.runKernel(uo,t)}});function hc(e){return Es.customGrad(e)}function fc(e,t){if((Ko(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Ko(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Gs(e,[],[],t)}const mc=new Map,gc=new Map;class yc{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class bc{constructor(){this.classNameMap={}}static getMap(){return null==bc.instance&&(bc.instance=new bc),bc.instance}static register(e){bc.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function xc(e,t,n){xt(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),xt("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),xt(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return bc.register(e),mc.set(a,e),gc.set(e,a),e}class vc extends yc{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return Ys(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){xt(zt(e),(()=>"The f passed in variableGrads(f) must be a function")),xt(null==t||Array.isArray(t)&&t.every((e=>e instanceof ds)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Es.registeredVariables)t.push(Es.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),xt(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(r," variables is ")+"trainable."));const{value:o,grads:s}=Es.gradients(e,t,null,!0);xt(s.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),xt(0===o.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(o.rank," tensor")));const i={};return t.forEach(((e,t)=>{null!=s[t]&&(i[e.name]=s[t])})),null!=a&&a.forEach((e=>i[e.name]=null)),{value:o,grads:i}}(e,t)}dispose(){null!=this.iterations_&&Ys(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:fc(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(vc,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});function wc(e,t,n){Kt(e);const a={shape:e,value:t,dtype:n=n||Lt(t)};return Es.runKernel(da,{},a)}const kc=Us({pow_:function(e,t){let n=zs(e,"base","pow"),a=zs(t,"exp","pow");[n,a]=ks(n,a);const r={a:n,b:a};return Es.runKernel(sr,r)}});const Sc=Us({sub_:function(e,t){let n=zs(e,"a","sub"),a=zs(t,"b","sub");[n,a]=ks(n,a);const r={a:n,b:a};return Es.runKernel(Jr,r)}});const Cc=Us({abs_:function(e){const t=zs(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Es.runKernel(On,e)}{const e={x:t};return Es.runKernel(rn,e)}}});function Ic(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const o=n-1-r,s=e[o]||1;(t[t.length-1-r]||1)>1&&1===s&&a.unshift(o)}return a}function Nc(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],o=t.length-a-1,s=t[o];(null==r||1===r&&s>1)&&n.unshift(o)}return n}function _c(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let o=e[e.length-r-1];null==o&&(o=1);let s=t[t.length-r-1];if(null==s&&(s=1),1===o)a[n-r-1]=s;else if(1===s)a[n-r-1]=o;else{if(o!==s){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=o}}return a}const Tc=Us({maximum_:function(e,t){let n=zs(e,"a","maximum"),a=zs(t,"b","maximum");[n,a]=ks(n,a),"bool"===n.dtype&&(n=ac(n,"int32"),a=ac(a,"int32")),_c(n.shape,a.shape);const r={a:n,b:a};return Es.runKernel(za,r)}});class Ec extends vc{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=Es.registeredVariables[t];Xs((()=>{const e=sc(uc(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Qs(fc(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}const Rc=[class extends vc{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Es.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Es.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:Xs((()=>pc(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:Xs((()=>pc(a).variable(r)))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Xs((()=>{const e=sc(uc(s,this.rho),uc(dc(o),1-this.rho)),t=uc(cc(lc(sc(i,this.epsilon)),lc(sc(s,this.epsilon))),o),n=sc(uc(i,this.rho),uc(dc(t),1-this.rho));s.assign(e),i.assign(n);const r=sc(uc(t,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ys(this.accumulatedGrads.map((e=>e.variable))),Ys(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},class extends vc{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Es.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:Xs((()=>wc(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const o=this.accumulatedGrads[n].variable;Xs((()=>{const e=sc(o,dc(r));o.assign(e);const t=sc(uc(cc(r,lc(sc(e,Es.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ys(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},class extends vc{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Xs((()=>{this.accBeta1=fc(t).variable(),this.accBeta2=fc(n).variable()})),null==a&&(this.epsilon=Es.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Xs((()=>{const n=Sc(1,this.accBeta1),a=Sc(1,this.accBeta2);t.forEach(((t,r)=>{const o=Es.registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:Xs((()=>pc(o).variable(s)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:Xs((()=>pc(o).variable(s)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,l=sc(uc(c,this.beta1),uc(i,1-this.beta1)),d=sc(uc(u,this.beta2),uc(dc(i),1-this.beta2)),p=cc(l,n),h=cc(d,a);c.assign(l),u.assign(d);const f=sc(uc(cc(p,sc(lc(h),this.epsilon)),-this.learningRate),o);o.assign(f)})),this.accBeta1.assign(uc(this.accBeta1,this.beta1)),this.accBeta2.assign(uc(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ys(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Ys(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Xs((()=>{this.accBeta1.assign(kc(this.beta1,this.iterations_+1)),this.accBeta2.assign(kc(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},class extends vc{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Xs((()=>{this.iteration=fc(0).variable(),this.accBeta1=fc(t).variable()})),null==a&&(this.epsilon=Es.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Xs((()=>{const n=Sc(1,this.accBeta1),a=cc(-this.learningRate,sc(uc(this.iteration,this.decay),1));t.forEach(((t,r)=>{const o=Es.registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:pc(o).variable(s)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:pc(o).variable(s)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,l=sc(uc(c,this.beta1),uc(i,1-this.beta1)),d=uc(u,this.beta2),p=Cc(i),h=Tc(d,p);c.assign(l),u.assign(h);const f=sc(uc(cc(a,n),cc(l,sc(h,this.epsilon))),o);o.assign(f)})),this.iteration.assign(sc(this.iteration,1)),this.accBeta1.assign(uc(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ys(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Ys(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},class extends Ec{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=fc(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Es.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:Xs((()=>pc(a).variable(e)))}}const r=this.accumulations[n].variable,o=Array.isArray(e)?e[n].tensor:e[t];null!=o&&Xs((()=>{let e;const t=sc(uc(this.m,r),o);e=this.useNesterov?sc(uc(this.c,sc(o,uc(t,this.m))),a):sc(uc(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ys(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},class extends vc{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=Es.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Es.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:Xs((()=>pc(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:Xs((()=>pc(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:Xs((()=>pc(a).variable(r)))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Xs((()=>{const e=sc(uc(s,this.decay),uc(dc(o),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=sc(uc(t,this.decay),uc(o,1-this.decay)),c=cc(uc(o,this.learningRate),lc(Sc(e,sc(dc(r),this.epsilon)))),u=sc(uc(i,this.momentum),c);s.assign(e),t.assign(r),i.assign(u);const l=Sc(a,u);a.assign(l)}else{const e=sc(uc(s,this.decay),uc(dc(o),1-this.decay)),t=sc(uc(i,this.momentum),cc(uc(o,this.learningRate),lc(sc(e,this.epsilon))));s.assign(e),i.assign(t);const n=Sc(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ys(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ys(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Ys(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},Ec];function Ac(e){return new Promise((e=>setTimeout(e))).then(e)}class Oc{constructor(e){if(!Jt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Oc.URL_SCHEME)&&(e=e.slice(Oc.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Ks.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=hi(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await Ac((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Ac((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:gi(e)}}}}Oc.URL_SCHEME="downloads://";class Fc{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const o=mi(a,(e=>this.loadWeights(e)));e(o)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const o of e)t.push(...o.weights),n.push(...o.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>pi(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=pi(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function Dc(e){return new Fc(e)}function Mc(e,t,n,a){!function(e){xt(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){xt(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),xt(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),xt(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((o=>(o.then((o=>{const s=n+ ++r/e.length*(a-n);return t(s),o})),o))))}async function Pc(e,t){null==t&&(t={});const n=null==t.fetchFunc?Jt().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await Mc(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Mc(r,t.onProgress,.5,1)}async function Lc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return zc((e=>Pc(e,{requestInit:a})))(e,t,n)}function zc(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),o={},s=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,u=js[c]*kt(e.shape),l=()=>{r[t]=!0,null==o[t]&&(o[t]=[]),o[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=a?a.forEach(((t,n)=>{t===e.name&&(l(),s[n]=!0)})):l(),i.push(e.name),n+=u}))})),!s.every((e=>e))){const e=a.filter(((e,t)=>!s[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];c.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const l=await e(u),d={};let p=0;return c.forEach((e=>{const n=t[e].paths.length,a=new Ks(l.slice(p,p+n));o[e].forEach((e=>{const t=ni(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)d[n]=t[n]})),p+=n})),d}}bi.registerSaveRouter((e=>Jt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Oc.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Oc(e)}(e.slice(Oc.URL_SCHEME.length)):null));class Bc{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(xt("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Jt().platform.fetch,xt(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&xt(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=hi(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Ks.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:gi(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(_j){let t="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return mi(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=yi(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?Jt().platform.fetch:t.fetchFunc;let r,o=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var s;o<e.length;){if(!r){const n=(await a(e[o],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);o++,r=void 0,null===(s=t.onProgress)||void 0===s||s.call(t,o/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,o=[],s=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?s.push(this.weightUrlConverter(e)):o.push(r+e+a);return this.weightUrlConverter&&o.push(...await Promise.all(s)),o}async loadWeights(e){const t=await this.getWeightUrls(e);return[yi(e),await Pc(t,this.loadOptions)]}}function Wc(e){return null!=e.match(Bc.URL_SCHEME_REGEX)}Bc.URL_SCHEME_REGEX=/^https?:\/\//;const Uc=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Wc(e))):Wc(e),n)return Vc(e,t)}return null};function Vc(e,t){return new Bc(e,t)}function Gc(e,t){return Vc(e,t)}bi.registerSaveRouter(Uc),bi.registerLoadRouter(Uc);class Hc{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class jc{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Kc{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function qc(e,t,n,a){return new Kc(Xc(...arguments))}function Xc(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Hc(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Hc({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Hc({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function Yc(e){return new jc(e)}function Qc(e){return new jc(e)}function Zc(e,t,n){if(wt(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=Ms(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Gs(e,t,a,n)}let $c,Jc=!1;function eu(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,o=!1,s=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)o=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}if(null!=wo(po,Es.backendName)){const n={pixels:e},a={numChannels:t};return Es.runKernel(po,n,a)}const[c,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,d;if(s)l=e.getContext("2d").getImageData(0,0,c,u).data;else if(a||n)l=e.data;else if(o||r||i){if(null==$c)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");$c=new OffscreenCanvas(1,1).getContext("2d")}else $c=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});$c.canvas.width=c,$c.canvas.height=u,$c.drawImage(e,0,0,c,u),l=$c.getImageData(0,0,c,u).data}if(4===t)d=new Int32Array(l);else{const e=c*u;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=l[4*n+e]}return Zc(d,[u,c,t],"int32")}function tu(e){if(2!==e.rank&&3!==e.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(e.rank,"."));const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(t));if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error("Unsupported type for toPixels: ".concat(e.dtype,".")+" Please use float32 or int32 tensors.")}async function nu(e,t){let n=zs(e,"img","toPixels");if(!(e instanceof us)){const e=n;n=ac(e,"int32"),e.dispose()}tu(n);const[a,r]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2],s=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(r*a*4);for(let u=0;u<a*r;++u){const e=[0,0,0,255];for(let a=0;a<o;a++){const t=s[u*o+a];if("float32"===n.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===n.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===o?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[a]=t*i}const t=4*u;c[t+0]=Math.round(e[0]),c[t+1]=Math.round(e[1]),c[t+2]=Math.round(e[2]),c[t+3]=Math.round(e[3])}if(null!=t){if(!Jc){null!=wo(ea,Es.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Jc=!0)}t.width=r,t.height=a;const e=t.getContext("2d"),n=new ImageData(c,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),c}const au=Us({fromPixels_:eu});function ru(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===kt(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,o=r[r.length-1];let s=1;for(let d=0;d<r.length-1;++d)s*=r[d];const i=e.shape,c=r.slice();c.pop();let u=1;for(let d=o;d<n;++d)u*=i[d],c.push(i[d]);const l=[...Wt(e.shape).map((e=>e/u)),1].slice(0,o);return[c,s,u,l]}function ou(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(o+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(o+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(o+" update.rank != ".concat(r+e.length-a));for(let s=0;s<r;++s)if(n.shape[s]!==t.shape[s])throw new Error(o+" updates.shape[".concat(s,"] (").concat(n.shape[s],") != indices.shape[").concat(s,"] (").concat(t.shape[s],")."));for(let s=0;s<n.rank-r;++s)if(n.shape[s+r]!==e[s+a])throw new Error(o+" updates.shape[".concat(s+r,"] (").concat(n.shape[s+r],") != shape[").concat(s+r,"] (").concat(e[s+r],")"))}function su(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}ou(n,t,e)}function iu(e,t,n){const a=t.shape.length,r=a>1?t.shape[a-1]:1,o=n.length;let s=1;for(let c=r;c<o;++c)s*=n[c];const i=r<1?1:r;return{sliceRank:r,numUpdates:kt(t.shape)/i,sliceSize:s,strides:[...Wt(n.slice(0,r)),1],outputSize:kt(n)}}const cu=-2,uu=-1;function lu(e,t,n){const a=e.shape.length;xt(a===t.length,(()=>"Error in slice".concat(a,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(a,")."))),xt(a===n.length,(()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,").")));for(let r=0;r<a;++r)xt(t[r]+n[r]<=e.shape[r],(()=>"Error in slice".concat(a,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(t[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(e.shape[r],")")))}function du(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function pu(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function hu(e,t,n,a){const r=[...e];for(let o=r.length;o<a.length;o++)r.push(1);for(let o=0;o<n;o++)0===o?r[t]=1:(r.splice(t,0,1),r.pop());return r}function fu(e,t,n){return n<=e?n:n-(t-1)}function mu(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function gu(e,t,n,a,r,o,s,i,c){const u=e.length;let l=new Array(u),d=new Array(u),p=new Array(u);if(t.length&&n>0){const c=t[0],u=n+1;l=yu(s,c,u,a,e),d=bu(i,c,u,r,e),p=hu(o,c,u,e)}else for(let h=0;h<u;h++)l[h]=vu(s,a,o,e,h,c),d[h]=wu(i,r,o,e,h,c),p[h]=xu(o,h,c);return{begin:l,end:d,strides:p}}function yu(e,t,n,a,r){const o=[...r],s=mu(n,t);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=0;else{const r=fu(t,n,i);let s=a[r];e&1<<r&&(s=0),o[i]=s}return o}function bu(e,t,n,a,r){const o=[...r],s=mu(n,t);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const r=fu(t,n,i);let s=a[r];e&1<<r&&(s=Number.MAX_SAFE_INTEGER),o[i]=s}for(let i=0;i<o.length;i++){const e=r[i];o[i]<0&&(o[i]+=e),o[i]=mt(0,o[i],r[i])}return o}function xu(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function vu(e,t,n,a,r,o){let s=t[r];const i=n[r]||1;(e&1<<r||o&1<<r||null==s)&&(s=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[r];return s<0&&(s+=c),s=mt(0,s,c-1),s}function wu(e,t,n,a,r,o){let s=t[r];const i=n[r]||1;(e&1<<r||o&1<<r||null==s)&&(s=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[r];return s<0&&(s+=c),s=i>0?mt(0,s,c):mt(-1,s,c-1),s}function ku(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Su(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Cu(e,t,n){let a;const r=e.shape.length;let o;return a="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),a.forEach((e=>{xt(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(xt(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-a[n]))),[a,o]}function Iu(e,t,n,a,r,o,s,i,c){let u;if(null==a?(u=new Array(t.length),u.fill(1)):u=a,null!=s&&0!==(s&s-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:o,ellipsisMask:s,newAxisMask:i,shrinkAxisMask:c};for(let b=0;b<d.dims;b++)l&&0!==(1<<b&i)&&d.numAddAxisAfterEllipsis++,1<<b&s&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(cu),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(uu),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(d,p);let h=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===p.strides[b])throw Error("strides[".concat(b,"] must be non-zero"));const t=!!(p.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const a=[p.beginMask&1<<b,p.endMask&1<<b],r=[p.strides[b]>0?0:-1,p.strides[b]>0?n:n-1];if(t&&p.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[b];const o=!!(p.beginMask&1<<b&&p.endMask&1<<b);if(p.beginValid&&p.endValid){if(t){const e=p.begin[b]<0?n+p.begin[b]:p.begin[b];if(p.begin[b]=e,p.end[b]=p.begin[b]+1,e<0||e>=n)throw Error("slice index ".concat(p.begin[b]," of dimension ").concat(b," out of bounds."))}else p.begin[b]=Nu(p.begin[b],0,p.strides[b],n,a,r),p.end[b]=Nu(p.end[b],1,p.strides[b],n,a,r);const e=1===p.strides[b]&&0===p.begin[b]&&p.end[b]===n;h=h&&e,f=f&&(0===b&&1===p.strides[b]||e)}else h=h&&1===p.strides[b]&&o,f=f&&(0===b&&1===p.strides[b]||o);let s,i=!1;if(p.beginValid&&p.endValid?(s=p.end[b]-p.begin[b],i=!0):t?(s=1,i=!0):o&&n>=0&&(s=p.strides[b]<0?-n:n,i=!0),i){let e;e=0===s||s<0!==p.strides[b]<0?0:Math.trunc(s/p.strides[b])+(s%p.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<p.finalShapeGatherIndices.length;++b){const e=p.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===cu&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>p.finalShapeGatherIndices[t]!==cu)),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Nu(e,t,n,a,r,o){if(r[t])return n>0?o[t]:o[t+1&1];{const t=e<0?a+e:e;return t<o[0]?o[0]:t>o[1]?o[1]:t}}const _u=Us({acos_:function(e){const t={x:zs(e,"x","acos")};return Es.runKernel(on,t)}});const Tu=Us({acosh_:function(e){const t={x:zs(e,"x","acosh")};return Es.runKernel(sn,t)}});const Eu=Us({addN_:function(e){xt(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),xt(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>zs(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!Ct(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return Es.runKernel(un,a)}});const Ru=Us({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:zs(e,"x","all","bool")},r={axis:t,keepDims:n};return Es.runKernel(ln,a,r)}});const Au=Us({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:zs(e,"x","any","bool")},r={axis:t,keepDims:n};return Es.runKernel(dn,a,r)}});const Ou=Us({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:zs(e,"x","argMax")},a={axis:t};return Es.runKernel(pn,n,a)}});const Fu=Us({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:zs(e,"x","argMin")},a={axis:t};return Es.runKernel(hn,n,a)}});const Du=Us({asin_:function(e){const t={x:zs(e,"x","asin")};return Es.runKernel(fn,t)}});const Mu=Us({asinh_:function(e){const t={x:zs(e,"x","asinh")};return Es.runKernel(mn,t)}});const Pu=Us({atan_:function(e){const t={x:zs(e,"x","atan")};return Es.runKernel(gn,t)}});const Lu=Us({atan2_:function(e,t){let n=zs(e,"a","atan2"),a=zs(t,"b","atan2");[n,a]=ks(n,a);const r={a:n,b:a};return Es.runKernel(bn,r)}});const zu=Us({atanh_:function(e){const t={x:zs(e,"x","atanh")};return Es.runKernel(yn,t)}});function Bu(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",o=arguments.length>5?arguments[5]:void 0;return Vu(e,[...t,e[3]],n,o,a,null,null,$u(r))}function Wu(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[i,c]=ju(t);let u;if("channelsLast"===s)u=[i,c,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));u=[i,c,e[1],e[1]]}return Vu(e,u,n,a,r,o,!1,s)}function Uu(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,c,u]=Ku(t);let l,d;if("NDHWC"===s)d="channelsLast",l=[i,c,u,e[4],e[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat ".concat(s));d="channelsFirst",l=[i,c,u,e[1],e[1]]}return Gu(e,l,n,a,r,!1,d,o)}function Vu(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,u,l,d]=[-1,-1,-1,-1];if("channelsLast"===i)[c,u,l,d]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,d,u,l]=e}const[p,h,,f]=t,[m,g]=ju(n),[y,b]=ju(a),x=qu(p,y),v=qu(h,b),{padInfo:w,outHeight:k,outWidth:S}=function(e,t,n,a,r,o,s,i,c){let u,l,d;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=Hu(e,t,n));const o=e[0],s=e[1],i=Xu((o-t+2*a)/n+1,r),c=Xu((s-t+2*a)/n+1,r);return[i,c]}([t,n],o,a,e,i);l=r[0],d=r[1]}else if("same"===e){l=Math.ceil(t/a),d=Math.ceil(n/r);const e=Math.max(0,(l-1)*a+o-t),i=Math.max(0,(d-1)*r+s-n),c=Math.floor(e/2),p=e-c,h=Math.floor(i/2);u={top:c,bottom:p,left:h,right:i-h,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-o+1)/a),d=Math.ceil((n-s+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const p="channelsLast"===c?e[1][0]:e[2][0],h="channelsLast"===c?e[1][1]:e[2][1],f="channelsLast"===c?e[2][0]:e[3][0],m="channelsLast"===c?e[2][1]:e[3][1];u={top:p,bottom:h,left:f,right:m,type:0===p&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},l=Xu((t-o+p+h)/a+1,i),d=Xu((n-s+f+m)/r+1,i)}}return{padInfo:u,outHeight:l,outWidth:d}}(r,u,l,m,g,x,v,o,i),C=s?f*d:f;let I;return"channelsFirst"===i?I=[c,C,k,S]:"channelsLast"===i&&(I=[c,k,S,C]),{batchSize:c,dataFormat:i,inHeight:u,inWidth:l,inChannels:d,outHeight:k,outWidth:S,outChannels:C,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:I,filterShape:t}}function Gu(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,l,d,p]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[c,u,l,d,p]=e;else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));[c,p,u,l,d]=e}const[h,f,m,,g]=t,[y,b,x]=Ku(n),[v,w,k]=Ku(a),S=qu(h,v),C=qu(f,w),I=qu(m,k),{padInfo:N,outDepth:_,outHeight:T,outWidth:E}=function(e,t,n,a,r,o,s,i,c,u,l){let d,p,h,f;"valid"===e&&(e=0);if("number"===typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,a,r,o){null==r&&(r=Hu(e,t[0],a[0]));const s=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(s[i]=Xu((e[i]-t[i]+2*r)/a[i]+1,o));return s}([t,n,a,1],[i,c,u],1,[r,o,s],e,l);p=m[0],h=m[1],f=m[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{p=Math.ceil(t/r),h=Math.ceil(n/o),f=Math.ceil(a/s);const e=(p-1)*r+i-t,l=(h-1)*o+c-n,m=(f-1)*s+u-a,g=Math.floor(e/2),y=e-g,b=Math.floor(l/2),x=l-b,v=Math.floor(m/2);d={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}}return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}(r,u,l,d,y,b,x,S,C,I,i),R=o?g*p:g;let A;return"channelsFirst"===s?A=[c,R,_,T,E]:"channelsLast"===s&&(A=[c,_,T,E,R]),{batchSize:c,dataFormat:s,inDepth:u,inHeight:l,inWidth:d,inChannels:p,outDepth:_,outHeight:T,outWidth:E,outChannels:R,padInfo:N,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:C,effectiveFilterWidth:I,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Hu(e,t,n){const a=qu(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function ju(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ku(e){return"number"===typeof e?[e,e,e]:e}function qu(e,t){return t<=1?e:e+(e-1)*(t-1)}function Xu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function Yu(e){const[t,n,a]=ju(e);return 1===t&&1===n&&1===a}function Qu(e,t){return Yu(e)||Yu(t)}function Zu(e){return ju(e).every((e=>e>0))}function $u(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function Ju(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)xt(It(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{xt(It(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}const el=Us({reshape_:function(e,t){const n={x:zs(e,"x","reshape","string_or_numeric")},a={shape:t};return Es.runKernel(gr,n,a)}});const tl=Us({avgPool_:function(e,t,n,a,r){const o=zs(e,"x","avgPool","float32");xt(Qu(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let s=o,i=!1;3===o.rank&&(i=!0,s=el(o,[1,o.shape[0],o.shape[1],o.shape[2]])),xt(4===s.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(s.rank,"."))),Ju("avgPool",a,r);const c={x:s},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r};let l=Es.runKernel(xn,c,u);return l=ac(l,o.dtype),i?el(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const nl=Us({avgPool3d_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const s=zs(e,"x","avgPool3d","float32");let i=s,c=!1;4===s.rank&&(c=!0,i=el(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),xt(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),xt("NDHWC"===o,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(o))),xt("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),Ju("avgPool3d",a,r);const u={x:i},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:o};let d=Es.runKernel(wn,u,l);return d=ac(d,i.dtype),c?el(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const al=Us({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;xt(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Bs(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return rc(n[0]);const a=n,r={axis:t};return Es.runKernel(Fn,a,r)}});const rl=Us({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=zs(e,"a","matMul"),o=zs(t,"b","matMul");[r,o]=ks(r,o);const s={a:r,b:o},i={transposeA:n,transposeB:a};return Es.runKernel(Sn,s,i)}});const ol=Us({sigmoid_:function(e){const t={x:zs(e,"x","sigmoid","float32")};return Es.runKernel(Dr,t)}});const sl=Us({slice_:function(e,t,n){const a=zs(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},o={begin:t,size:n};return Es.runKernel(Rr,r,o)}});const il=Us({tanh_:function(e){const t={x:zs(e,"x","tanh","float32")};return Es.runKernel(to,t)}});const cl=Us({basicLSTMCell_:function(e,t,n,a,r,o){const s=zs(e,"forgetBias","basicLSTMCell"),i=zs(t,"lstmKernel","basicLSTMCell"),c=zs(n,"lstmBias","basicLSTMCell"),u=zs(a,"data","basicLSTMCell"),l=zs(r,"c","basicLSTMCell"),d=zs(o,"h","basicLSTMCell"),p=al([u,d],1),h=rl(p,i),f=sc(h,c),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=sl(f,[0,0],y),x=sl(f,[0,g],y),v=sl(f,[0,2*g],y),w=sl(f,[0,3*g],y),k=sc(uc(ol(b),il(x)),uc(l,ol(sc(s,v))));return[k,uc(il(k),ol(w))]}});const ul=Us({batchToSpaceND_:function(e,t,n){const a=zs(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));xt(a.rank>=1+t.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(t.length))),xt(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),xt(a.shape[0]%r===0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(r)));const o={x:a},s={blockShape:t,crops:n};return Es.runKernel(Cn,o,s)}});const ll=Us({batchNorm_:function(e,t,n,a,r,o){null==o&&(o=.001);const s=zs(e,"x","batchNorm"),i=zs(t,"mean","batchNorm"),c=zs(n,"variance","batchNorm");let u,l;null!=r&&(u=zs(r,"scale","batchNorm")),null!=a&&(l=zs(a,"offset","batchNorm")),xt(i.rank===c.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),xt(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),xt(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d={x:function(e){let t;return t=0===e.rank||1===e.rank?el(e,[1,1,1,e.size]):2===e.rank?el(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?el(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(s),scale:u,offset:l,mean:i,variance:c},p={varianceEpsilon:o},h=Es.runKernel(ma,d,p);return el(h,s.shape)}});const dl=Us({batchNorm2d_:function(e,t,n,a,r,o){const s=zs(e,"x","batchNorm"),i=zs(t,"mean","batchNorm"),c=zs(n,"variance","batchNorm");let u,l;return null!=r&&(u=zs(r,"scale","batchNorm")),null!=a&&(l=zs(a,"offset","batchNorm")),xt(2===s.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(s.rank,"."))),xt(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),xt(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=u&&xt(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),null!=l&&xt(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),ll(s,i,c,l,u,o)}});const pl=Us({batchNorm3d_:function(e,t,n,a,r,o){const s=zs(e,"x","batchNorm"),i=zs(t,"mean","batchNorm"),c=zs(n,"variance","batchNorm");let u,l;return null!=r&&(u=zs(r,"scale","batchNorm")),null!=a&&(l=zs(a,"offset","batchNorm")),xt(3===s.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(s.rank,"."))),xt(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),xt(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=u&&xt(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),null!=l&&xt(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),ll(s,i,c,l,u,o)}});const hl=Us({batchNorm4d_:function(e,t,n,a,r,o){const s=zs(e,"x","batchNorm"),i=zs(t,"mean","batchNorm"),c=zs(n,"variance","batchNorm");let u,l;return null!=r&&(u=zs(r,"scale","batchNorm")),null!=a&&(l=zs(a,"offset","batchNorm")),xt(4===s.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(s.rank,"."))),xt(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),xt(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=u&&xt(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),null!=l&&xt(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),ll(s,i,c,l,u,o)}});const fl=Us({bincount_:function(e,t,n){const a=zs(e,"x","bincount"),r=zs(t,"weights","bincount");xt("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),xt(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),xt(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const o={x:a,weights:r},s={size:n};return Es.runKernel(In,o,s)}});const ml=Us({bitwiseAnd_:function(e,t){const n=zs(e,"x","bitwiseAnd"),a=zs(t,"y","bitwiseAnd");if(!Ct(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return Es.runKernel(Nn,r)}});const gl=Us({broadcastArgs_:function(e,t){const n=zs(e,"s0","broadcastArgs","int32"),a=zs(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return Es.runKernel(_n,r)}});const yl=Us({broadcastTo_:function(e,t){let n=zs(e,"broadcastTo","x");const a=n.shape;if(Kt(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=el(n,e)}const r=n.shape,o=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])o[c]=1;else if(1!==n.shape[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(t,"]."));if(0===o.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return rc(n);const s={x:n},i={reps:o};return Es.runKernel(no,s,i)}});const bl=Us({ceil_:function(e){const t={x:zs(e,"x","ceil","float32")};return Es.runKernel(En,t)}});const xl=Us({clipByValue_:function(e,t,n){const a=zs(e,"x","clipByValue");if(xt(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return wc(a.shape,t,a.dtype);const r={x:a},o={clipValueMin:t,clipValueMax:n};return Es.runKernel(Rn,r,o)}});const vl=Us({concat1d_:function(e){return al(e,0)}});const wl=Us({concat2d_:function(e,t){return al(e,t)}});const kl=Us({concat3d_:function(e,t){return al(e,t)}});const Sl=Us({concat4d_:function(e,t){return al(e,t)}});const Cl=Us({conv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0;const i=zs(e,"x","conv2d","float32"),c=zs(t,"filter","conv2d","float32");let u=i,l=!1;3===i.rank&&(l=!0,u=el(i,[1,i.shape[0],i.shape[1],i.shape[2]])),xt(4===u.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(u.rank,"."))),xt(4===c.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),Ju("conv2d",a,s);const d="NHWC"===r?u.shape[3]:u.shape[1];xt(d===c.shape[2],(()=>"Error in conv2d: depth of input (".concat(d,") must match ")+"input depth for filter ".concat(c.shape[2],"."))),xt(Qu(n,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(o,"'"))),xt(Zu(o),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),xt(Zu(n),(()=>"Error in conv2D: Strides should be larger than 0."));const p={x:u,filter:c},h={strides:n,pad:a,dataFormat:r,dilations:o,dimRoundingMode:s},f=Es.runKernel(Dn,p,h);return l?el(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Il=Us({conv1d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,s=arguments.length>6?arguments[6]:void 0;const i=zs(e,"x","conv1d"),c=zs(t,"filter","conv1d");let u=i,l=!1;2===i.rank&&(l=!0,u=el(i,[1,i.shape[0],i.shape[1]])),xt(3===u.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(u.rank,"."))),xt(3===c.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(c.rank,"."))),Ju("conv1d",a,s),xt(u.shape[2]===c.shape[1],(()=>"Error in conv1d: depth of input (".concat(u.shape[2],") must match ")+"input depth for filter ".concat(c.shape[1],"."))),xt(Qu(n,o),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(o,"'"))),xt(Zu(o),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),xt(Zu(n),(()=>"Error in conv1D: Stride should be larger than 0.")),xt("NWC"===r,(()=>"Error in conv1d: got dataFormat of ".concat(r," but only NWC is currently supported.")));const d=el(c,[1,c.shape[0],c.shape[1],c.shape[2]]),p=el(u,[u.shape[0],1,u.shape[1],u.shape[2]]),h=Cl(p,d,[1,n],a,"NHWC",[1,o],s);return el(h,l?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}});const Nl=Us({conv2DBackpropInput_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",s=arguments.length>6?arguments[6]:void 0;xt(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let i=e,c=t,u=!1;3===t.rank&&(u=!0,c=el(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),xt(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),xt(4===c.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(c.rank))),xt(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const l="NHWC"===o?i[3]:i[1],d="NHWC"===o?c.shape[3]:c.shape[1];xt(l===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(l,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),xt(d===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(d,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),Ju("conv2dDerInput",r,s);const p={dy:c,filter:n},h={strides:a,pad:r,dataFormat:o,dimRoundingMode:s,inputShape:i},f=Es.runKernel(Pn,p,h);return u?el(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const _l=Us({conv2dTranspose_:function(e,t,n,a,r,o){const s=zs(e,"x","conv2dTranspose"),i=zs(t,"filter","conv2dTranspose");return Nl(n,s,i,a,r,"NHWC",o)}});const Tl=Us({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const s=zs(e,"x","conv3d"),i=zs(t,"filter","conv3d");let c=s,u=!1;4===s.rank&&(u=!0,c=el(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),xt(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),xt(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),xt(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),xt(Qu(n,o),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(o,"'"))),xt("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),xt(Zu(o),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),xt(Zu(n),(()=>"Error in conv3D: Strides should be larger than 0."));const l={x:c,filter:i},d={strides:n,pad:a,dataFormat:r,dilations:o},p=Es.runKernel(Ln,l,d);return u?el(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const El=Us({conv3DBackpropInput_:function(e,t,n,a,r){xt(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let o=e,s=t,i=!1;4===t.rank&&(i=!0,s=el(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,e[0],e[1],e[2],e[3]]);const c=o[4],u=s.shape[4];xt(5===o.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(o.length,"."))),xt(5===s.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(s.rank))),xt(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),xt(c===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(c,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),xt(u===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(u,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const l={dy:s,filter:n},d={pad:r,strides:a,inputShape:o},p=Es.runKernel(Bn,l,d);return i?el(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Rl=Us({conv3dTranspose_:function(e,t,n,a,r){const o=zs(e,"x","conv3dTranspose"),s=zs(t,"filter","conv3dTranspose");return El(n,o,s,a,r)}});const Al=Us({cos_:function(e){const t={x:zs(e,"x","cos","float32")};return Es.runKernel(Wn,t)}});const Ol=Us({cosh_:function(e){const t={x:zs(e,"x","cosh","float32")};return Es.runKernel(Un,t)}});const Fl=Us({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:zs(e,"x","cumprod")},o={axis:t,exclusive:n,reverse:a};return Es.runKernel(Vn,r,o)}});const Dl=Us({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:zs(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:a};return Es.runKernel(Gn,r,o)}});const Ml=Us({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=zs(e,"x","denseBincount"),o=zs(t,"weights","denseBincount");xt("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),xt(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),xt(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),xt(o.size===r.size||0===o.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(o.shape,".")));const s={x:r,weights:o},i={size:n,binaryOutput:a};return Es.runKernel(jn,s,i)}});const Pl=Us({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=zs(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],o="NHWC"===n?a.shape[2]:a.shape[3],s="NHWC"===n?a.shape[3]:a.shape[1];xt(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),xt(r*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(a.shape))),xt(o*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(o," and ").concat(t," for depthToSpace with input shape\n        ").concat(a.shape))),xt(s%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(s," for depthToSpace with input shape ").concat(a.shape)));const i={x:a},c={blockSize:t,dataFormat:n};return Es.runKernel(Kn,i,c)}});const Ll=Us({depthwiseConv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0;const i=zs(e,"x","depthwiseConv2d","float32"),c=zs(t,"filter","depthwiseConv2d","float32");let u=i,l=!1;3===i.rank&&(l=!0,u=el(i,[1,i.shape[0],i.shape[1],i.shape[2]])),xt(4===u.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(u.rank,"."))),xt(4===c.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(c.rank,".")));const d="NHWC"===r?u.shape[3]:u.shape[1];xt(d===c.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(d,") must match the inChannels dimension in ")+"filter ".concat(c.shape[2],"."))),Ju("depthwiseConv2d",a,s);const p={x:u,filter:c},h={strides:n,pad:a,dataFormat:r,dilations:o,dimRoundingMode:s},f=Es.runKernel(qn,p,h);return l?el(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const zl=Us({diag_:function(e){const t={x:zs(e,"x","diag")};return Es.runKernel(Qn,t)}});const Bl=Us({dilation2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const s=zs(e,"x","dilation2d"),i=zs(t,"filter","dilation2d");xt(3===s.rank||4===s.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(s.rank,"."))),xt(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),xt("NHWC"===o,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(o)));let c=s,u=!1;3===s.rank&&(c=el(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=!0),xt(c.shape[3]===i.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(c.shape[3]," vs ").concat(i.shape[2])));const l={x:c,filter:i},d={strides:n,pad:a,dilations:r},p=Es.runKernel(Zn,l,d);return u?el(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Wl=Us({equal_:function(e,t){let n=zs(e,"a","equal","string_or_numeric"),a=zs(t,"b","equal","string_or_numeric");[n,a]=ks(n,a),_c(n.shape,a.shape);const r={a:n,b:a};return Es.runKernel(sa,r)}});const Ul=Us({where_:function(e,t,n){const a=zs(t,"a","where"),r=zs(n,"b","where"),o=zs(e,"condition","where","bool"),s=_c(_c(o.shape,a.shape),r.shape),i={condition:yl(o,s),t:yl(a,s),e:yl(r,s)};return Es.runKernel(Tr,i)}});const Vl=Us({divNoNan_:function(e,t){let n=zs(e,"a","div"),a=zs(t,"b","div");[n,a]=ks(n,a);const r=cc(n,a),o=pc(r),s=Wl(a,o);return Ul(s,o,r)}});const Gl=Us({dot_:function(e,t){const n=zs(e,"t1","dot"),a=zs(t,"t2","dot");xt((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=1===n.rank?n.size:n.shape[1],o=1===a.rank?a.size:a.shape[0];if(xt(r===o,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(r," and ").concat(o,"."))),1===n.rank&&1===a.rank){const e=el(n,[1,-1]),t=el(a,[-1,1]),r=rl(e,t);return el(r,[])}if(1===n.rank&&2===a.rank){const e=el(n,[1,-1]),t=el(a,[a.shape[0],a.shape[1]]),r=rl(e,t);return el(r,[r.size])}if(2===n.rank&&1===a.rank){const e=el(a,[-1,1]),t=rl(n,e);return el(t,[t.size])}{const e=el(a,[a.shape[0],a.shape[1]]);return rl(n,e)}}});const Hl=Us({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>zs(e,"tensors".concat(t),"einsum"))),o={equation:e};return Es.runKernel(na,r,o)}});const jl=Us({elu_:function(e){const t={x:zs(e,"x","elu","float32")};return Es.runKernel(aa,t)}});const Kl=Us({ensureShape_:function(e,t){const n=zs(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});const ql=Us({erf_:function(e){let t=zs(e,"x","erf");xt("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=ac(t,"float32"));const n={x:t};return Es.runKernel(oa,n)}});function Xl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Yl(e,t,n){const a=e.length+t.length,r=[];let o=0,s=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[o++]):r.push(t[s++]);return r}function Ql(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Zl(e,t){return Yl(e,t.map((e=>1)),t)}function $l(e,t,n){xt(Xl(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function Jl(e,t){if(Xl(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function ed(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function td(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const nd=Us({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:zs(e,"x","max")},r={reductionIndices:t,keepDims:n};return Es.runKernel(La,a,r)}});const ad=Us({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:zs(e,"x","min")},r={axis:t,keepDims:n};return Es.runKernel(ja,a,r)}});const rd=Us({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=zs(e,"x","sum");"bool"===a.dtype&&(a=ac(a,"int32"));const r={x:a},o={axis:t,keepDims:n};return Es.runKernel(Lr,r,o)}});function od(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return Cc(e);if(1!==e.rank&&null===n)return od(el(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return rd(Cc(e),n);if(t===1/0)return nd(Cc(e),n);if(t===-1/0)return ad(Cc(e),n);if("euclidean"===t||2===t)return lc(rd(kc(Cc(e),fc(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return nd(rd(Cc(e),n[0]),n[1]-1);if(t===1/0)return nd(rd(Cc(e),n[1]),n[0]);if(t===-1/0)return ad(rd(Cc(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return lc(rd(dc(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const sd=Us({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=od(e=zs(e,"x","norm"),t,n);let o=r.shape;if(a){const t=Rt(n,e.shape);o=Zl(r.shape,t)}return el(r,o)}});const id=Us({euclideanNorm_:function(e){return sd(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});const cd=Us({exp_:function(e){const t={x:zs(e,"x","exp")};return Es.runKernel(ia,t)}});const ud=Us({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=zs(e,"x","expandDims","string_or_numeric");xt(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:t};return Es.runKernel(ca,a,r)}});const ld=Us({expm1_:function(e){const t={x:zs(e,"x","expm1")};return Es.runKernel(ua,t)}});const dd=Us({tile_:function(e,t){const n=zs(e,"x","tile","string_or_numeric");xt(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const a={x:n},r={reps:t};return Es.runKernel(no,a,r)}});const pd=Us({eye_:function(e,t,n){null==t&&(t=e);const a=nc([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=e<=t?e:t;for(let s=0;s<r;++s)a.set(1,s,s);const o=el(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return dd(ud(o,0),[n[0],1,1]);if(2===n.length)return dd(ud(ud(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return dd(ud(ud(ud(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});const hd=Us({floor_:function(e){const t={x:zs(e,"x","floor","float32")};return Es.runKernel(ha,t)}});const fd=Us({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:zs(e,"x","gather"),indices:zs(t,"indices","gather","int32")},o={axis:n,batchDims:a};return Es.runKernel(ga,r,o)}});const md=Us({greater_:function(e,t){let n=zs(e,"a","greater","string_or_numeric"),a=zs(t,"b","greater","string_or_numeric");[n,a]=ks(n,a),_c(n.shape,a.shape);const r={a:n,b:a};return Es.runKernel(ba,r)}});const gd=Us({greaterEqual_:function(e,t){let n=zs(e,"a","greaterEqual","string_or_numeric"),a=zs(t,"b","greaterEqual","string_or_numeric");[n,a]=ks(n,a),_c(n.shape,a.shape);const r={a:n,b:a};return Es.runKernel(xa,r)}});const yd=Us({imag_:function(e){const t={input:zs(e,"input","imag")};return Es.runKernel(ka,t)}});const bd=Us({isFinite_:function(e){const t={x:zs(e,"x","isFinite")};return Es.runKernel(Sa,t)}});const xd=Us({isInf_:function(e){const t={x:zs(e,"x","isInf")};return Es.runKernel(Ca,t)}});const vd=Us({isNaN_:function(e){const t={x:zs(e,"x","isNaN")};return Es.runKernel(Ia,t)}});const wd=Us({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:zs(e,"x","leakyRelu")},a={alpha:t};return Es.runKernel(Na,n,a)}});const kd=Us({less_:function(e,t){let n=zs(e,"a","less","string_or_numeric"),a=zs(t,"b","less","string_or_numeric");[n,a]=ks(n,a),_c(n.shape,a.shape);const r={a:n,b:a};return Es.runKernel(_a,r)}});const Sd=Us({lessEqual_:function(e,t){let n=zs(e,"a","lessEqual","string_or_numeric"),a=zs(t,"b","lessEqual","string_or_numeric");[n,a]=ks(n,a),_c(n.shape,a.shape);const r={a:n,b:a};return Es.runKernel(Ta,r)}});function Cd(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return Es.runKernel(Ea,{},a)}const Id=Us({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const o=zs(e,"x","localResponseNormalization");xt(4===o.rank||3===o.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(o.rank,"."))),xt(It(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let s=o,i=!1;3===o.rank&&(i=!0,s=el(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c={x:s},u={depthRadius:t,bias:n,alpha:a,beta:r},l=Es.runKernel(Ma,c,u);return i?el(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Nd=Us({log_:function(e){const t={x:zs(e,"x","log","float32")};return Es.runKernel(Ra,t)}});const _d=Us({log1p_:function(e){const t={x:zs(e,"x","log1p")};return Es.runKernel(Aa,t)}});const Td=Us({neg_:function(e){const t={x:zs(e,"x","neg")};return Es.runKernel(Za,t)}});const Ed=Us({softplus_:function(e){const t={x:zs(e,"x","softplus")};return Es.runKernel(Mr,t)}});const Rd=Us({logSigmoid_:function(e){const t=zs(e,"x","logSigmoid");return hc((e=>({value:Td(Ed(Td(e))),gradFunc:t=>uc(t,ol(Td(e)))})))(t)}});const Ad=Us({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=zs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));const a=hc(((e,n)=>{const a=nd(e,t,!0),r=Sc(e,a),o=Sc(ac(r,"float32"),Nd(rd(cd(r),t,!0)));n([o]);return{value:o,gradFunc:(e,n)=>{const[a]=n,r=cd(a);return Sc(e,uc(rd(e,t,!0),r))}}}));return a(n)}});const Od=Us({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=zs(e,"x","logSumExp"),r=Rt(t,a.shape),o=nd(a,r,!0),s=Sc(a,o),i=cd(s),c=rd(i,r),u=Nd(c),l=sc(el(o,u.shape),u);if(n){const e=Zl(l.shape,r);return el(l,e)}return l}});const Fd=Us({logicalAnd_:function(e,t){const n=zs(e,"a","logicalAnd","bool"),a=zs(t,"b","logicalAnd","bool");_c(n.shape,a.shape);const r={a:n,b:a};return Es.runKernel(Oa,r)}});const Dd=Us({logicalNot_:function(e){const t={x:zs(e,"x","logicalNot","bool")};return Es.runKernel(Fa,t)}});const Md=Us({logicalOr_:function(e,t){const n=zs(e,"a","logicalOr","bool"),a=zs(t,"b","logicalOr","bool");_c(n.shape,a.shape);const r={a:n,b:a};return Es.runKernel(Da,r)}});const Pd=Us({logicalXor_:function(e,t){const n=zs(e,"a","logicalXor","bool"),a=zs(t,"b","logicalXor","bool");return _c(n.shape,a.shape),Fd(Md(e,t),Dd(Fd(e,t)))}}),Ld=2147483648;const zd=Us({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=zs(e,"sortedSequence","searchSorted"),r=zs(t,"values","searchSorted"),o=a.shape[a.shape.length-1],s=r.shape[r.shape.length-1],i=el(a,[-1,o]),c=el(r,[-1,s]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==c.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(kt(c.shape)>=Ld)throw new Error("values tensor size must less than ".concat(Ld));if(i.shape[1]>=Ld)throw new Error("trailing dim_size must less than ".concat(Ld," for int32 output type, was ").concat(i.shape[1]));const u={sortedSequence:i,values:c},l={side:n};return Es.runKernel(_r,u,l)}});function Bd(e,t){return zd(e,t,"left")}const Wd=Us({maxPool_:function(e,t,n,a,r){const o=zs(e,"x","maxPool");let s=o,i=!1;3===o.rank&&(i=!0,s=el(o,[1,o.shape[0],o.shape[1],o.shape[2]])),xt(4===s.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(s.rank,"."))),xt(Qu(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),Ju("maxPool",a,r);const c={x:s},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},l=Es.runKernel(Ba,c,u);return i?el(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Ud=Us({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const s=zs(e,"x","maxPool3d");let i=s,c=!1;4===s.rank&&(c=!0,i=el(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),xt(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),xt("NDHWC"===o,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(o))),Ju("maxPool3d",a,r);const u={x:i},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:o},d=Es.runKernel(Ua,u,l);return c?el(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Vd=Us({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const o={x:zs(e,"x","maxPoolWithArgmax")},s={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=Es.runKernel(Ga,o,s);return{result:i[0],indexes:i[1]}}});const Gd=Us({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:zs(e,"x","mean")},r={axis:t,keepDims:n};return Es.runKernel(Ha,a,r)}});function Hd(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(Kt(e),"complex64"===t){const t=Hd(e,"float32"),n=Hd(e,"float32");return Vs(t,n)}const n=jt(kt(e),t);return Es.makeTensor(n,e,t)}function jd(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(Kt(e),"complex64"===t){const t=jd(e,"float32"),n=Hd(e,"float32");return Vs(t,n)}const n=Ht(kt(e),t);return Es.makeTensor(n,e,t)}function Kd(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=zs(e,"x","meshgrid",e instanceof us?e.dtype:"float32");if(void 0===t)return[a];let r=zs(t,"y","meshgrid",t instanceof us?t.dtype:"float32");const o=kt(a.shape),s=kt(r.shape);return"xy"===n?(a=el(a,[1,-1]),r=el(r,[-1,1]),[rl(jd([s,1],a.dtype),a),rl(r,jd([1,o],r.dtype))]):(a=el(a,[-1,1]),r=el(r,[1,-1]),[rl(a,jd([1,s],a.dtype)),rl(jd([o,1],r.dtype),r)])}const qd=Us({minimum_:function(e,t){let n=zs(e,"a","minimum"),a=zs(t,"b","minimum");[n,a]=ks(n,a),"bool"===n.dtype&&(n=ac(n,"int32"),a=ac(a,"int32")),_c(n.shape,a.shape);const r={a:n,b:a};return Es.runKernel(Ka,r)}});const Xd=Us({mirrorPad_:function(e,t,n){xt("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=zs(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");xt(t.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(t.length,".")));const r="reflect"===n?1:0;for(let i=0;i<a.rank;i++)xt(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),xt(t[i][0]>=0&&t[i][0]<=a.shape[i]-r&&t[i][1]>=0&&t[i][1]<=a.shape[i]-r,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(a.shape[i]-r," or less than 0 for input of ")+"shape ".concat(a.shape)));const o={paddings:t,mode:n},s={x:a};return Es.runKernel(qa,s,o)}});const Yd=Us({mod_:function(e,t){let n=zs(e,"a","mod"),a=zs(t,"b","mod");[n,a]=ks(n,a);const r={a:n,b:a};return Es.runKernel(Xa,r)}});const Qd=Us({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=Rt(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=zs(e,"x","moments")).shape),a=Gd(e,n,t);let r=a.shape;t||(r=Zl(a.shape,n));const o=dc(Sc(ac(e,"float32"),el(a,r)));return{mean:a,variance:Gd(o,n,t)}}});const Zd=Us({multiRNNCell_:function(e,t,n,a){const r=zs(t,"data","multiRNNCell"),o=Bs(n,"c","multiRNNCell"),s=Bs(a,"h","multiRNNCell");let i=r;const c=[];for(let d=0;d<e.length;d++){const t=e[d](i,o[d],s[d]);c.push(t[0]),c.push(t[1]),i=t[1]}const u=[],l=[];for(let d=0;d<c.length;d+=2)u.push(c[d]),l.push(c[d+1]);return[u,l]}});const $d=Us({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=zs(e,"logits","multinomial"),o=r.size,s=r.rank;if(o<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(o,"."));if(s>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(s));n=n||Math.random();const i={logits:1===s?el(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:a},u=Es.runKernel(Ya,i,c);return 1===s?el(u,[u.size]):u}});const Jd=Us({notEqual_:function(e,t){let n=zs(e,"a","notEqual","string_or_numeric"),a=zs(t,"b","notEqual","string_or_numeric");[n,a]=ks(n,a),_c(n.shape,a.shape);const r={a:n,b:a};return Es.runKernel($a,r)}});const ep=Us({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const o={indices:zs(e,"indices","oneHot","int32")},s={dtype:r,depth:t,onValue:n,offValue:a};return Es.runKernel(ar,o,s)}});const tp=Us({onesLike_:function(e){const t={x:zs(e,"x","onesLike")};return Es.runKernel(nr,t)}});const np=Us({outerProduct_:function(e,t){const n=zs(e,"v1","outerProduct"),a=zs(t,"v2","outerProduct");xt(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=el(n,[-1,1]),o=el(a,[1,-1]);return rl(r,o)}});const ap=Us({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a=zs(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},o={x:a};return Es.runKernel(or,o,r)}});const rp=Us({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return xt(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),ap(e,[t],n)}});const op=Us({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return xt(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ap(e,t,n)}});const sp=Us({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return xt(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ap(e,t,n)}});const ip=Us({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return xt(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ap(e,t,n)}});const cp=Us({spaceToBatchND_:function(e,t,n){const a=zs(e,"x","spaceToBatchND");xt(a.rank>=1+t.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(t.length))),xt(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),xt(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const r={x:a},o={blockShape:t,paddings:n};return Es.runKernel(zr,r,o)}});const up=Us({pool_:function(e,t,n,a,r,o,s){null==r&&(r=[1,1]),null==o&&(o=1),0===a&&(a="valid");const i=zs(e,"x","maxPool");let c=i,u=!1;3===i.rank&&(u=!0,c=el(i,[1,i.shape[0],i.shape[1],i.shape[2]])),xt(Qu(o,r),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(r,"'")));const l=Wu(c.shape,t,o,r,a),d=[l.dilationHeight,l.dilationWidth];let p;p="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),o=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],o[t]]))}([l.filterHeight,l.filterWidth],d):[[0,0],[0,0]];const h=1===d[0]&&1===d[1],[f,m]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),o=e.concat(a,r),s=t.map(((e,t)=>(e-o[t]%e)%e)),i=r.map(((e,t)=>e+s[t])),c=t.map(((e,t)=>[a[t],i[t]])),u=t.map(((e,t)=>[0,s[t]]));return[c,u]}([l.inHeight,l.inWidth],d,p),g=h?a:"valid",y=h?c:cp(c,d,f),b=("avg"===n?()=>tl(y,t,o,g,s):()=>Wd(y,t,o,g,s))(),x=h?b:ul(b,d,m);return u?el(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const lp=Us({prelu_:function(e,t){const n={x:zs(e,"x","prelu"),alpha:zs(t,"alpha","prelu")};return Es.runKernel(ir,n)}});const dp=Us({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=zs(e,"x","prod");"bool"===a.dtype&&(a=ac(a,"int32"));const r={x:a},o={axis:t,keepDims:n};return Es.runKernel(cr,r,o)}});const pp=Us({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>zs(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:zs(t,"paramsDenseValues","raggedGather"),indices:zs(n,"indices","raggedGather","int32")},o={outputRaggedRank:a},s=Es.runKernel(ur,r,o);return{outputNestedSplits:s.slice(0,s.length-1),outputDenseValues:s[s.length-1]}}});const hp=Us({raggedRange_:function(e,t,n){const a=zs(e,"starts","raggedRange"),r={starts:a,limits:zs(t,"limits","raggedRange",a.dtype),deltas:zs(n,"deltas","raggedRange",a.dtype)},o=Es.runKernel(lr,r);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}});const fp=Us({raggedTensorToTensor_:function(e,t,n,a,r){const o=zs(e,"shape","raggedTensorToTensor","int32"),s=zs(t,"values","raggedTensorToTensor"),i={shape:o,values:s,defaultValue:zs(n,"defaultValue","raggedTensorToTensor",s.dtype),rowPartitionTensors:a.map(((e,t)=>zs(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},c={rowPartitionTypes:r};return Es.runKernel(dr,i,c)}});const mp=Us({rand_:function(e,t,n){Kt(e);const a=kt(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let o=0;o<a;o++)r[o]=t();return Es.makeTensor(r,e,n)}});var gp=n(334);class yp{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=r||Math.random();this.random=gp.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,o;do{a=2*this.random()-1,r=2*this.random()-1,o=a*a+r*r}while(o>=1||0===o);const s=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*a*s,t=this.mean+this.stdDev*r*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class bp{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=gp.alea(r.toString()),this.randn=new yp(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,o;for(;;){do{a=this.randn.nextValue(),o=1+this.c*a}while(o<=0);if(o*=o*o,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-o+Math.log(o)),r=this.randu(),r<t||Math.log(r)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class xp{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=gp.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const vp=Us({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if(Kt(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const o=new bp(t,n,a,r),s=nc(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const wp=Us({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(Kt(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const o=new yp(t,n,a,!1,r),s=nc(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const kp=Us({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return wp(e,0,1,t,n)}});const Sp=Us({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;Kt(e);const o=nc(e,a),s=new xp(t,n,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Cp=Us({randomUniformInt_:function(e,t,n,a){return Sp(e,t,n,"int32",a)}});function Ip(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return Es.runKernel(pr,{},r)}const Np=Us({real_:function(e){const t={input:zs(e,"input","real")};return Es.runKernel(hr,t)}});const _p=Us({reciprocal_:function(e){const t={x:zs(e,"x","reciprocal")};return Es.runKernel(fr,t)}});const Tp=Us({relu_:function(e){const t={x:zs(e,"x","relu")};return Es.runKernel(mr,t)}});const Ep=Us({relu6_:function(e){const t={x:zs(e,"x","relu6")};return Es.runKernel(wr,t)}});const Rp=Us({reverse_:function(e,t){const n={x:zs(e,"x","reverse")},a={dims:t};return Es.runKernel(kr,n,a)}});const Ap=Us({reverse1d_:function(e){const t=zs(e,"x","reverse");return xt(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),Rp(t,0)}});const Op=Us({reverse2d_:function(e,t){const n=zs(e,"x","reverse");return xt(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),Rp(n,t)}});const Fp=Us({reverse3d_:function(e,t){const n=zs(e,"x","reverse");return xt(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),Rp(n,t)}});const Dp=Us({reverse4d_:function(e,t){const n=zs(e,"x","reverse");return xt(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),Rp(n,t)}});const Mp=Us({round_:function(e){const t={x:zs(e,"x","round")};return Es.runKernel(Sr,t)}});const Pp=Us({rsqrt_:function(e){const t={x:zs(e,"x","rsqrt","float32")};return Es.runKernel(Cr,t)}});const Lp=Us({selu_:function(e){const t={x:zs(e,"x","selu")};return Es.runKernel(Er,t)}});const zp=Us({separableConv2d_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const i=zs(e,"x","separableConv2d"),c=zs(t,"depthwiseFilter","separableConv2d"),u=zs(n,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(3===i.rank&&(d=!0,l=el(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");xt(4===l.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),xt(4===c.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),xt(4===u.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),xt(1===u.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(u.shape[0],"."))),xt(1===u.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(u.shape[1],".")));const p=c.shape[2],h=c.shape[3];xt(u.shape[2]===p*h,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(p*h,", ")+"but got ".concat(u.shape[2],".")));const f=Ll(l,c,a,r,s,o),m=Cl(f,u,1,"valid",s);return d?el(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Bp=async function(e,t){const n=zs(e,"x","setdiff1d"),a=zs(t,"y","setdiff1d");xt(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),xt(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),xt(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),o=await a.data(),s=new Set(o);let i=0;for(let l=0;l<r.length;l++)s.has(r[l])||i++;const c=new os([i],n.dtype),u=new os([i],"int32");for(let l=0,d=0;l<r.length;l++)s.has(r[l])||(c.values[d]=r[l],u.values[d]=l,d++);return[c.toTensor(),u.toTensor()]};const Wp=Us({sign_:function(e){const t={x:zs(e,"x","sign")};return Es.runKernel(Fr,t)}});const Up=Us({sin_:function(e){const t={x:zs(e,"x","sin","float32")};return Es.runKernel(Ar,t)}});const Vp=Us({sinh_:function(e){const t={x:zs(e,"x","sinh")};return Es.runKernel(Or,t)}});const Gp=Us({slice1d_:function(e,t,n){const a=zs(e,"x","slice1d");return xt(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),sl(a,[t],[n])}});const Hp=Us({slice2d_:function(e,t,n){const a=zs(e,"x","slice2d");return xt(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),sl(a,t,n)}});const jp=Us({slice3d_:function(e,t,n){const a=zs(e,"x","slice3d");return xt(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),sl(a,t,n)}});const Kp=Us({slice4d_:function(e,t,n){const a=zs(e,"x","slice4d");return xt(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),sl(a,t,n)}});const qp=Us({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=zs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const a={logits:n},r={dim:t};return Es.runKernel(Wr,a,r)}});const Xp=Us({fft_:function(e){xt("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Es.runKernel(la,t)}});const Yp=Us({ifft_:function(e){xt("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Es.runKernel(wa,t)}});const Qp=Us({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const r=el(e,[n,t]);a=Yp(r)}else{const r=[n,2*(t-1)],o=el(Np(e),[n,t]),s=el(yd(e),[n,t]),i=Rp(sl(o,[0,1],[n,t-2]),1),c=uc(Rp(sl(s,[0,1],[n,t-2]),1),fc(-1)),u=al([o,i],1),l=al([s,c],1),d=el(Vs(u,l),[r[0],r[1]]);a=Yp(d)}if(a=Np(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=el(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}});const Zp=Us({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a={x:zs(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Es.runKernel(Br,a,r)}});const $p=Us({rfft_:function(e,t){xt("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const a=e.size/n;let r;if(null!=t&&t<n){const a=e.shape.map((e=>0)),o=e.shape.map((e=>e));o[e.shape.length-1]=t,r=sl(e,a,o),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,r=al([e,Hd(a)],e.shape.length-1),n=t}else r=e;const o=pc(r),s=el(Vs(r,o),[a,n]),i=Xp(s),c=Math.floor(n/2)+1,u=Np(i),l=yd(i),d=Zp(u,[c,n-c],u.shape.length-1),p=Zp(l,[c,n-c],l.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=c,el(Vs(d[0],p[0]),h)}});const Jp=Us({squaredDifference_:function(e,t){let n=zs(e,"a","squaredDifference"),a=zs(t,"b","squaredDifference");[n,a]=ks(n,a),_c(n.shape,a.shape);const r={a:n,b:a};return Es.runKernel(Kr,r,{})}});const eh=Us({squeeze_:function(e,t){const n=zs(e,"x","squeeze","string_or_numeric");return el(n,At(n.shape,t).newShape)}});const th=Us({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Bs(e,"tensors","stack","string_or_numeric");xt(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&xt(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:t};return Es.runKernel(rr,a,r)}});const nh=Us({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:zs(e,"x","step")},a={alpha:t};return Es.runKernel(lo,n,a)}});const ah=Us({stridedSlice_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const u={x:zs(e,"x","stridedSlice","string_or_numeric")},l={begin:t,end:n,strides:a,beginMask:r,endMask:o,ellipsisMask:s,newAxisMask:i,shrinkAxisMask:c};return Es.runKernel(Yr,u,l)}});const rh=Us({tan_:function(e){const t={x:zs(e,"x","tan","float32")};return Es.runKernel(eo,t)}});function oh(e,t){wt(e);const n=Ms(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Gs(e,null,n,t)}function sh(e,t,n){if(wt(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=Ms(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Gs(e,t,a,n)}function ih(e,t,n){if(wt(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=Ms(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Gs(e,t,a,n)}function ch(e,t,n){if(wt(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=Ms(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Gs(e,t,a,n)}function uh(e,t,n){if(wt(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=Ms(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Gs(e,t=t||a,a,n)}const lh=Us({tensorScatterUpdate_:function(e,t,n){const a=zs(e,"tensor","tensorScatterupdate"),r=zs(t,"indices","tensorScatterupdate","int32"),o=zs(n,"updates","tensorScatterupdate");if(su(o,r,a.shape),a.dtype!==o.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(o.dtype,"."));const s={tensor:a,indices:r,updates:o};return Es.runKernel(Nr,s,{})}});const dh=Us({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=zs(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>r)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(r,") ")+"but got ".concat(t));const o={x:a},s={k:t,sorted:n},[i,c]=Es.runKernel(ao,o,s);return{values:i,indices:c}}});const ph=Us({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(Kt(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new yp(t,n,a,!0,r),s=nc(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const hh=Us({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=zs(e,"x","unique","string_or_numeric");xt(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:t},[o,s]=Es.runKernel(so,a,r);return{values:o,indices:s}}});const fh=Us({unsortedSegmentSum_:function(e,t,n){const a=zs(e,"x","unsortedSegmentSum"),r=zs(t,"segmentIds","unsortedSegmentSum","int32");xt(It(n),(()=>"numSegments must be of dtype int"));const o={x:a,segmentIds:r},s={numSegments:n};return Es.runKernel(co,o,s)}});const mh=Us({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=zs(e,"x","unstack","string_or_numeric");xt(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const a={value:n},r={axis:t};return Es.runKernel(io,a,r)}});function gh(e,t){return zd(e,t,"right")}function yh(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Es.makeVariable(e,t,n,a)}function bh(e,t){const n=[];for(let o=0;o<t.length;o++)t[o]&&n.push(o);const a=nc(e,"int32"),r=nc([n.length,e.length],"int32");for(let o=0;o<n.length;o++){const t=a.indexToLoc(n[o]),s=o*e.length;r.values.set(t,s)}return r.toTensor()}const xh=async function(e){const t=zs(e,"condition","whereAsync","bool"),n=await t.data(),a=bh(t.shape,n);return e!==t&&t.dispose(),a};const vh=async function(e,t,n){const a=zs(e,"tensor","boolMask"),r=zs(t,"mask","boolMask","bool"),o=null==n?0:n,s=r.rank,i=a.shape;xt(s>0,(()=>"mask cannot be scalar")),vt(i.slice(o,o+s),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let m=o;m<o+s;m++)c*=i[m];const u=i.slice(0,o).concat([c],i.slice(o+s)),l=el(a,u),d=el(r,[-1]),p=await xh(d),h=eh(p,[1]),f=fd(l,h,o);return e!==a&&a.dispose(),t!==r&&r.dispose(),h.dispose(),l.dispose(),d.dispose(),p.dispose(),f};const wh=Us({transpose_:function(e,t,n){const a=zs(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),xt(a.rank===t.length,(()=>"Error in transpose: rank of input ".concat(a.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{xt(e>=0&&e<a.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(a.rank-1)+" but got ".concat(t)))})),a.rank<=1)return a.clone();const r={x:a},o={perm:t};return"complex64"===a.dtype?Xs((()=>{let e=Np(a),t=yd(a);return e=Es.runKernel(oo,{x:e},o),t=Es.runKernel(oo,{x:t},o),n&&(t=Td(t)),Vs(e,t)})):Es.runKernel(oo,r,o)}});const kh=Us({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const o=zs(e,"v","movingAverage"),s=zs(t,"x","movingAverage"),i=zs(n,"decay","movingAverage");var c,u;u=s,xt((c=o).dtype===u.dtype,(()=>"The dtypes of the first(".concat(c.dtype,") and")+" second(".concat(u.dtype,") input must match"))),xt(Ct(o.shape,s.shape),(()=>"Shape mismatch in v and x"));const l=fc(1),d=Sc(l,i);let p=uc(Sc(s,o),d);if(r){xt(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=zs(a,"step","movingAverage");p=cc(p,Sc(l,kc(i,e)))}return sc(o,p)}});const Sh=Us({scatterND_:function(e,t,n){Kt(n);const a=zs(e,"indices","scatterND","int32"),r=zs(t,"updates","scatterND");su(r,a,n);const o={indices:a,updates:r},s={shape:n};return Es.runKernel(Ir,o,s)}});const Ch=Us({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;Kt(n);const r=zs(e,"sparseIndices","sparseToDense","int32"),o=zs(t,"sparseValues","sparseToDense","string_or_numeric"),s=zs(a,"defaultValue","sparseToDense",o.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,o=e.rank>1?e.shape[1]:1;if(n.length!==o)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(o,"."));const s=t.size;if(0!==t.rank&&(1!==t.rank||s!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,o,n,s);const i={sparseIndices:r,sparseValues:o,defaultValue:s},c={outputShape:n};return Es.runKernel(jr,i,c)}});const Ih=Us({gatherND_:function(e,t){const n=zs(t,"indices","gatherND","int32"),a={params:zs(e,"x","gatherND","string_or_numeric"),indices:n};return Es.runKernel(ya,a)}});const Nh=Us({dropout_:function(e,t,n,a){const r=zs(e,"x","dropout");if(xt("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),xt(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof us?r.clone():r;const o=function(e,t){if(null==t)return e.shape.slice();if(Ct(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),s=1-t,i=cc(hd(sc(Sp(o,0,1,"float32",a),s)),s);return uc(r,i)}});function _h(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Th(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let o=0;o<e;++o){const s=2*Math.PI*o/(e+a-1);r[o]=t-n*Math.cos(s)}return oh(r,"float32")}const Eh=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=zs(e,"predictions","inTopK"),r=zs(t,"targets","inTopK");xt(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),xt(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),vt(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=a.shape[a.shape.length-1];xt(n>0&&n<=o,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(o,"), but got ").concat(n)));const s=await a.data(),i=await r.data(),[c,u]=[s.length/o,o],l=Ot("bool",c);for(let d=0;d<c;d++){const e=d*u,t=s.subarray(e,e+u),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),l[d]=0;for(let r=0;r<n;r++)if(a[r].index===i[d]){l[d]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),Hs(l,r.shape,"bool")};const Rh=Us({conv2DBackpropFilter_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",s=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=el(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=el(t,[1,t.shape[0],t.shape[1],t.shape[2]])),xt(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),xt(4===c.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(c.shape,"."))),xt(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const u="NHWC"===o?i.shape[3]:i.shape[1],l="NHWC"===o?c.shape[3]:c.shape[1];xt(u===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(u,") must ")+"match input depth in filter (".concat(n[2],"."))),xt(l===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(l,") must ")+"match output depth for filter (".concat(n[3],")."))),Ju("conv2dDerFilter",r,s);const d={x:i,dy:c},p={strides:a,pad:r,dataFormat:o,dimRoundingMode:s,filterShape:n};return Es.runKernel(Mn,d,p)}});function Ah(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return uc(e,nh(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function Oh(e,t){let n=t;const a=Nc(e.shape,t.shape);return a.length>0&&(n=rd(n,a)),el(n,e.shape)}function Fh(e,t,n,a){if("linear"===t)return e;if("relu"===t)return Tp(e);if("elu"===t)return jl(e);if("relu6"===t)return Ep(e);if("prelu"===t)return lp(e,n);if("leakyrelu"===t)return wd(e,a);if("sigmoid"===t)return ol(e);throw new Error("Unknown fused activation ".concat(t,"."))}const Dh=(e,t)=>!(e>0)||"linear"===t;const Mh=Us({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:c,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:d}=e;if(u=u||"linear",!1===Dh(Es.state.gradientDepth,u)){xt("NHWC"===o,(()=>"Error in fused conv2d: got dataFormat of ".concat(o," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=Cl(t,n,a,r,o,s,i);return null!=c&&(e=sc(e,c)),Fh(e,u,l,d)}const p=zs(t,"x","conv2d","float32"),h=zs(n,"filter","conv2d","float32");let f=p,m=!1;3===p.rank&&(m=!0,f=el(p,[1,p.shape[0],p.shape[1],p.shape[2]])),xt(4===f.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(f.rank,"."))),xt(4===h.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(h.rank,"."))),Ju("fused conv2d",r,i);const g="NHWC"===o?f.shape[3]:f.shape[1];xt(h.shape[2]===g,(()=>"Error in conv2d: depth of input (".concat(g,") must match ")+"input depth for filter ".concat(h.shape[2],"."))),xt(Qu(a,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(s,"'")));const y=Vu(f.shape,h.shape,a,s,r,i);let b,x;if(null!=c&&(b=zs(c,"bias","fused conv2d"),[b]=ks(b,p),"NHWC"===o?_c(y.outShape,b.shape):(xt(b.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(b.shape.length,"."))),xt(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(b.shape,") is not ")+"compatible with the number of output channels "+"(".concat(y.outChannels,")"))))),null!=l){const e=l.shape;if(xt(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)xt(1===e[0]||e[0]===y.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(y.outChannels,").")));else if(3===e.length)try{_c(e,y.outShape)}catch(_j){const n="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(y.outShape,").");throw Error(n)}x=zs(l,"prelu weights","fused conv2d")}const v=(e,t)=>{xt("NHWC"===o,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(o," but only NHWC is currently supported.")));const[n,i,c,l]=t,d=Ah(e,c,u);xt(Yu(s),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'")));const p=[Nl(i.shape,d,n,a,r),Rh(i,d,n.shape,a,r)];if(null!=l){const e=Oh(l,d);p.push(e)}return p},w={x:f,filter:h,bias:b,preluActivationWeights:x},k={strides:a,pad:r,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:d};if(null==c){const e=hc(((e,t,n)=>{let a=Es.runKernel(mo,w,k);return n([t,e,a]),m&&(a=el(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return e(f,h)}{const e=hc(((e,t,n,a)=>{let r=Es.runKernel(mo,w,k);return a([t,e,r,n]),m&&(r=el(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,h,b)}}});const Ph=Us({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=el(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=el(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:i,dy:c},l={strides:a,pad:r,dimRoundingMode:s,dilations:o,filterShape:n};return Es.runKernel(Xn,u,l)}});const Lh=Us({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0,i=t,c=!1;3===t.rank&&(c=!0,i=el(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:i,filter:n},l={strides:a,pad:r,dimRoundingMode:s,dilations:o,inputShape:e},d=Es.runKernel(Yn,u,l);return c?el(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const zh=Us({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:c,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:d}=e;if(!1===Dh(Es.state.gradientDepth,u)){let e=Ll(t,n,a,r,o,s,i);return null!=c&&(e=sc(e,c)),Fh(e,u,l,d)}const p=zs(t,"x","depthwiseConv2d","float32"),h=zs(n,"filter","depthwiseConv2d","float32");let f=p,m=!1;3===p.rank&&(m=!0,f=el(p,[1,p.shape[0],p.shape[1],p.shape[2]])),xt(4===f.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,"."))),xt(4===h.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(h.rank,"."))),xt(f.shape[3]===h.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(h.shape[2],"."))),null==s&&(s=[1,1]),xt(Qu(a,s),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(s,"'"))),Ju("fused depthwiseConv2d",r,i);const g=Vu(f.shape,h.shape,a,s,r,i,!0);let y,b;null!=c&&(y=zs(c,"bias","fused conv2d"),[y]=ks(y,p),_c(g.outShape,y.shape)),null!=l&&(b=zs(l,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{xt(Yu(s),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(s,"'")));const[n,o,c,l]=t,d=Ah(e,c,u),p=Lh(o.shape,d,n,a,r,s,i),h=Ph(o,d,n.shape,a,r,s,i);if(null!=l){return[p,h,Oh(y,d)]}return[p,h]},v={x:f,filter:h,bias:y,preluActivationWeights:b},w={strides:a,pad:r,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:d};if(null==c){const e=hc(((e,t,n)=>{let a=Es.runKernel(go,v,w);return n([t,e,a]),m&&(a=el(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(f,h)}{const e=hc(((e,t,n,a)=>{let r=Es.runKernel(go,v,w);return a([t,e,r,n]),m&&(r=el(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,h,y)}}});const Bh=Us({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:o,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:c=.2}=e;if(!1===Dh(Es.state.gradientDepth,s)){let e=rl(t,n,a,r);return null!=o&&(e=sc(e,o)),Fh(e,s,i,c)}let u=zs(t,"a","fused matMul"),l=zs(n,"b","fused matMul");[u,l]=ks(u,l);const d=a?u.shape[u.rank-2]:u.shape[u.rank-1],p=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=a?u.shape[u.rank-1]:u.shape[u.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=u.shape.slice(0,-2),g=l.shape.slice(0,-2),y=kt(m),b=kt(g);xt(d===p,(()=>"Error in fused matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(u.shape," and ")+"".concat(l.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const x=_c(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([h,f]),v=el(u,a?[y,d,h]:[y,h,d]),w=el(l,r?[b,f,p]:[b,p,f]);let k,S;null!=o&&(k=zs(o,"bias","fused matMul"),[k]=ks(k,u),_c(x,k.shape)),null!=i&&(S=zs(i,"prelu weights","fused matMul"));const C=(e,t)=>{const[n,i,c,u]=t,l=Ah(el(e,c.shape),c,s);let d,p;if(a||r?!a&&r?(d=rl(l,i,!1,!1),p=rl(l,n,!0,!1)):a&&!r?(d=rl(i,l,!1,!0),p=rl(n,l,!1,!1)):(d=rl(i,l,!0,!0),p=rl(l,n,!0,!0)):(d=rl(l,i,!1,!0),p=rl(n,l,!0,!1)),null!=o){return[d,p,Oh(u,l)]}return[d,p]},I={a:v,b:w,bias:k,preluActivationWeights:S},N={transposeA:a,transposeB:r,activation:s,leakyreluAlpha:c};if(null==o){const e=hc(((e,t,n)=>{const a=Es.runKernel(fo,I,N);return n([e,t,a]),{value:el(a,x),gradFunc:C}}));return e(v,w)}{const e=hc(((e,t,n,a)=>{const r=Es.runKernel(fo,I,N);return a([e,t,r,n]),{value:el(r,x),gradFunc:C}}));return e(v,w,k)}}});const Wh=Us({hammingWindow_:function(e){return Th(e,.54,.46)}});const Uh=Us({hannWindow_:function(e){return Th(e,.5,.5)}});const Vh=Us({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=0;const s=[];for(;o+t<=e.size;)s.push(sl(e,o,t)),o+=n;if(a)for(;o<e.size;){const a=o+t-e.size,i=al([sl(e,o,t-a),wc([a],r)]);s.push(i),o+=n}return 0===s.length?sh([],[0,t]):el(al(s),[s.length,t])}});const Gh=Us({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Uh;null==a&&(a=_h(t));const o=Vh(e,t,n),s=uc(o,r(t));return $p(s,a)}});const Hh=Us({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=zs(e,"image","cropAndResize"),i=zs(t,"boxes","cropAndResize","float32"),c=zs(n,"boxInd","cropAndResize","int32"),u=i.shape[0];xt(4===s.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(s.rank,"."))),xt(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(u,",4] ")+"but had shape ".concat(i.shape,"."))),xt(1===c.rank&&c.shape[0]===u,(()=>"Error in cropAndResize: boxInd must be have size [".concat(u,"] ")+"but had shape ".concat(i.shape,"."))),xt(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),xt(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),xt("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const l={image:s,boxes:i,boxInd:c},d={method:r,extrapolationValue:o,cropSize:a};return Es.runKernel(Hn,l,d)}});const jh=Us({flipLeftRight_:function(e){const t=zs(e,"image","flipLeftRight","float32");xt(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return Es.runKernel(pa,n,{})}});const Kh=Us({grayscaleToRGB_:function(e){const t=zs(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];xt(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),xt(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,dd(t,r)}});const qh=Us({rgbToGrayscale_:function(e){const t=zs(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];xt(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),xt(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,o=ac(t,"float32"),s=oh([.2989,.587,.114]);let i;switch(t.rank){case 2:i=Hl("ij,j->i",o,s);break;case 3:i=Hl("ijk,k->ij",o,s);break;case 4:i=Hl("ijkl,l->ijk",o,s);break;case 5:i=Hl("ijklm,m->ijkl",o,s);break;case 6:i=Hl("ijklmn,n->ijklm",o,s);break;default:throw new Error("Not a valid tensor rank.")}return i=ud(i,-1),ac(i,r)}});const Xh=Us({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=zs(e,"image","rotateWithOffset","float32");xt(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const o={image:r},s={radians:t,fillValue:n,center:a};return Es.runKernel(ho,o,s)}});function Yh(e,t,n,a,r,o){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==o&&(o=0);const s=e.shape[0];return n=Math.min(n,s),xt(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),xt(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),xt(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),xt(1===t.rank,(()=>"scores must be a 1D tensor")),xt(t.shape[0]===s,(()=>"scores has incompatible shape with boxes. Expected ".concat(s,", ")+"but was ".concat(t.shape[0]))),xt(0<=o&&o<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(o,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:o}}const Qh=Us({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const o=zs(e,"boxes","nonMaxSuppression","float32"),s=zs(t,"scores","nonMaxSuppression","float32"),i=Yh(o,s,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return Es.runKernel(Ja,{boxes:o,scores:s},c)}});function Zh(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,o=0,s=!1;for(;a<r;){o=a+(r-a>>>1);const i=n(t,e[o]);i>0?a=o+1:(r=o,s=!i)}return s?a:-a-1}(e,t,n||$h)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function $h(e,t){return e>t?1:e<t?-1:0}function Jh(e,t,n,a,r){return nf(e,t,n,a,r,0)}function ef(e,t,n,a,r,o){return nf(e,t,n,a,r,0,!1,o,!0)}function tf(e,t,n,a,r,o){return nf(e,t,n,a,r,o,!0)}function nf(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const u=[];for(let g=0;g<t.length;g++)t[g]>r&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(of);const l=o>0?-.5/o:0,d=[],p=[];for(;d.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:o,suppressBeginIndex:s}=t;if(n<r)break;let i=!1;for(let c=d.length-1;c>=s;--c){const n=af(e,o,d[c]);if(n>=a){i=!0;break}if(t.score=t.score*rf(a,l,n),t.score<=r)break}t.suppressBeginIndex=d.length,i||(t.score===n?(d.push(o),p.push(t.score)):t.score>r&&Zh(u,t,of))}const h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:d};return s&&(m.selectedScores=p),c&&(m.validOutputs=h),m}function af(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),o=Math.min(a[0],a[2]),s=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),u=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),h=(i-o)*(c-s),f=(d-u)*(p-l);if(h<=0||f<=0)return 0;const m=Math.max(o,u),g=Math.max(s,l),y=Math.min(i,d),b=Math.min(c,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(h+f-x)}function rf(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function of(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const sf=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const o=zs(e,"boxes","nonMaxSuppressionAsync"),s=zs(t,"scores","nonMaxSuppressionAsync"),i=Yh(o,s,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([o.data(),s.data()]),u=c[0],l=c[1],{selectedIndices:d}=Jh(u,l,n,a,r);return o!==e&&o.dispose(),s!==t&&s.dispose(),oh(d,"int32")};const cf=Us({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=zs(e,"boxes","nonMaxSuppression"),i=zs(t,"scores","nonMaxSuppression"),c=Yh(s,i,n,a,r,o);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const u={boxes:s,scores:i},l={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:o},d=Es.runKernel(tr,u,l);return{selectedIndices:d[0],selectedScores:d[1]}}});const uf=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=zs(e,"boxes","nonMaxSuppressionAsync"),i=zs(t,"scores","nonMaxSuppressionAsync"),c=Yh(s,i,n,a,r,o);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const u=await Promise.all([s.data(),i.data()]),l=u[0],d=u[1],{selectedIndices:p,selectedScores:h}=tf(l,d,n,a,r,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:oh(p,"int32"),selectedScores:oh(h)}};const lf=Us({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=zs(e,"boxes","nonMaxSuppression"),i=zs(t,"scores","nonMaxSuppression"),c=Yh(s,i,n,a,r,null),u={boxes:s,scores:i},l={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:o},d=Es.runKernel(er,u,l);return{selectedIndices:d[0],validOutputs:d[1]}}});const df=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=zs(e,"boxes","nonMaxSuppressionAsync"),i=zs(t,"scores","nonMaxSuppressionAsync"),c=Yh(s,i,n,a,r,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,[p,h]=await Promise.all([s.data(),i.data()]),{selectedIndices:f,validOutputs:m}=ef(p,h,u,l,d,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:oh(f,"int32"),validOutputs:fc(m,"int32")}};const pf=Us({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=zs(e,"images","resizeBilinear");xt(3===r.rank||4===r.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),xt(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),xt(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let o=r,s=!1;3===r.rank&&(s=!0,o=el(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:o},c={alignCorners:n,halfPixelCenters:a,size:t},u=Es.runKernel(xr,i,c);return s?el(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const hf=Us({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=zs(e,"images","resizeNearestNeighbor");xt(3===r.rank||4===r.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),xt(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),xt("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),xt(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let o=r,s=!1;3===r.rank&&(s=!0,o=el(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:o},c={alignCorners:n,halfPixelCenters:a,size:t},u=Es.runKernel(yr,i,c);return s?el(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const ff=Us({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=zs(e,"image","threshold"),o=r.shape[0]*r.shape[1];let s,i,c,u,l=uc(oh([a]),255);if(xt(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),xt(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),xt("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),xt("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[s,i,c]=Zp(r,[1,1,1],-1);const e=uc(s,.2989),t=uc(i,.587),n=uc(c,.114);u=sc(sc(e,t),n)}else u=e;if("otsu"===t){l=function(e,t){let n,a,r,o,s,i,c=oh([-1]),u=oh([0]),l=oh([0]);for(let d=0;d<e.size-1;d++){n=sl(e,0,d+1),a=sl(e,d+1),s=cc(rd(n),t),i=cc(rd(a),t);const p=rd(uc(n,Ip(0,n.size)));r=cc(p,rd(n));const h=wc(a.shape,n.size),f=sc(Ip(0,a.size),h),m=uc(a,f);o=cc(rd(m),rd(a));const g=Sc(r,o),y=Sc(r,o),b=uc(s,i);l=uc(uc(b,g),y);const x=md(l,u);u=Ul(x,l,u),c=Ul(x,oh([d]),c)}return c}(fl(ac(Mp(u),"int32"),Hs([]),256),o)}const d=n?Sd(u,l):md(u,l);return ac(uc(d,255),"int32")}});const mf=Us({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5?arguments[5]:void 0;const s=zs(e,"image","transform","float32"),i=zs(t,"transforms","transform","float32");xt(4===s.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(s.rank,"."))),xt(2===i.rank&&(i.shape[0]===s.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),xt(null==o||2===o.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(o,".")));const c={image:s,transforms:i},u={interpolation:n,fillMode:a,fillValue:r,outputShape:o};return Es.runKernel(ro,c,u)}});const gf=Us({bandPart_:function(e,t,n){const a=zs(e,"a","bandPart");xt(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[o,s]=a.shape.slice(-2);let i,c;"number"===typeof t?(xt(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),xt(t<=o,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(o,")."))),i=zs(t<0?o:t,"numLower","bandPart")):(xt("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=Ul(kd(t,0),o,qd(t,o))),"number"===typeof n?(xt(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),xt(n<=s,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(s,")."))),c=zs(n<0?s:n,"numUpper","bandPart")):(xt("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=Ul(kd(n,0),s,qd(n,s)));const u=el(Ip(0,o,1,"int32"),[-1,1]),l=Ip(0,s,1,"int32"),d=Sc(u,l),p=Fd(Sd(d,i),gd(d,Td(c))),h=Hd([o,s],a.dtype);return el(th(mh(el(a,[-1,o,s])).map((e=>Ul(p,e,h)))),r)}});const yf=Us({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,xt(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)xt(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=Zp(e,e.shape[0],0).map((e=>eh(e,[0])));xt(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(Es.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=uc(rd(uc(n[t],e)),n[t]);e=Sc(e,a)}return cc(e,sd(e,"euclidean"))})));return t?th(n,0):n}});function bf(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Es.tidy((()=>{xt(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=pd(n),o=rc(e);const s=sh([[1]],[1,1]);let i=rc(s);const c=n>=a?a:n;for(let e=0;e<c;++e){const t=o,c=i,u=r;[i,o,r]=Es.tidy((()=>{const t=sl(o,[e,e],[n-e,1]),c=sd(t),u=sl(o,[e,e],[1,1]),l=Ul(md(u,0),sh([[-1]]),sh([[1]])),d=Sc(u,uc(l,c)),p=cc(t,d);i=1===p.shape[0]?rc(s):al([s,sl(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=Td(cc(rl(l,d),c)),f=sl(o,[e,0],[n-e,a]),m=uc(h,i),g=wh(i);if(0===e)o=Sc(f,rl(m,rl(g,f)));else{const t=Sc(f,rl(m,rl(g,f)));o=al([sl(o,[0,0],[e,a]),t],0)}const y=wh(m),b=sl(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Sc(b,rl(rl(b,i),y));else{const t=Sc(b,rl(rl(b,i),y));r=al([sl(r,[0,0],[n,e]),t],1)}return[i,o,r]})),Ys([t,c,u])}return!t&&n>a&&(r=sl(r,[0,0],[n,a]),o=sl(o,[0,0],[a,a])),[r,o]}))}const xf=Us({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(xt(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return bf(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=mh(el(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],o=[];a.forEach((e=>{const[n,a]=bf(e,t);r.push(n),o.push(a)}));return[el(th(r,0),e.shape),el(th(o,0),e.shape)]}}});var vf;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(vf||(vf={}));const wf=Us({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:vf.SUM_BY_NONZERO_WEIGHTS;const a=zs(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=zs(t,"weights","computeWeightedLoss"));const o=null==r?a:uc(a,r);if(n===vf.NONE)return o;if(n===vf.SUM)return rd(o);if(n===vf.MEAN){if(null==r)return Gd(o);{const e=a.size/r.size,t=cc(rd(o),rd(r));return e>1?cc(t,fc(e)):t}}if(n===vf.SUM_BY_NONZERO_WEIGHTS){if(null==r)return cc(rd(o),fc(a.size));{const e=uc(r,jd(a.shape)),t=ac(rd(Jd(e,fc(0))),"float32");return cc(rd(o),t)}}throw Error("Unknown reduction: ".concat(n))}});const kf=Us({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:vf.SUM_BY_NONZERO_WEIGHTS;const r=zs(e,"labels","absoluteDifference"),o=zs(t,"predictions","absoluteDifference");let s=null;null!=n&&(s=zs(n,"weights","absoluteDifference")),vt(r.shape,o.shape,"Error in absoluteDifference: ");const i=Cc(Sc(r,o));return wf(i,s,a)}});const Sf=Us({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:vf.SUM_BY_NONZERO_WEIGHTS;const o=zs(e,"labels","cosineDistance"),s=zs(t,"predictions","cosineDistance");let i=null;null!=a&&(i=zs(a,"weights","cosineDistance")),vt(o.shape,s.shape,"Error in cosineDistance: ");const c=fc(1),u=Sc(c,rd(uc(o,s),n,!0));return wf(u,i,r)}});const Cf=Us({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:vf.SUM_BY_NONZERO_WEIGHTS,r=zs(e,"labels","hingeLoss");const o=zs(t,"predictions","hingeLoss");let s=null;null!=n&&(s=zs(n,"weights","hingeLoss")),vt(r.shape,o.shape,"Error in hingeLoss: ");const i=fc(1);r=Sc(uc(fc(2),r),i);const c=Tp(Sc(i,uc(r,o)));return wf(c,s,a)}});const If=Us({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:vf.SUM_BY_NONZERO_WEIGHTS;const o=zs(e,"labels","huberLoss"),s=zs(t,"predictions","huberLoss");let i=null;null!=n&&(i=zs(n,"weights","huberLoss")),vt(o.shape,s.shape,"Error in huberLoss: ");const c=fc(a),u=Cc(Sc(s,o)),l=qd(u,c),d=Sc(u,l),p=sc(uc(fc(.5),dc(l)),uc(c,d));return wf(p,i,r)}});const Nf=Us({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:vf.SUM_BY_NONZERO_WEIGHTS;const o=zs(e,"labels","logLoss"),s=zs(t,"predictions","logLoss");let i=null;null!=n&&(i=zs(n,"weights","logLoss")),vt(o.shape,s.shape,"Error in logLoss: ");const c=fc(1),u=fc(a),l=Td(uc(o,Nd(sc(s,u)))),d=uc(Sc(c,o),Nd(sc(Sc(c,s),u))),p=Sc(l,d);return wf(p,i,r)}});const _f=Us({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:vf.SUM_BY_NONZERO_WEIGHTS;const r=zs(e,"labels","meanSquaredError"),o=zs(t,"predictions","meanSquaredError");let s=null;null!=n&&(s=zs(n,"weights","meanSquaredError")),vt(r.shape,o.shape,"Error in meanSquaredError: ");const i=Jp(r,o);return wf(i,s,a)}});const Tf=Us({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:vf.SUM_BY_NONZERO_WEIGHTS,o=zs(e,"multiClassLabels","sigmoidCrossEntropy");const s=zs(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=zs(n,"weights","sigmoidCrossEntropy")),vt(o.shape,s.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=fc(a),t=fc(1),n=fc(.5);o=sc(uc(o,Sc(t,e)),uc(n,e))}const c=function(e,t){const n=zs(e,"labels","sigmoidCrossEntropyWithLogits"),a=zs(t,"logits","sigmoidCrossEntropyWithLogits");vt(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Tp(a),o=uc(a,n),s=_d(cd(Td(Cc(a))));return sc(Sc(r,o),s)}(o,s);return wf(c,i,r)}});const Ef=Us({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:vf.SUM_BY_NONZERO_WEIGHTS,o=zs(e,"onehotLabels","softmaxCrossEntropy");const s=zs(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=zs(n,"weights","softmaxCrossEntropy")),vt(o.shape,s.shape,"Error in softmaxCrossEntropy: "),a>0){const e=fc(a),t=fc(1),n=fc(o.shape[1]);o=sc(uc(o,Sc(t,e)),cc(e,n))}const c=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=hc(((e,t,a)=>{const r=Od(t,[n],!0),o=Sc(ac(t,"float32"),r);a([e,o]);const s=Td(uc(o,e));return{value:rd(s,[n]),gradFunc:(e,t)=>{const[a,r]=t,o=Zl(e.shape,[n]);return[uc(el(e,o),Sc(ac(a,"float32"),cd(r))),uc(el(e,o),Sc(cd(r),ac(a,"float32")))]}}}));return a(e,t)}(o,s);return wf(c,i,r)}});const Rf=Us({sparseFillEmptyRows_:function(e,t,n,a){const r=zs(e,"indices","sparseFillEmptyRows","int32"),o=zs(t,"values","sparseFillEmptyRows"),s=zs(n,"denseShape","sparseFillEmptyRows","int32"),i=zs(a,"defaultValue","sparseFillEmptyRows",o.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==o.rank)throw new Error("Values should be Tensor1D but received shape ".concat(o.shape));if(1!==s.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(s.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const c={indices:r,values:o,denseShape:s,defaultValue:i},u=Es.runKernel(Ur,c);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});const Af=Us({sparseReshape_:function(e,t,n){const a=zs(e,"inputIndices","sparseReshape","int32"),r=zs(t,"inputShape","sparseReshape","int32"),o=zs(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==o.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(o.shape));const s={inputIndices:a,inputShape:r,newShape:o},i=Es.runKernel(Vr,s);return{outputIndices:i[0],outputShape:i[1]}}});const Of=Us({sparseSegmentMean_:function(e,t,n){const a=zs(e,"data","sparseSegmentMean"),r=zs(t,"indices","sparseSegmentMean","int32"),o=zs(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(o.shape));const s={data:a,indices:r,segmentIds:o};return Es.runKernel(Gr,s)}});const Ff=Us({sparseSegmentSum_:function(e,t,n){const a=zs(e,"data","sparseSegmentSum"),r=zs(t,"indices","sparseSegmentSum","int32"),o=zs(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(o.shape));const s={data:a,indices:r,segmentIds:o};return Es.runKernel(Hr,s)}});const Df=Us({stringNGrams_:function(e,t,n,a,r,o,s,i){const c=zs(e,"data","stringNGrams","string");if("string"!==c.dtype)throw new Error("Data must be of datatype string");if(1!==c.shape.length)throw new Error("Data must be a vector, saw: ".concat(c.shape));const u=zs(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const l={separator:n,nGramWidths:a,leftPad:r,rightPad:o,padWidth:s,preserveShortSequences:i},d={data:c,dataSplits:u},p=Es.runKernel(Qr,d,l);return{nGrams:p[0],nGramsSplits:p[1]}}});const Mf={fft:Xp,ifft:Yp,rfft:$p,irfft:Qp},Pf={hammingWindow:Wh,hannWindow:Uh,frame:Vh,stft:Gh},Lf={flipLeftRight:jh,grayscaleToRGB:Kh,resizeNearestNeighbor:hf,resizeBilinear:pf,rgbToGrayscale:qh,rotateWithOffset:Xh,cropAndResize:Hh,nonMaxSuppression:Qh,nonMaxSuppressionAsync:sf,nonMaxSuppressionWithScore:cf,nonMaxSuppressionWithScoreAsync:uf,nonMaxSuppressionPadded:lf,nonMaxSuppressionPaddedAsync:df,threshold:ff,transform:mf},zf={bandPart:gf,gramSchmidt:yf,qr:xf},Bf={absoluteDifference:kf,computeWeightedLoss:wf,cosineDistance:Sf,hingeLoss:Cf,huberLoss:If,logLoss:Nf,meanSquaredError:_f,sigmoidCrossEntropy:Tf,softmaxCrossEntropy:Ef},Wf={sparseFillEmptyRows:Rf,sparseReshape:Af,sparseSegmentMean:Of,sparseSegmentSum:Ff},Uf={stringNGrams:Df,stringSplit:Us({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=zs(e,"input","stringSplit","string"),r=zs(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const o={skipEmpty:n},s={input:a,delimiter:r},i=Es.runKernel(Zr,s,o);return{indices:i[0],values:i[1],shape:i[2]}}}),stringToHashBucketFast:Us({stringToHashBucketFast_:function(e,t){const n=zs(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return Es.runKernel($r,r,a)}}),staticRegexReplace:Us({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=zs(e,"input","staticRegexReplace","string"),o={pattern:t,rewrite:n,replaceGlobal:a};return Es.runKernel(Xr,{x:r},o)}})},Vf="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function Gf(e,t){const n=e[0].length;e.forEach(((e,t)=>{xt(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),xt(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let o=0;o<n;o++)xt(o===t||e[o]===a[o],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function Hf(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var jf;function Kf(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const o=n[r],s=a[a.length-n.length+r],i=a[s];if(o>=0)if(i>=0){if(i!==o)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(o," but shape[").concat(r+e,"] = ").concat(i))}else a[s]=o}return a}function qf(e){const t={FIRST_DIM_SIZE:jf.FIRST_DIM_SIZE,VALUE_ROWIDS:jf.VALUE_ROWIDS,ROW_LENGTHS:jf.ROW_LENGTHS,ROW_SPLITS:jf.ROW_SPLITS,ROW_LIMITS:jf.ROW_LIMITS,ROW_STARTS:jf.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function Xf(e){return 0===e.length?0:e[0]===jf.FIRST_DIM_SIZE?e.length-1:e.length}function Yf(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(jf||(jf={}));const Qf=30;function Zf(e){return e<=Qf?e:Bt(e,Math.floor(Math.sqrt(e)))}function $f(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Jf(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function em(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function tm(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let o=1;o<e.length;++o)o<=t.length?a?r.push(t[o-1]*e[o]):r.push(e[o]/t[o-1]):r.push(e[o]);return r}function nm(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function am(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}const rm=1.7580993408473768,om=1.0507009873554805,sm=.3275911,im=.254829592,cm=-.284496736,um=1.421413741,lm=-1.453152027,dm=1.061405429;function pm(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function hm(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function fm(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function mm(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function gm(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ym(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function bm(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const o=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(o),a[r]=Math.sin(o)}return{real:n,imag:a}}function xm(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const vm="->",wm=/->/g,km=",",Sm="...";function Cm(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(wm,"").length)/vm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(vm,'").'));const[a,r]=e.split(vm);xt(-1===a.indexOf(Sm),(()=>'The ellipsis notation ("'.concat(Sm,'") is not supported yet.')));const o=a.split(km),s=o.length;if(t!==s)throw new Error("Expected ".concat(s," input tensors, received ").concat(t));if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<r.length;++d){const e=r[d];if(!o.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<a.length;++d){const e=a[d];-1===i.indexOf(e)&&e!==km&&i.push(e)}const c=new Array(o.length);for(let d=0;d<s;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error("Found duplicate axes in input component ".concat(o[d],". ")+"Support for duplicate axes in input is not implemented yet.");c[d]=[];for(let e=0;e<o[d].length;++e)c[d].push(i.indexOf(o[d][e]))}const u=i.length,l=[];for(let d=r.length;d<u;++d)l.push(d);return{allDims:i,summedDims:l,idDims:c}}function Im(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Nm(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:xt(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function _m(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let s=0;s<r;++s)a.push([]);const o=[];for(let s=0;s<n.length;++s){const e=Em(t,n[s]);for(const t of e)-1===o.indexOf(t)&&(a[s].push(t),o.push(t))}return{path:n,steps:a}}function Tm(e){return e.every(((e,t)=>e===t))}function Em(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Rm(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)xt(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{xt(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const r=t.indexOf(-1);if(-1!==r){const a=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-a}xt(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function Am(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function Om(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function Fm(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function Dm(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function Mm(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function Pm(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Lm(e,t){const n=kt(e),a=kt(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function zm(e,t){const n=kt(e),a=kt(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function Bm(){return"segment ids must be >= 0"}function Wm(){return"segment ids are not increasing"}function Um(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function Vm(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function Gm(e,t){let n,a=!1;for(e<=Qf?(n=e,a=!0):n=Bt(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=Bt(e,n+1);return n}function Hm(e,t,n){const a=[],r=e.length;for(let o=0;o<r;o++)o!==t?a.push(e[o]):a.push(n);return a}function jm(e,t,n,a){const r=t.shape.length,o=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>o)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(o,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<a;++d)if(e.shape[d]!==t.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(e.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(t.shape[d],"."));const s=e.shape[n],i=[];let c=1,u=1,l=1;for(let d=0;d<a;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=a;d<n;d++)i.push(e.shape[d]),u*=e.shape[d];for(let d=a;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<o;d++)i.push(e.shape[d]),l*=e.shape[d];return{batchSize:c,sliceSize:l,outerSize:u,dimSize:s,outputShape:i}}function Km(e){try{return e.map((e=>jo(e)))}catch(Tj){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(Tj))}}function qm(e){return e.map((e=>Ho(e)))}!function(){for(const e of Rc)xc(e)}();const Xm={},Ym={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Qm(e,t){if(!(e in Xm)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Jt().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete Xm[e]}),!1),Jt().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ym.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",Ym)||n.getContext("experimental-webgl",Ym);return n.getContext("webgl2",Ym)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;Xm[e]=n}const n=Xm[e];return null==n||n.isContextLost()?(delete Xm[e],Qm(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Xm[e])}var Zm,$m,Jm;function eg(e,t){return[t,e]}function tg(e){const t=kt(e);return Nt(Math.ceil(t/4))}function ng(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function ag(e,t){const n=e;let a,r,o,s,i,c,u,l,d,p;return 2===Jt().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,o=n.RGBA16F,s=n.RGBA32F,i=n.RED,u=4,l=1,d=n.HALF_FLOAT,p=n.FLOAT,c=n.RGBA8):(a=e.RGBA,r=e.RGBA,o=e.RGBA,s=n.RGBA,i=e.RGBA,u=4,l=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,c=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:p}}function rg(e,t){const n=t();return Jt().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Zm||(Zm={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}($m||($m={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Jm||(Jm={}));function og(e){return!!(Jt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function sg(e,t){return mg(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const ig=/ERROR: [0-9]+:([0-9]+):/g;function cg(e,t){const n=ig.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),o=r.length.toString().length+2,s=r.map(((e,t)=>_t((t+1).toString(),o)+e));let i=0;for(let d=0;d<s.length;d++)i=Math.max(s[d].length,i);const c=s.slice(0,a-1),u=s.slice(a-1,a),l=s.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(_t(u[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}function ug(e,t){if(rg(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function lg(e,t,n,a,r,o,s){const i=e.getAttribLocation(t,n);return-1!==i&&(rg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),rg(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,o,s))),rg(e,(()=>e.enableVertexAttribArray(i))),!0)}function dg(e,t,n,a){rg(e,(()=>function(e,t,n){gg(e,n),rg(e,(()=>e.activeTexture(e.TEXTURE0+n))),rg(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),rg(e,(()=>e.uniform1i(n,a)))}function pg(e,t,n){rg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),rg(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function hg(e,t){rg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),rg(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function fg(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function mg(e,t,n){const a=rg(e,(()=>t()));if(null==a)throw new Error(n);return a}function gg(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function yg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return kt(e.slice(0,e.length-t))}function bg(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function xg(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[yg(e),...bg(e)]),t}function vg(e){return e%2===0}function wg(e,t){if(Ct(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(vg(n)&&vg(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&vg(e[0])&&vg(t[0])}let kg,Sg;function Cg(e,t){return null!=e.getExtension(t)}function Ig(e){try{if(null!=Qm(e))return!0}catch(_j){return console.log("Error when getting WebGL context: ",_j),!1}return!1}function Ng(e){if(0===e)return!1;const t=Qm(e);if(1!==e){if(Cg(t,"EXT_color_buffer_float"))return _g(t);const e="EXT_color_buffer_half_float";if(Cg(t,e)){const n=t.getExtension(e);return function(e,t){const n=ag(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,o=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,o,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(s),i}(t,n)}return!1}if(!Cg(t,"OES_texture_float"))return!1;if(!Cg(t,"WEBGL_color_buffer_float"))return!1;return _g(t)}function _g(e){const t=ag(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function Tg(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&xt("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const Eg=Jt();function Rg(){let e,t,n,a,r,o,s,i,c,u;return 2===Jt().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",o="outputColor",s="out vec4 outputColor;",i=Jt().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",c="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",o="gl_FragColor",s="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:o,defineOutput:s,defineSpecialNaN:i,defineSpecialInf:c,defineRound:u}}function Ag(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=Wt(t);return a.map(((t,r)=>{const o="int ".concat(e[r]," = ").concat(n," / ").concat(t),s=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(o,"; ").concat(s,";")})).join("")}function Og(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=Wt(t);return a.map(((t,r)=>{const o="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),s=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(o,"; ").concat(s,";")})).join("")}function Fg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let o=n-3;o>=0;--o)r[o]="(".concat(r[o+1]," * ").concat(a[o+1],")");return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const o="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),s=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(o,"; ").concat(s,";")})).join("")}function Dg(e){const t=Wt(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}Eg.registerFlag("HAS_WEBGL",(()=>Eg.getNumber("WEBGL_VERSION")>0)),Eg.registerFlag("WEBGL_VERSION",(()=>Ig(2)?2:Ig(1)?1:0)),Eg.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Eg.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Eg.get("WEBGL_VERSION"))),Eg.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Eg.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Eg.registerFlag("WEBGL_PACK",(()=>Eg.getBool("HAS_WEBGL"))),Eg.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Eg.getBool("WEBGL_PACK"))),Eg.registerFlag("WEBGL_PACK_CLIP",(()=>Eg.getBool("WEBGL_PACK"))),Eg.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Eg.getBool("WEBGL_PACK"))),Eg.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Eg.getBool("WEBGL_PACK"))),Eg.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Eg.getBool("WEBGL_PACK"))),Eg.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Eg.getBool("WEBGL_PACK"))),Eg.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Eg.getBool("WEBGL_PACK"))),Eg.registerFlag("WEBGL_PACK_REDUCE",(()=>Eg.getBool("WEBGL_PACK"))),Eg.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Eg.getBool("WEBGL_PACK"))),Eg.registerFlag("WEBGL_CONV_IM2COL",(()=>Eg.getBool("WEBGL_PACK"))),Eg.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>Eg.getBool("WEBGL_PACK"))),Eg.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==kg){const t=Qm(e);kg=t.getParameter(t.MAX_TEXTURE_SIZE)}return kg}(Eg.getNumber("WEBGL_VERSION")))),Eg.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==Sg){const t=Qm(e);Sg=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Sg)}(Eg.getNumber("WEBGL_VERSION")))),Eg.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Eg.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Qm(e);return t=Cg(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Cg(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Eg.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Eg.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Os())),Eg.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=Qm(e);if(1===e){if(!Cg(t,"OES_texture_float"))return!1}else if(!Cg(t,"EXT_color_buffer_float"))return!1;return _g(t)}(Eg.getNumber("WEBGL_VERSION")))),Eg.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Eg.getBool("WEBGL_FORCE_F16_TEXTURES")&&Eg.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Eg.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>Ng(Eg.getNumber("WEBGL_VERSION")))),Eg.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Eg.getNumber("WEBGL_VERSION"))&&null!=Qm(e).fenceSync;var e})),Eg.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Eg.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Eg.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),Eg.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Os()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),Eg.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),Eg.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),Eg.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),Eg.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),Eg.registerFlag("WEBGL_EXP_CONV",(()=>!1)),Eg.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>Eg.getBool("IS_TEST"))),Eg.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),Eg.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),Eg.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),Eg.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Mg="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Pg}=o;function Lg(e,t,n){const a=[];if(e.forEach((e=>{const t=kt(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=qg(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),o=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?Bg(e,a):zg(e,a);const o=e.shapeInfo.logicalShape,s=t.logicalShape;o.length<=s.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",o=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,i=Pg(e.shapeInfo.logicalShape,t.logicalShape),c=Kg(s),u=s-o;let l;const d=["x","y","z","w","u","v"];l=0===o?"":s<2&&i.length>=1?"coords = 0;":i.map((e=>"coords.".concat(d[e+u]," = 0;"))).join("\n");let p="";p=s<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(d[t+u]))).join(", ");let h="return outputValue;";const f=1===kt(e.shapeInfo.logicalShape),m=kt(t.logicalShape),g=1===m;if(1!==o||f||g){if(f&&!g)h=1===s?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=o-2,t=o-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?h="return vec4(outputValue.x);":i.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(l,"\n      vec4 outputValue = get").concat(a,"(").concat(p,");\n      ").concat(h,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",o=t.texShape,s=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===c&&null==e.shapeInfo.flatOffset&&Ct(s,o))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const u=Kg(c),l=Pg(e.shapeInfo.logicalShape,t.logicalShape),d=c-i;let p;const h=["x","y","z","w","u","v"];p=0===i?"":c<2&&l.length>=1?"coords = 0;":l.map((e=>"coords.".concat(h[e+d]," = 0;"))).join("\n");let f="";f=c<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+d]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(p,"\n      return get").concat(a,"(").concat(f,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),s=t.texShape,i=Rg(),c=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let u,l,d=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(Wg,"\n    ").concat(Ug,"\n    ").concat(Vg,"\n  ");return t}(i);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Ct(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),o=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(o,";\n      index -= b * ").concat(o,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),o=r*Math.ceil(e[e.length-2]/2);let s=o,i="",c="b, r, c";for(let u=2;u<e.length-1;u++)s*=e[e.length-u-1],i="\n      int b".concat(u," = index / ").concat(s,";\n      index -= b").concat(u," * ").concat(s,";\n    ")+i,c="b".concat(u,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(o,";\n      index -= b * ").concat(o,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,s,n.enableShapeUniforms),l=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(i)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(Ct(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=Og(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=Ag(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=Og(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=Ag(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=Ag(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=Ag(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,s,n.enableShapeUniforms),l=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(d+=Gg);return[d,c,l,r,u,o,n.userCode].join("\n")}function zg(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,o]=e.shapeInfo.texShape;if(1===r&&1===o)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const s=Hg(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(s,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(s,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(jg(e),"\n      }\n    ");const r=e.shapeInfo.texShape,o=r[0],s=r[1];if(1===s&&1===o)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=Hg(n);if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(o,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(s,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(o,", ").concat(s,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape;if(null!=o&&Ct(n,o)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=o[0],n=o[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:s,keptDims:i}=At(n),c=s;if(c.length<n.length){const n=Xg(e,c),a=["row","col"];return"\n      ".concat(zg(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(Yg(a,i),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(jg(e),"\n      }\n    ");const u=o[0],l=o[1],d=Hg(a);if(1===l)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(u,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===u)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(l,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(d,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(d,";\n    vec2 uv = uvFromFlat(").concat(u,", ").concat(l,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[1]*n[2],s=n[2],{newShape:i,keptDims:c}=At(n),u=i;if(u.length<n.length){const n=Xg(e,u),a=["row","col","depth"];return"\n        ".concat(zg(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(Yg(a,c),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(o,", ").concat(s,", 1)));\n        ").concat(jg(e),"\n      }\n    ");const l=e.shapeInfo.texShape,d=l[0],p=l[1],h=e.shapeInfo.flatOffset;if(p===o&&null==h)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(s,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(d,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(p===s&&null==h)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(d,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const f=Hg(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(o," + col * ").concat(s," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[3],s=n[2]*o,i=n[1]*s,{newShape:c,keptDims:u}=At(n);if(c.length<n.length){const n=Xg(e,c),a=["row","col","depth","depth2"];return"\n      ".concat(zg(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(Yg(a,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(s,", ").concat(o,", 1)));\n        ").concat(jg(e),"\n      }\n    ");const l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f="int stride2 = ".concat(a,"Shape[3];"),m="int stride1 = ".concat(a,"Shape[2] * stride2;"),g="int stride0 = ".concat(a,"Shape[1] * stride1;");if(h===i&&null==l)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(f,"\n        ").concat(m,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(s,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(h===o&&null==l)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const y=Hg(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(f,"\n      ").concat(m,"\n      ").concat(g,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(s," +\n          depth * ").concat(o," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(h,", index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],o=t[3]*r,s=t[2]*o,i=t[1]*s,{newShape:c,keptDims:u}=At(t);if(c.length<t.length){const t=Xg(e,c),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(zg(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(Yg(n,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(s,", ").concat(o,", ").concat(r,")) +\n          depth3;\n        ").concat(jg(e),"\n      }\n    ");const l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&null==l)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(s,", ").concat(o,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(h===r&&null==l)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=Hg(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(s," + depth * ").concat(o," +\n          depth2 * ").concat(r," + depth3 + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(h,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:o}=At(t);if(r.length<t.length){const t=Xg(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(zg(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(Yg(n,o),");\n      }\n    ")}const s=t[5],i=t[4]*s,c=t[3]*i,u=t[2]*c,l=t[1]*u;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(l,", ").concat(u,", ").concat(c,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(s,", 1)));\n        ").concat(jg(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===l&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(u,", ").concat(c,", ").concat(i,", ").concat(s,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===s&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=Hg(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(l," + col * ").concat(u," + depth * ").concat(c," +\n          depth2 * ").concat(i," + depth3 * ").concat(s," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(h,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function Bg(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=Rg();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,o=Rg();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(o.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(s[0],", ").concat(s[1],", index);\n      return ").concat(o.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,s=o[0],i=o[1],c=Rg();if(null!=o&&Ct(n,o))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(s,".0);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ");const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(l,", ").concat(u[0],", ").concat(u[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===n[0]){const a=[1,2],o=Xg(e,n.slice(1)),s=["b","row","col"];return"\n        ".concat(Bg(o,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(Yg(s,a),");\n        }\n      ")}const i=Rg();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=s[0],u=s[1],l=Math.ceil(n[2]/2),d=l*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(u,", ").concat(d,", ").concat(l,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=Rg();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=e.shapeInfo.logicalShape,s=o.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=c[0],l=c[1],d=Math.ceil(o[s-1]/2);let p=d*Math.ceil(o[s-2]/2),h="int b, int row, int col",f="b * ".concat(p," + (row / 2) * ").concat(d," + (col / 2)");for(let m=2;m<s-1;m++)h="int b".concat(m,", ")+h,p*=o[s-m-1],f="b".concat(m," * ").concat(p," + ")+f;return"\n    vec4 ".concat(a,"(").concat(h,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(l,";\n      int texC = index - texR * ").concat(l,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(l,", ").concat(u,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const Wg="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ug="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Vg="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Gg="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Hg(e){return"offset".concat(e)}function jg(e){const t=e.name,n=kt(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function Kg(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function qg(e,t,n){const{newShape:a,keptDims:r}=At(t),o=t.length,s=e&&3===o&&1===t[0],i=s?t.slice(1):a,c=!e&&o>1&&!Ct(t,n)&&a.length<o||s;return{useSqueezeShape:c,uniformShape:c?i:t,keptDims:r}}function Xg(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Yg(e,t){return t.map((t=>e[t])).join(", ")}function Qg(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),o=r.map((e=>e.shapeInfo)),s={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},i=Lg(r,s,t),c=function(e,t){const n=mg(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(rg(e,(()=>e.shaderSource(n,t))),rg(e,(()=>e.compileShader(n))),Jt().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw cg(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),u=e.createProgram(c);return Jt().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:i,webGLProgram:u,inShapeInfos:o,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:c,source:i,webGLProgram:u,inShapeInfos:o,outShapeInfo:s},Zg(e,t,u)))}function Zg(e,t,n){const a=[],r=[];let o,s,i,c=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Jt().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const l=!1;for(const d of t.variableNames){const r={name:d,uniform:e.getUniformLocation(n,d,l),offset:e.getUniformLocation(n,"offset".concat(d),l)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(d,"Shape"),l),r.texShape=e.getUniformLocation(n,"".concat(d,"TexShape"),l)),a.push(r)}if(t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",l),i=e.getUniformLocation(n,"outShapeStrides",l),s=e.getUniformLocation(n,"outTexShape",l)),t.customUniforms)for(const d of t.customUniforms)r.push(e.getUniformLocation(n,d.name,l));return{variablesLocations:a,customUniformLocations:r,infLoc:c,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:s}}function $g(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],o=r.shape;if(!Ct(a,o))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(o," must match"));if(e.isUniform&&r.isUniform)return;const s=e.texShape,i=r.isUniform?null:r.texData.texShape;if(!Ct(s,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(s," and ").concat(i," must match"))}))}function Jg(e){return Jt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class ey{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Zm.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Rg();this.outputShape=e,this.enableShapeUniforms=Jg(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?Og(["r","c","d"],e):Ag(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class ty{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Zm.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Rg();this.outputShape=e,this.enableShapeUniforms=Jg(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?Og(["r","c","d"],e):Ag(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class ny{constructor(e){this.variableNames=["A"],this.outTexUsage=$m.DOWNLOAD;const t=Rg();this.outputShape=e,this.userCode="\n      ".concat(Mg,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class ay{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=$m.DOWNLOAD;const t=Rg();this.outputShape=e,this.userCode="\n      ".concat(Mg,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const ry={R:0,G:1,B:2,A:3};class oy{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=Rg();this.outputShape=e,this.enableShapeUniforms=Jg(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let o="";for(let s=0;s<n.length;s++){const e=n[s];o+="\n          if(offset == ".concat(s,") {\n            result = values[").concat(ry[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Dg(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(o,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class sy{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Rg();this.outputShape=e,this.enableShapeUniforms=Jg(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let t=0;t<=1;t++){const r=2*o+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(o," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(o,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Dg(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function iy(e){const t=Rg();return function(e,t){const n=mg(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(rg(e,(()=>e.shaderSource(n,t))),rg(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function cy(e){return function(e,t){const n=mg(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return rg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),rg(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function uy(e){return function(e,t){const n=mg(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return rg(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),rg(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function ly(e,t,n,a,r,o){!function(e,t){const n=Jt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const s=function(e){return mg(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return rg(e,(()=>e.bindTexture(i,s))),rg(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),rg(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),rg(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),rg(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Jt().getNumber("WEBGL_VERSION")?rg(e,(()=>e.texImage2D(i,0,a,t,n,0,r,o,null))):rg(e,(()=>e.texStorage2D(i,1,a,t,n))),rg(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:s,texShape:[n,t]}}function dy(e){return e.internalFormatFloat}function py(e){return e.internalFormatHalfFloat}function hy(e){return e.downloadTextureFormat}function fy(e){return e.internalFormatPackedFloat}function my(e){return e.internalFormatPackedHalfFloat}function gy(e,t,n,a,r,o,s,i){const c=e,u=new Float32Array(function(e,t){const[n,a]=ng(e,t);return n*a*4}(o,s));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}class yy{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Jt().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){Xm[e]=t}(t,e)):this.gl=Qm(t),e=this.gl,2===Jt().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>rg(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>rg(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>rg(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>rg(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>rg(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>rg(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>rg(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>rg(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Jt().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=sg(this.gl,e),Cg(this.gl,t))this.textureHalfFloatExtension=sg(this.gl,t);else if(Jt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Cg(this.gl,a))this.colorBufferHalfFloatExtension=sg(this.gl,a);else if(Jt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Cg(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Cg(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=cy(this.gl),this.indexBuffer=uy(this.gl),this.framebuffer=function(e){return mg(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=ag(this.gl,this.textureHalfFloatExtension)}get debug(){return Jt().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;rg(e,(()=>e.finish())),rg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),rg(e,(()=>e.deleteFramebuffer(this.framebuffer))),rg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),rg(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),rg(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,o]=eg(t,n);return ly(e,r,o,dy(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,o]=eg(t,n);return ly(e,r,o,py(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,o]=eg(t,n);return ly(e,r,o,hy(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){rg(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Jt().getNumber("WEBGL_VERSION")?rg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):rg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Jt().getNumber("WEBGL_VERSION")?rg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):rg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),rg(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,o){let s,i,c;rg(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(s=new Uint8Array(n*a*4),i=e.UNSIGNED_BYTE,c=e.RGBA):(s=new Float32Array(n*a*4),i=e.FLOAT,c=o.internalFormatPackedFloat),s.set(r),2===Jt().getNumber("WEBGL_VERSION")?rg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,i,s))):rg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,a,0,e.RGBA,i,s))),rg(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,o]=ng(t,n);return ly(e,r,o,my(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,o]=ng(t,n);return ly(e,r,o,fy(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(hg(this.gl,this.framebuffer),this.outputTexture=null),rg(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,o]=eg(t,n),s=new Uint8Array(t*n*4);return rg(e,(()=>e.readPixels(0,0,r,o,a.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,o){return gy(this.gl,e,0,0,0,r,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n){const a=e.createBuffer();rg(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const r=16*t*n;return rg(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),rg(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),rg(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Jt().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return rg(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=iy(t));const n=function(e){return mg(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);rg(t,(()=>t.attachShader(n,this.vertexShader))),rg(t,(()=>t.attachShader(n,e))),function(e,t){if(rg(e,(()=>e.linkProgram(t))),!Jt().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&ug(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;rg(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){rg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),lg(e,t,"clipSpacePos",n,3,20,0)&&lg(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(rg(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&ug(this.gl,this.program),rg(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return mg(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),rg(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),dg(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=ng(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&ug(this.gl,this.program),fg(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}rg(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),rg(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=sg(this.gl,2===Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Tt((()=>this.disposed||this.isQueryAvailable(e,Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Jt().platform&&(n=Jt().platform.setTimeoutCustom.bind(Jt().platform)),Tt((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),pg(this.gl,e,this.framebuffer),this.debug&&fg(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(pg(this.gl,this.outputTexture,this.framebuffer),this.debug&&fg(this.gl)):hg(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;pg(a,e,this.framebuffer),this.debug&&fg(a),this.outputTexture=e,rg(a,(()=>a.viewport(0,0,t,n))),rg(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),rg(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function by(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&xt("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}function xy(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function vy(e){return(t,n,a,r,o)=>{const s=_c(t,n),i=s.length,c=Wt(s),u=Ot(o,kt(s)),l=t.length,d=n.length,p=Wt(t),h=Wt(n),f=Ic(t,s),m=Ic(n,s);if(f.length+m.length===0)for(let g=0;g<u.length;++g)u[g]=e(a[g%a.length],r[g%r.length]);else for(let g=0;g<u.length;++g){const t=Xt(g,i,c),n=t.slice(-l);f.forEach((e=>n[e]=0));const o=qt(n,l,p),s=t.slice(-d);m.forEach((e=>s[e]=0));const y=qt(s,d,h);u[g]=e(a[o],r[y])}return[u,s]}}function wy(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,o=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",o),imag:n.makeTensorInfo(r.shape,"float32",s)},i}function ky(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return wy({inputs:{real:ky(e,t,"float32"),imag:ky(e,t,"float32")},backend:e})}const a=jt(kt(t),n);return e.makeTensorInfo(t,n,a)}function Sy(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}function Cy(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}function Iy(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=Vo([0],n),[r,o]=vy(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[o,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function Ny(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:o}=a;if("complex64"===o){if("complex64"===r.dtype)return Sy({inputs:{x:r},backend:n});const e=ky(n,r.shape,r.dtype),t=Ny({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=wy({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=Cy({inputs:{input:r},backend:n}),t=Ny({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!Dt(r.dtype,o)){const e=Sy({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}const s=n.data.get(r.dataId).values,[i,c,u]=Iy(s,r.shape,r.dtype,o);return n.makeTensorInfo(i,c,u)}function _y(e,t,n,a){return null==n?n=>{let{inputs:r,backend:o}=n;const{a:s,b:i}=r,c=o;by([s,i],e);const u=c.data.get(s.dataId).values,l=c.data.get(i.dataId).values,d="string"===s.dtype?Km(u):u,p="string"===s.dtype?Km(l):l,h=a||s.dtype,[f,m]=t(s.shape,i.shape,d,p,h);return c.makeTensorInfo(m,h,f)}:e=>{let{inputs:r,backend:o}=e;const{a:s,b:i}=r,c=o;if("complex64"===s.dtype||"complex64"===i.dtype){const e=Ny({inputs:{x:s},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,o=c.data.get(a.dataId).values,u=c.data.get(r.dataId).values,l=Ny({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),d=c.data.get(l.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,f=c.data.get(p.dataId).values,m=c.data.get(h.dataId).values,[g,y,b]=n(s.shape,i.shape,o,u,f,m),x=c.makeTensorInfo(b,"float32",g),v=c.makeTensorInfo(b,"float32",y),w=wy({inputs:{real:x,imag:v},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(l),c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(v),w}{const e=c.data.get(s.dataId).values,n=c.data.get(i.dataId).values,r=a||s.dtype,[o,u]=t(s.shape,i.shape,e,n,r);return c.makeTensorInfo(u,r,o)}}}function Ty(e){return(t,n,a,r,o,s)=>{const i=_c(t,n),c=kt(i),u=i.length,l=Wt(i),d=Ot("float32",c),p=Ot("float32",c),h=Ic(t,i),f=Ic(n,i),m=pm(a,r),g=pm(o,s),y=t.length,b=Wt(t),x=n.length,v=Wt(n);if(h.length+f.length===0)for(let w=0;w<d.length;w++){const t=w%m.length,n=w%g.length,a=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);d[w]=a.real,p[w]=a.imag}else for(let w=0;w<d.length;w++){const t=Xt(w,u,l),n=t.slice(-y);h.forEach((e=>n[e]=0));const a=qt(n,y,b),r=t.slice(-x);f.forEach((e=>r[e]=0));const o=qt(r,x,v),s=e(m[2*a],m[2*a+1],g[2*o],g[2*o+1]);d[w]=s.real,p[w]=s.imag}return[d,p,i]}}const Ey=vy(((e,t)=>e+t)),Ry=Ty(((e,t,n,a)=>({real:e+n,imag:t+a})));_y(cn,Ey,Ry);function Ay(e,t,n,a,r){const o=kt(a),s=jt(r,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(s[n]+=o>0?t[i]:1)}return s}function Oy(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],o=e.shape[1],s=nc([r,n],t.dtype);for(let i=0;i<r;i++)for(let r=0;r<o;r++){const o=e.get(i,r);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?s.set(1,i,o):t.size>0?s.set(s.get(i,o)+t.get(i,r),i,o):s.set(s.get(i,o)+1,i,o))}return s}const Fy=vy(((e,t)=>e&t));_y(Nn,Fy);function Dy(e){return(t,n,a)=>{const r=Ft(n,t.length);for(let o=0;o<t.length;++o)r[o]=e(t[o],a);return r}}function My(e,t,n){return Py(e,Dy(t),n)}function Py(e,t,n){return a=>{let{inputs:r,attrs:o,backend:s}=a;const{x:i}=r;by(i,e);const c=s,u=c.data.get(i.dataId).values;let l;if("string"===i.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=Km(u)}else l=u;const d=n||i.dtype,p=t(l,d,o);return c.makeTensorInfo(i.shape,d,p)}}const Ly=Dy((e=>Math.ceil(e)));Py(En,Ly);function zy(e,t,n,a){const r=Ft(n,kt(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=kt(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const o="string"===n?Km(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[i+t]=o[s++]}a+=e.shape[1]}))}return r}const By=vy(((e,t)=>e===t?1:0)),Wy=(_y(sa,By,null,"bool"),Dy((e=>Math.exp(e)))),Uy=(Py(ia,Wy,"float32"),Dy((e=>Math.expm1(e)))),Vy=(Py(ua,Uy),Dy((e=>Math.floor(e)))),Gy=(Py(ha,Vy),vy(((e,t)=>Math.floor(e/t))));_y(fa,Gy,null,"int32");function Hy(e,t,n,a,r,o,s,i,c){const u=nc([a,o],n);for(let l=0;l<a;l++){const n=[];let a=0;for(let t=0;t<r;t++){const o=e[l*r+t];a+=o*s[t],n.push(o)}if(a<0||a>=c/o)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let e=0;e<o;e++)u.values[l*o+e]=t.get(...t.indexToLoc(a*o+e))}return u}function jy(e,t,n){const a=nc(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),o=n[0],s=n[2],i=t.locToIndex([o,s]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(a.values[r]=e.values[c])}return a}const Ky=vy(((e,t)=>e>t?1:0)),qy=(_y(ba,Ky,null,"bool"),vy(((e,t)=>e>=t?1:0))),Xy=(_y(xa,qy,null,"bool"),vy(((e,t)=>e<t?1:0))),Yy=(_y(_a,Xy,null,"bool"),vy(((e,t)=>e<=t?1:0)));_y(Ta,Yy,null,"bool");function Qy(e,t,n){const a=(t-e)/(n-1),r=jt(n,"float32");r[0]=e;for(let o=1;o<r.length;o++)r[o]=r[o-1]+a;return r}const Zy=Dy((e=>Math.log(e)));Py(Ra,Zy);function $y(e,t,n,a){const r=Ot(a,kt(n));for(let o=0;o<r.length;++o){const n=o*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[o]=a}return r}const Jy=vy(((e,t)=>Math.max(e,t))),eb=(_y(za,Jy),vy(((e,t)=>Math.min(e,t)))),tb=(_y(Ka,eb),vy(((e,t)=>e*t))),nb=Ty(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n})));_y(Qa,tb,nb);function ab(e,t,n){const a=Uo(-1,n);return tb([],t,a,e,n)}const rb=vy(((e,t)=>e!==t?1:0));_y($a,rb,null,"bool");function ob(e,t,n,a,r){const o=t.length,s=kt(t),i=Wt(t),c=Wt(r),u=Ot(n,kt(r));for(let l=0;l<s;++l){const t=Xt(l,o,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];u[qt(n,o,c)]=e[l]}return u}function sb(e,t,n,a){const[r,o]=Ql(e,a),s=bs(t,"int32"),i=jt(kt(r),s),c=kt(o);for(let u=0;u<i.length;++u){const e=u*c;let t=1;for(let a=0;a<c;++a)t*=n[e+a];i[u]=t}return{outVals:i,outShape:r,outDtype:s}}function ib(e,t,n,a){const r=[];let o=0;const s=t.length-1+n.length,i=new Array(s).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let u=0;u<t.length-1;++u){c*=t[u];const e=t[u+1];for(let t=1;t<c+1;++t)i[u].push(t*e)}for(let u=0;u<e.length;++u){let a=e[u],s=e[u]+1;for(let e=0;e<n.length;++e){const r=n[e],o=e+t.length-1;if(o>=0){const e=i[o],t=e[e.length-1]-r[a];for(let n=a;n<s;++n)i[o].push(r[n+1]+t)}a=r[a],s=r[s]}s!==a&&(r.push([a,s]),o+=s-a)}return{outSplits:i,valueSlices:r,numValues:o}}function cb(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function ub(e,t,n,a,r){const o=t.slice();o[0]=r;const s=Ft(n,kt(o)),i=e.length;return function(e,t,n,a,r,o){const s=cb(t,2)[1],i=cb(o,2)[1];let c=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<a;++n)r[c*i+n]=e[t*s+n];++c}}(e,t,a,0===i?0:i/t[0],s,o),[s,o]}function lb(e,t,n,a,r,o,s,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=Xt(a,t.length,Wt(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(o,s,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const c=a[0],{outSplits:u,valueSlices:l,numValues:d}=ib(o,s,e,c),p=function(e){const t=[];for(let n=0;n<e.length;++n){const a=Ft("int32",e[n].length);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(u),h=ub(n,a,r,l,d);return[p,h[0],h[1]]}const db=2147483647;function pb(e,t,n,a,r,o,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,c=0===r.length,u=0===s.length,l=[];i||l.push(t[0]),c||l.push(r[0]),u||l.push(s[0]);for(let m=1;m<l.length;++m)if(l[m]!==l[m-1])throw new Error("starts, limits, and deltas must have the same shape");const d=0===l.length?1:l[0],p=Ft("int32",d+1);p[0]=0;for(let m=0;m<d;++m){const t=i?e[0]:e[m],n=c?a[0]:a[m],r=u?o[0]:o[m];if(0===r)throw new Error("Requires delta != 0");let s;if(r>0&&n<t||r<0&&n>t)s=0;else if(s=Math.ceil(Math.abs((n-t)/r)),s>db)throw new Error("Requires ((limit - start) / delta) <= ".concat(db));p[m+1]=p[m]+s}const h=Ft(n,p[d]);let f=0;for(let m=0;m<d;++m){const t=p[m+1]-p[m];let n=i?e[0]:e[m];const a=u?o[0]:o[m];for(let e=0;e<t;++e)h[f++]=n,n+=a}return[p,h]}var hb=jf;class fb{constructor(e,t,n,a,r,o,s,i,c,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=s,this.rowPartitionValues=i,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=qf(u),this.raggedRank=Xf(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===hb.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===hb.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case hb.VALUE_ROWIDS:return fb.getMaxWidthValueRowID(t);case hb.ROW_SPLITS:return fb.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(hb[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let o=1;o<t;++o){const t=e[o];t!==a&&(a=t,r=Math.max(o-n,r),n=o)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return gb(e,n)}calculateOutputSize(e){const t=this.valuesShape;Yf(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Kf(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let o=0;for(let s=0;s<a;++s,o+=t)r.push(o);for(let s=a;s<e;++s)r.push(-1);return xt(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,o=[];for(let s=0;s<r-1;++s){const r=e[s+1]-e[s];let i=Math.min(a,r),c=t[s];-1===c&&(i=0);for(let e=0;e<i;++e)o.push(c),c+=n;for(let e=0;e<r-i;++e)o.push(-1)}if(r>0&&o.length!==e[r-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,o=[];if(0===r)return[];let s=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];o.push(c);for(let u=1;u<r;++u){const r=e[u];if(r===i)c>=0&&(++s,s<a?c+=n:c=-1);else{if(s=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));c=t[r]}o.push(c)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case hb.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case hb.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(hb[o]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case hb.FIRST_DIM_SIZE:return e[0];case hb.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case hb.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(hb[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let o=n.length-2;o>=0;--o)n[o]=n[o+1]*t[o+1];const a=gb(t,!1),r=Ft(this.valuesDType,kt(a));if(n[0]*t[0]>0){let o=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){o=this.calculateOutputIndex(e-1,o,n[e],t[e])}this.setOutput(this.raggedRank,o,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,o=n;let s=a.slice();s=s.slice(e+1);const i=kt(s),c=t.length;let u=this.defaultValue;if(u.length!==i&&1!==u.length){const e=this.defaultValueShape;Xs((()=>{const t=el(u,e),n=yl(t,s);u=n.dataSync()}))}let l=0,d=0,p=0;for(let h=0;h<=c;++h){let e=h<c?t[h]:-1;if(e!==p){if(d<p){const e=r.subarray(l*i);mb(o.subarray(d*i),e,(p-d)*i)}if(h>=c){const t=n.length;e=Math.floor(t/i)}if(e>p)if(1===this.defaultValue.length)o.subarray(p*i,e*i).fill(this.defaultValue[0]),p=e;else for(;e>p;){mb(o.slice(p*i),u,i),++p}e<0?(l=h+1,d=p):(l=h,d=p,p=d+1)}else++p}}}function mb(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function gb(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function yb(e,t,n,a,r,o,s,i,c,u){return new fb(e,t,n,a,r,o,s,i,c,u).compute()}function bb(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return jt(0,a);const r=jt(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),r[0]=e;for(let o=1;o<r.length;o++)r[o]=r[o-1]+n;return r}const xb=Dy((e=>1/Math.sqrt(e)));Py(Cr,xb);function vb(e,t,n,a,r,o,s,i,c,u){const l=[a/r,r],d=e.values,p=t.values;if(0===a)return nc(n,t.dtype);const h=c instanceof os?c:nc(l,t.dtype);"string"===typeof c||"number"===typeof c?h.values.fill(c):"boolean"===typeof c&&h.values.fill(+c);for(let f=0;f<o;f++){const e=[];let o=0;for(let t=0;t<s;t++){const n=d[f*s+t];e.push(n),o+=n*i[t]}if(o<0||o>=a/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)u?h.values[o*r+n]+=p[f*r+n]:h.values[o*r+n]=0===t.rank?p[0]:p[f*r+n]}return h}const wb=Dy((e=>1/(1+Math.exp(-e))));My(Dr,(e=>1/(1+Math.exp(-e))));function kb(e,t,n,a,r){const o=ku(a,t,n),s=kt(n),i=Wt(a);if(o){const n=Su(t,i);return"string"===r?e.slice(n,n+s):e.subarray(n,n+s)}const c=nc(a,r,"string"===r?Km(e):e),u=nc(n,r);for(let l=0;l<u.size;++l){const e=u.indexToLoc(l),n=e.map(((e,n)=>e+t[n]));u.set(c.get(...n),...e)}return"string"===r?qm(u.values):u.values}function Sb(e,t,n,a,r,o,s){const i=t[0],c=o[0],u=new Array(c),l=new Array(i),d=t[1];if(0===c){if(0!==i)throw new Error(Am(i));return[Ft(n,0),[0,d],Ft(r,0),u,l]}let p=!0,h=0;const f=new Array(c).fill(0);for(let g=0;g<i;++g){const t=e[g*d];if(t<0)throw new Error(Om(g,t));if(t>=c)throw new Error(Fm(g,t,c));++f[t],p=p&&t>=h,h=t}let m=!0;for(let g=0;g<c;++g){const e=0===f[g];u[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){const t=e,n=a;for(let e=0;e<i;++e)l[e]=e;return[t,[i,d],n,u,l]}{const t=f[c-1],o=Ft(n,t*d),p=Ft(r,t),h=new Array(c).fill(0);for(let n=0;n<i;++n){const t=e[n*d],r=h[t],s=(0===t?0:f[t-1])+r;h[t]++;for(let a=0;a<d;++a)o[s*d+a]=e[n*d+a];p[s]=a[n],l[n]=s}for(let e=0;e<c;++e){if(0===h[e]){const t=0===e?0:f[e-1];o[t*d+0]=e;for(let e=1;e<d;++e)o[t*d+e]=0;p[t]=s}}return[o,[t,d],p,u,l]}}function Cb(e,t,n,a,r){const o=kt(a),s=t[0],i=r.length,c=[];let u=1,l=-1;for(let m=0;m<i;++m){const e=r[m];if(-1===e){if(-1!==l)throw new Error(Dm(l,m));l=m,c.push(1)}else{if(e<0)throw new Error(Mm(m,e));u*=e,c.push(e)}}if(-1!==l){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(o/u);if(u*e!==o)throw new Error(Lm(a,c));c[l]=e}if(kt(c)!==o)throw new Error(zm(a,c));const d=a.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*a[e+1]}const h=[];if(i>0){h[i-1]=1;for(let e=i-2;e>=0;--e)h[e]=h[e+1]*c[e+1]}const f=Ft(n,s*i);for(let m=0;m<s;++m){let t=0;for(let n=0;n<d;++n)t+=e[m*d+n]*p[n];for(let e=0;e<i;++e)f[m*i+e]=Math.trunc(t/h[e]),t%=h[e]}return[f,[s,i],c]}function Ib(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const i=a.length,c=[t[0],e.length/t[0]],u=c[1],l=i>0?r[i-1]+1:0;if(l<0)throw new Error("segment ids must be >= 0");const d=t.slice();d[0]=l;const p=Ft(n,d.reduce(((e,t)=>e*t),1));if(0===i)return l>0&&p.fill(s),[p,d];if(l<=0)throw new Error("segment ids must be >= 0");let h=0,f=1,m=0,g=r[h];for(;;){let t=0;if(f<i){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=l)throw new Error(Um(g,l));g>m&&p.fill(s,m*u,g*u);for(let n=h;n<f;++n){const t=a[n];if(t<0||t>=c[0])throw new Error(Vm(n,a[n],c[0]));for(let n=0;n<u;n++)p[g*u+n]+=e[t*u+n]}if(o)for(let e=0;e<u;e++)p[g*u+e]/=f-h;if(h=f,++f,m=g+1,g=t,f>i)break}return m<l&&p.fill(s,m*u,l*u),[p,d]}const Nb=Dy((e=>Math.sqrt(e))),_b=(My(Pr,(e=>Math.sqrt(e))),Dy(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})));Py(Xr,_b);function Tb(e,t,n,a){const r=nc(e,t.dtype);for(let o=0;o<r.size;o++){const e=r.indexToLoc(o),s=new Array(e.length);for(let t=0;t<s.length;t++)s[t]=e[t]*n[t]+a[t];r.set(t.get(...s),...e)}return r}class Eb{constructor(e,t,n,a,r,o){this.separator=Ho(e),this.nGramWidths=t,this.leftPad=Ho(n),this.rightPad=Ho(a),this.padWidth=r,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,o){for(let s=0;s<r;++s){const i=this.getPadWidth(o),c=Math.max(0,i-s),u=Math.max(0,i-(r-(s+1))),l=o-(c+u),d=t+(c>0?0:s-i);let p=0;p+=c*this.leftPad.length;for(let t=0;t<l;++t)p+=e[d+t].length;p+=u*this.rightPad.length;p+=(c+u+l-1)*this.separator.length,n[a+s]=new Uint8Array(p);const h=n[a+s];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<c;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[d+t]),m(this.separator);if(l>0){m(e[d+l-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=a-1,o=Ft("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)o[t]=0;return[e,o]}o[0]=0;for(let i=1;i<=r;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),o[i]=o[i-1]+n}const s=new Array(o[r]);for(let i=0;i<r;++i){const n=t[i];let a=o[i];if(this.nGramWidths.forEach((r=>{const o=t[i+1]-t[i],c=this.getNumNGrams(o,r);this.createNGrams(e,n,s,a,c,r),a+=c})),this.preserveShort&&a===o[i]){const r=t[i+1]-t[i];if(0===r)continue;const o=r+2*this.padWidth,c=1;this.createNGrams(e,n,s,a,c,o)}}return[s,o]}}function Rb(e,t,n,a,r,o,s,i){return new Eb(n,a,r,o,s,i).compute(e,t)}function Ab(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let o=e.indexOf(r);for(;-1!==o;){const t=e.subarray(0,o);n&&0===t.length||a.push(t),o=(e=e.subarray(o+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let o=0;o<e.length+1;o++)if(o===e.length||-1!==t.indexOf(e[o])){const t=e.subarray(r,o);n&&0===t.length||a.push(t),r=o+1}}function Ob(e,t,n){const a=e.length,r=[];let o=0,s=0;const i=new Array(a);for(let p=0;p<a;++p){const a=r.length;Ab(e[p],t,n,r);const c=r.length-a;i[p]=c,o+=c,s=Math.max(s,c)}const c=Ft("int32",2*o),u=new Array(o),l=[a,s];let d=0;for(let p=0;p<a;++p)for(let e=0;e<i[p];++e)c[2*d]=p,c[2*d+1]=e,u[d]=r[d],++d;return[c,u,l]}function Fb(e,t){const n=Ft("int32",e.length);for(let a=0;a<e.length;++a)n[a]=Wo(e[a]).modulo(t).getLowBitsUnsigned();return n}const Db=vy(((e,t)=>e-t)),Mb=Ty(((e,t,n,a)=>({real:e-n,imag:t-a})));_y(Jr,Db,Mb);function Pb(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=nc(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const o=e.locToIndex(n);a.values[r]=e.values[o]}return a}const Lb=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function zb(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,o=t-n+1,s=Math.log(r),i=.5*Math.exp(2*s/3),c=.5*Math.sqrt(s*i*(r-i)/r)*Math.sign(o-r/2);zb(e,t,Math.max(n,Math.floor(t-o*i/r+c)),Math.min(a,Math.floor(t+(r-o)*i/r+c)))}const r=e[t];let o=n,s=a;for(yt(e,n,t),Lb(e[a],r)>0&&yt(e,n,a);o<s;){for(yt(e,o,s),o++,s--;Lb(e[o],r)<0;)o+=1;for(;Lb(e[s],r)>0;)s-=1}0===Lb(e[n],r)?yt(e,n,s):(s+=1,yt(e,s,a)),s<=t&&(n=s+1),t<=s&&(a=s-1)}}function Bb(e,t,n,a,r){const o=t[t.length-1],[s,i]=[e.length/o,o],c=Ot(n,s*a),u=Ot("int32",s*a);for(let d=0;d<s;d++){const t=d*i,n=e.subarray(t,t+i);let o=new Array(n.length);n.forEach(((e,t)=>o[t]={value:e,index:t})),a<o.length&&(zb(o,a),o=o.slice(0,a)),r&&o.sort(Lb);const s=d*a,l=c.subarray(s,s+a),p=u.subarray(s,s+a);for(let e=0;e<a;e++)l[e]=o[e].value,p[e]=o[e].index}const l=t.slice();return l[l.length-1]=a,[nc(l,n,c),nc(l,"int32",u)]}function Wb(e,t,n,a){const r=Rt(t,n)[0],o=[1,n[0],1];for(let f=0;f<r;f++)o[0]*=n[f];o[1]=n[r];for(let f=r+1;f<n.length;f++)o[2]*=n[f];const s=new Map,i=new Int32Array(n[r]),c=new os(o,a,e),u=[],l=1===o[0]&&1===o[2];for(let f=0;f<n[r];f++){let t;if(l)t=e[f].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let n=0;n<o[2];n++)e.push(c.get(t,f,n));t=e.join(",")}const n=s.get(t);if(null!=n)i[f]=n;else{const e=s.size;s.set(t,e),i[f]=e,u.push(f)}}const d=o.slice();d[1]=s.size;const p=new os(d,a);u.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let a=0;a<o[2];a++)p.set(c.get(n,e,a),n,t,a)}));const h=n.slice();return h[r]=d[1],{outputValues:p.values,outputShape:h,indices:i}}const{mx:Ub,XI:Vb,Nk:Gb,f6:Hb,ct:jb,YG:Kb,hH:qb,z3:Xb,sG:Yb,uM:Qb,vS:Zb,qB:$b,GG:Jb,rq:ex,lg:tx,WR:nx,cu:ax,GE:rx,px:ox,jC:sx,He:ix,hE:cx,BF:ux,Dk:lx,cl:dx,_B:px,ub:hx,_f:fx,Ku:mx,qy:gx,Zy:yx,bu:bx,zv:xx,dH:vx,HS:wx,yH:kx,l3:Sx,z9:Cx,x6:Ix,_m:Nx,eW:_x,GK:Tx,SP:Ex,yr:Rx,dl:Ax,Dw:Ox,xT:Fx,_X:Dx,wz:Mx}=s;function Px(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function Lx(e,t){return 1===t?[e]:Px(e,t)}class zx{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Jg(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Lx("rc",this.rank),t=Kg(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class Bx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Jg(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?Fg(["r","c","d"],"inputShape"):Ag(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Dg(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class Wx{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=Vx(t,n),r=Gx(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const o=Ux(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let s;return a===Jm.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===Jm.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===Jm.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===Jm.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===Jm.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(s),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),s}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=Vx(n,a),o=Gx(t,r,a);o in this.freeTextures||(this.freeTextures[o]=[]);const s=Ux(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=Jt().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;const c=this.usedTextures[o],u=c&&c.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[u]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Ux(e,t,n,a,r){const o=function(e,t){switch(e){case Jm.PACKED_2X2_FLOAT32:return fy(t);case Jm.PACKED_2X2_FLOAT16:return my(t);case Jm.UNPACKED_FLOAT32:return dy(t);case Jm.UNPACKED_FLOAT16:return py(t);case Jm.PACKED_4X1_UNSIGNED_BYTE:return hy(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let s;if(r){const[t,n]=ng(e[0],e[1]);s=t*n}else{const[t,n]=eg(e[0],e[1]);s=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,o);return s*i}function Vx(e,t){if(e===$m.UPLOAD)return Jm.PACKED_2X2_FLOAT32;if(e===$m.RENDER||null==e)return function(e){return Jt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Jm.PACKED_2X2_FLOAT32:Jm.UNPACKED_FLOAT32:e?Jm.PACKED_2X2_FLOAT16:Jm.UNPACKED_FLOAT16}(t);if(e===$m.DOWNLOAD||e===$m.PIXELS)return Jm.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function Gx(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class Hx{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Jg(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const jx="if (isnan(x)) return x;",Kx="return x;",qx="return abs(x);";const Xx="return (x >= 0.0) ? x : (exp(x) - 1.0);",Yx=jx+"\n  return (x < 0.0) ? 0.0 : x;\n",Qx=jx+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Zx="return x;",$x="return 1.0 / (1.0 + exp(-1.0 * x));",Jx="return x;",ev="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",tv="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",nv="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",av="return 1.0 / (1.0 + exp(-1.0 * x));";class rv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Jg(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class ov{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Jg(this.outputShape.length);const t=e.length,n=Lx("rc",t),a=Kg(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),o=n.slice(-2),s=t<=1?"rc":"vec2(".concat(o.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(s,"));\n      }\n    ")}}const sv=bh,iv={};const cv=Jt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class uv extends ht{nextDataId(){return uv.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Jt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof yy)t=e;else{const n=Qm(Jt().getNumber("WEBGL_VERSION"),e);t=new yy(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=Qm(Jt().getNumber("WEBGL_VERSION"));t=new yy(e),this.binaryCache=((n=Jt().getNumber("WEBGL_VERSION"))in iv||(iv[n]={}),iv[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Wx(this.gpgpu),this.numMBBeforeWarning=null==Jt().global.screen?1024:Jt().global.screen.height*Jt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new pt(this,qs())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,o){const s=this.makeTensorInfo(t,n),i=this.texData.get(s.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const c=xg(t),u=new oy(c,!1,o),l=this.runWebGLProgram(u,[s],n,[[a,r]]);return l.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(s),l.dataId}write(e,t,n){if((Jt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Jt().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:$m.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if(Jt().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:$m.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:o,shape:s,isPacked:i}=t;if(null!=o){let t;t=i?new rv(s,Zx):new Hx(s,Zx);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const c=null!=this.activeTimers;let u,l;if(c&&(u=Go()),"complex64"===a){l=pm(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else l=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Go()-u),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:o,complexTensorInfos:s,isPacked:i}=t;if(null!=r){let t;t=i?new rv(a,Zx):new Hx(a,Zx);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:o}],o),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(Jt().getBool("DEBUG")&&!Jt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Jt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,u,l=null;if("complex64"!==o&&Jt().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(t.texture.texture,...tg(a))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]);u=pm(e[0],e[1])}else if(null==l)u=this.getValuesFromTexture(e);else{const e=kt(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=l){const e=this.gpgpu.gl;rg(e,(()=>e.deleteBuffer(l)))}const d=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&qs().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:o,dtype:s,isPacked:i,texture:c}=n;if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=i?new rv(r,Zx):new Hx(r,Zx);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:s}],s),o=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),o}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),l=qs().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:l},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>jo(e)));return nc(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return nc(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!og(n)){if(Jt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=kt(t);if(Jt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...tg(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),o}const o=Jt().getBool("WEBGL_PACK")&&!0===a,s=o?xg(t):t,i=o?new ay(s):new ny(s),c=this.runWebGLProgram(i,[{shape:s,dtype:n,dataId:e}],"float32"),u=this.texData.get(c.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),l}timerAvailable(){return Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=qo(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=qo(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);s.kernelMs=bt(e),s.getExtraProfileInfo=()=>e.map(((e,t)=>({name:o[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Go(),endMs:null}}endTimer(e){return Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Go(),e)}async getQueryTime(e){if(Jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:o,slice:s}=this.texData.get(e),i=s&&s.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,o)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:cv;return Jt().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&kt(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){yo("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return sv(e.shape,t)}packedUnaryOp(e,t,n){const a=new rv(e.shape,t),r=this.compileAndRun(a,[e],n);return qs().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=vx(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Jt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,qx,e.dtype);const t=new Hx(e.shape,qx),n=this.compileAndRun(t,[e]);return qs().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&Pt(n[0])){const r=n.map((e=>Ho(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return qs().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new ov(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new zx(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[yg(e.shape),...bg(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[yg(t),...bg(t)],o=new Bx(r,n),s=[n],i=this.runWebGLProgram(o,[a],e.dtype,s,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:o}=n;if(null!=t){xt(kt(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const s=xg(r);let i;i=a?new ty(s):new ey(s);const c=[null!=t?t:tg(s)];return{dtype:o,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:o,dataId:e}],o,c,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5?arguments[5]:void 0;const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===Zm.DENSE){const t=null!=o?o:tg(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===kt(s.shape))return i.values=Ot(s.dtype,0),s;const c=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&kt(t.shape)<=Jt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!wg(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),c.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},d=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:s,uniformShape:i,keptDims:c}=qg(e.packedInputs,t.shape,o);let u="",l="",d="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];u="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=Wt(i);d="".concat(e[0]===o[1],"_").concat(e[e.length-1]===o[1])}}else l="".concat(i[0]>1,"_").concat(i[1]>1);const p=t.shape.length,h=2===i.length&&Ct(t.shape,o),f=1===kt(t.shape),m=Ic(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&Ct(o,n.texData.texShape),y=e.packedInputs||i.length>2?"":"".concat(o[0]>1,"_").concat(o[1]>1);a+="".concat(p,"_").concat(g,"_").concat(s?c:"","_").concat(i.length,"_").concat(f,"_").concat(m,"_").concat(h,"_").concat(u,"_").concat(l,"_").concat(d,"_").concat(y,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let o=e.constructor.name;return o+="_"+a+"_"+r+"".concat(Jt().getNumber("WEBGL_VERSION")),o}(e,u,l),p=this.getAndSaveBinary(d,(()=>Qg(this.gpgpu,e,u,l))),h=null!=this.activeTimers;let f;h&&(f=this.startTimer()),Jt().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||($g(t.inShapeInfos,n),$g([t.outShapeInfo],[a]));const o=a.texData.texture,s=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,s[0],s[1]):e.setOutputMatrixTexture(o.texture,s[0],s[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Jt().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let c=0;c<n.length;++c){const a=n[c],{uniform:r,offset:o,shape:s,texShape:i}=t.variablesLocations[c];if(s){const{uniformShape:n}=qg(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(s,new Int32Array(n));break;case 2:e.gl.uniform2iv(s,new Int32Array(n));break;case 3:e.gl.uniform3iv(s,new Int32Array(n));break;case 4:e.gl.uniform4iv(s,new Int32Array(n))}}if(i&&e.gl.uniform2i(i,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(kt(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=o&&e.gl.uniform1i(o,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,c)}const i=t.outShapeLocation;if(i)switch(a.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=Wt(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let c=0;c<t.program.customUniforms.length;++c){const n=t.program.customUniforms[c],a=t.customUniformLocations[c],o=r[c];if("float"===n.type)e.gl.uniform1fv(a,o);else if("vec2"===n.type)e.gl.uniform2fv(a,o);else if("vec3"===n.type)e.gl.uniform3fv(a,o);else if("vec4"===n.type)e.gl.uniform4fv(a,o);else if("int"===n.type)e.gl.uniform1iv(a,o);else if("ivec2"===n.type)e.gl.uniform2iv(a,o);else if("ivec3"===n.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,o)}}e.executeProgram()}(this.gpgpu,p,u,l,a),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Jt().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Go();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Jt().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Jt().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Xs((()=>{if(!Jt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Jt().getBool("DEBUG");Jt().set("DEBUG",!1);const t=this.abs(fc(1e-8)).dataSync()[0];if(Jt().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:o,usage:s,isPacked:i}=t;if(null!=o)return;const c=null!=this.activeTimers;let u;c&&(u=Go());let l=t.texShape;if(null==l&&(l=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Jt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=Jt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&Jt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?gt(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=At(e);e=t.newShape}let r=kt(e),o=null;e.length<=1&&r<=n?o=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?o=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?o=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?o=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?o=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(o=[e[0],e[1]*e[2]*e[3]]);const s=null!=o&&Math.max(...o)>a&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(null==o||s)if(t){const t=yg(e);let n=2,a=2;e.length&&([n,a]=bg(e)),r=t*(n/2)*(a/2),o=Nt(r).map((e=>2*e))}else o=Nt(r);return o}(n,i),t.texShape=l),null!=r){const e=xg(n);let o,s=l[1],d=l[0];const p=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!i&&p||([s,d]=ng(l[0],l[1])),o=i?new sy(e,p):new oy(e,p);const h=p?[d,s]:l,f=this.makeTensorInfo(h,a),m=this.texData.get(f.dataId);m.usage=p?$m.PIXELS:$m.UPLOAD,m.texShape=h,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),s,d,r);const g=[[d,s]],y=!0,b=this.runWebGLProgram(o,[f],a,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Jt().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),c&&(this.uploadWaitMs+=Go()-u)}else{const e=this.acquireTexture(l,s,a,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*Mt(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await new Promise((e=>Vf((()=>e())))),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw cg(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:o,outShapeStridesLocation:s,outTexShapeLocation:i}=Zg(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=o,e.outShapeStridesLocation=s,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:o,channels:s}=e,i=qs().backend;if(!i.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=i.writeTexture(a,t,n,r,o,s);return qs().makeTensorFromDataId(c,t,n,i)}}uv.nextDataId=0,Fs()&&$s("webgl",(()=>new uv),2);const lv="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class dv{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=_c(t,n),this.enableShapeUniforms=Jg(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const pv="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class hv{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=_c(t,n);const r=this.outputShape.length;this.enableShapeUniforms=Jg(r);let o="";if(a)if(0===r||1===kt(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=Kg(r);if(o="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=Lx("coords",r);this.enableShapeUniforms?o+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):o+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(o,"\n\n        setOutput(result);\n      }\n    ")}}function fv(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const mv={kernelName:va,backendName:"webgl",kernelFunc:fv};function gv(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,o=n.makeTensorInfo(a.shape,"complex64"),s=n.texData.get(o.dataId),i=fv({inputs:{x:a},backend:n}),c=fv({inputs:{x:r},backend:n});return s.complexTensorInfos={real:i,imag:c},o}const yv={kernelName:An,backendName:"webgl",kernelFunc:gv},bv="return (a < 0.) ? b * a : a;",xv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const vv={kernelName:Na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:o}=a,s=n.makeTensorInfo([],"float32",Uo(o,"float32")),i=Jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hv(xv,r.shape,s.shape):new dv(bv,r.shape,s.shape),c=n.runWebGLProgram(i,[r,s],"float32");return n.disposeIntermediateTensorInfo(s),c}},wv="return (a < 0.) ? b * a : a;",kv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Sv={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,o=Jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hv(kv,a.shape,r.shape):new dv(wv,a.shape,r.shape);return n.runWebGLProgram(o,[a,r],"float32")}},Cv="if (isnan(x)) return x;";function Iv(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:o,backend:s}=e;const{x:i}=o,c=s,u=r||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=a){const e=c.texData.get(i.dataId),t=a(e.values,u);return c.makeTensorInfo(i.shape,u,t)}let l;return l=Jt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new rv(i.shape,n):new Hx(i.shape,t),c.runWebGLProgram(l,[i],u)}}function Nv(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:o,dtype:s}=e;return e=>{let{inputs:i,backend:c}=e;const{a:u,b:l}=i,d=c;if(r&&"complex64"===u.dtype){const e=d.texData.get(u.dataId),n=d.texData.get(l.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},o={dataId:a.dataId,dtype:a.dtype,shape:l.shape},s=new dv(t,u.shape,l.shape);return d.runWebGLProgram(s,[r,o],bs(n.dtype,a.dtype))})),o=gv({inputs:{real:a,imag:r},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(r),o}const p=s||bs(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||d.shouldExecuteOnCPU([u,l]))&&null!=o){const e=d.texData.get(u.dataId).values,t=d.texData.get(l.dataId).values,n="string"===u.dtype?Km(e):e,a="string"===u.dtype?Km(t):t,[r,s]=o(u.shape,l.shape,n,a,p),i=d.makeTensorInfo(s,p);return d.texData.get(i.dataId).values=r,i}let h;return h=Jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new hv(n,u.shape,l.shape,a):new dv(t,u.shape,l.shape),d.runWebGLProgram(h,[u,l],p)}}function _v(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?Jx:Kx;if("relu"===e)return t?tv:Yx;if("elu"===e)return t?ev:Xx;if("relu6"===e)return t?nv:Qx;if("prelu"===e)return t?kv:wv;if("leakyrelu"===e)return t?xv:bv;if("sigmoid"===e)return t?av:$x;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class Tv{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Jg(this.outputShape.length);const u=a?e[1]:e[2],l=Math.ceil(u/2),d=a?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";s&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(s,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(s,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(s,"\n        }"),g="result = activation(result);");const y=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(x="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(l,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(x,";\n        for (int i = 0; i < ").concat(l,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(p,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(h[0]," * ").concat(f[0],");\n          result += (").concat(h[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const Ev={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Rv{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=_c(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const Av="return a * b;";function Ov(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,o=bs(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),o=new Rv(Ev.REAL,a.shape,r.shape),s=new Rv(Ev.IMAG,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(o,i,"float32"),u=n.runWebGLProgram(s,i,"float32"),l=gv({inputs:{real:c,imag:u},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),l}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[s,i]=ux(a.shape,r.shape,e.values,t.values,o),c=n.makeTensorInfo(i,o);return n.texData.get(c.dataId).values=s,c}let s;return s=Jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hv(Av,a.shape,r.shape):new dv(Av,a.shape,r.shape),n.runWebGLProgram(s,[a,r],o)}const Fv={kernelName:Qa,backendName:"webgl",kernelFunc:Ov};function Dv(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:o}=a,s=n,i=kt(r.shape),c=Et(o,i),u=kt(c);xt(i===u,(()=>"The new shape (".concat(c,") has ").concat(u," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const l=s.texData.get(r.dataId);return!l.isPacked||wg(r.shape,c)||null!==l.texture&&wg(l.shape,c)?(s.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype}):function(e,t,n){const a=[yg(e.shape),...bg(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},o=[yg(t),...bg(t)],s=new Bx(o,a),i=[a],c=n.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(r,c,s)}const Mv={kernelName:gr,backendName:"webgl",kernelFunc:Dv};class Pv{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:o}=e;this.outputShape=[a,o];const s=4*Math.floor(n/4),i=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c="sumValue += dot(values * ".concat(It(e)?e.toPrecision(2):e,", ones);")}let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(s,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(s,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class Lv{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:o}=e;this.outputShape=[a,o];let s="0.0",i="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",i="min"):"max"===t&&(s="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const u=4*Math.floor(n/4),l=n%4;let d="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),p="vec4";"all"===t?(s="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(s="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";r%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(s,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(h,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(s,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(u,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(u,";\n        if (").concat(1===l,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===l,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===l,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function zv(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=Zf(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let o=e;for(let s=0;s<r.length;s++){const{inSize:i,windowSize:c,outSize:u}=r[s];let l,d;l="mean"===n?0===s?new Pv({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u},i):new Pv({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u}):new Lv({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u},n),d=o,o=a.runWebGLProgram(l,[o],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return o}class Bv{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.rank=n.length;const a=Kg(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class Wv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=Kg(this.rank),r=Px("rc",this.rank),o=new Array(this.rank);for(let u=0;u<t.length;u++)o[t[u]]=r[u];const s="vec2(".concat(o.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(o.join(),"), ").concat(s,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function Uv(e,t,n){const a=Jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Wv(e.shape,t):new Bv(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function Vv(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;return function(e,t,n,a){const r=t,o=e.shape.length,s=Rt(r,e.shape);let i=s;const c=Jl(i,o),u=null!=c;let l=e;u&&(l=Uv(e,c,a),i=td(i.length,o)),$l("sum",i,o);const[d,p]=Ql(l.shape,i);let h=d;n&&(h=Zl(d,s));const f=kt(p),m=Dv({inputs:{x:l},attrs:{shape:[kt(e.shape)/f,f]},backend:a}),g=zv(m,xs(e.dtype),"sum",a),y=Dv({inputs:{x:g},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),u&&a.disposeIntermediateTensorInfo(l),y}(r,o,s,n)}const Gv={kernelName:Lr,backendName:"webgl",kernelFunc:Vv};function Hv(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:o}=a,s=n,i=r.shape.length,c=new Array(i);for(let l=0;l<c.length;l++)c[l]=r.shape[o[l]];let u;if(s.shouldExecuteOnCPU([r])){const e=s.texData.get(r.dataId).values,t=Dx(e,r.shape,r.dtype,o,c);u=s.makeTensorInfo(c,r.dtype);s.texData.get(u.dataId).values=t}else u=Uv(r,o,s);return u}const jv={kernelName:oo,backendName:"webgl",kernelFunc:Hv},Kv=1e3;function qv(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:u=null}=e;const l=t.shape.length,d=n.shape.length,p=a?t.shape[l-2]:t.shape[l-1],h=r?n.shape[d-1]:n.shape[d-2],f=a?t.shape[l-1]:t.shape[l-2],m=r?n.shape[d-2]:n.shape[d-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=kt(g),x=kt(y),v=_c(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);xt(p===h,(()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(h,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,p,f]:[b,f,p],k=r?[x,m,h]:[x,h,m],S=Dv({inputs:{x:t},backend:o,attrs:{shape:w}}),C=Dv({inputs:{x:n},backend:o,attrs:{shape:k}}),I=[S,C],N=Math.max(b,x),_=a?S.shape[1]:S.shape[2],T=null!=s,E=null!=i,R="leakyrelu"===u,A=null!=u?_v(u,!0):null;let O;if((1===f||1===m)&&_>Kv&&!1===(T||E||R||null!=A)){let e=S,t=C;a&&(e=Hv({inputs:{x:S},backend:o,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=Hv({inputs:{x:C},backend:o,attrs:{perm:[0,2,1]}}),I.push(t));const n=1===m;let s=e;1!==m&&(s=Dv({inputs:{x:e},backend:o,attrs:{shape:[N,_,1]}}),I.push(s));const i=1===m?2:1;let c=t;n&&(c=Dv({inputs:{x:t},backend:o,attrs:{shape:[N,1,_]}}),I.push(c));const u=Ov({inputs:{a:s,b:c},backend:o});O=Vv({inputs:{x:u},backend:o,attrs:{axis:i,keepDims:!0}}),I.push(u)}else{const e=bs(t.dtype,n.dtype),u=new Tv(w,k,[N,f,m],a,r,T,A,E,R),l=[S,C];if(null!=s&&l.push(s),E&&l.push(i),R){const e=o.makeTensorInfo([],"float32",Uo(c,"float32"));l.push(e),I.push(e)}O=o.runWebGLProgram(u,l,e)}const F=Dv({inputs:{x:O},backend:o,attrs:{shape:v}});I.push(O);for(const D of I)o.disposeIntermediateTensorInfo(D);return F}const Xv={kernelName:fo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=a;return qv({a:r,b:o,transposeA:c,transposeB:u,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}},Yv="return abs(x);";const Qv={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=vx(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=Jt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new rv(a.shape,Yv):new Hx(a.shape,Yv),n.runWebGLProgram(r,[a],a.dtype)}},Zv=Iv({opSnippet:jx+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),$v={kernelName:on,backendName:"webgl",kernelFunc:Zv},Jv=Iv({opSnippet:jx+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),ew={kernelName:sn,backendName:"webgl",kernelFunc:Jv},tw="return a + b;",nw=Nv({opSnippet:tw,packedOpSnippet:tw,supportsComplex:!0,cpuKernelImpl:Ub}),aw={kernelName:cn,backendName:"webgl",kernelFunc:nw};class rw{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class ow{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const sw={kernelName:un,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return fv({inputs:{x:r[0]},backend:a});if(r.length>Jt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),o=e({inputs:r.slice(t),backend:a});return e({inputs:[n,o],backend:a})}const o=r.map((e=>e.dtype)).reduce(((e,t)=>bs(e,t))),s=r.map((e=>e.shape)),i=Jt().getBool("WEBGL_PACK")?new ow(r[0].shape,s):new rw(r[0].shape,s);return a.runWebGLProgram(i,r,o)}};const iw={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a,i=r.shape.length,c=Rt(o,r.shape);let u=c;const l=Jl(u,i);let d=r;null!=l&&(d=Hv({inputs:{x:r},backend:n,attrs:{perm:l}}),u=td(u.length,i)),$l("all",u,i);const[p,h]=Ql(d.shape,u),f=Dv({inputs:{x:d},backend:n,attrs:{shape:[-1,kt(h)]}}),m=zv(f,f.dtype,"all",n);let g;if(s){g=Dv({inputs:{x:m},backend:n,attrs:{shape:Zl(p,c)}})}else g=Dv({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(d),g}};const cw={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a,i=r.shape.length,c=Rt(o,r.shape);let u=c;const l=Jl(u,i);let d=r;null!=l&&(d=Hv({inputs:{x:r},backend:n,attrs:{perm:l}}),u=td(u.length,i)),$l("any",u,i);const[p,h]=Ql(d.shape,u),f=Dv({inputs:{x:d},backend:n,attrs:{shape:[-1,kt(h)]}}),m=zv(f,f.dtype,"any",n);let g;if(s){g=Dv({inputs:{x:m},backend:n,attrs:{shape:Zl(p,c)}})}else g=Dv({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(d),g}};class uw{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:o}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,o];const s="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(s," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class lw{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,xt(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],o=Math.ceil(r/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),a||this.variableNames.push("bestIndicesA");const s=this.outputShape,i=s.length,c=Kg(i),u=Lx("coords",i);let l,d;if(1===o){d=i+1;const e=Kg(d);l="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[i-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[i-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[i-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[i-2],";")}else d=i,l="\n        ".concat(c," sourceLocR = coords;\n        ++").concat(u[i-1],";\n        ").concat(c," sourceLocG = coords;\n        ++").concat(u[i-2],";\n        ").concat(c," sourceLocA = coords;\n        --").concat(u[i-1],";\n        ").concat(c," sourceLocB = coords;\n        --").concat(u[i-2],";");const p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map((e=>"int "+e)),m=Lx("sourceLocR",d-1).concat("inIdx.r"),g=Lx("sourceLocG",d-1).concat("inIdx.g"),y=Lx("sourceLocB",d-1).concat("inIdx.b"),b=Lx("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),")));"),w="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(b.join(),") : 0.)"),k=a?"":"\n      float getBestIndicesAChannel(".concat(f.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(f.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(k,"\n      void main() {\n        ").concat(c," coords = getOutputCoords();\n        bool hasNextCol = ").concat(u[i-1]," < ").concat(s[i-1]-1,";\n        bool hasNextRow = ").concat(u[i-2]," < ").concat(s[i-2]-1,";\n        ").concat(l,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(h,", sourceLocG").concat(h,",\n          sourceLocB").concat(h,", sourceLocA").concat(h,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(v,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function dw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],o=t.shape[1];null!=a&&(r=a.shape[0],o=a.shape[1]);const s=Zf(o),i={windowSize:s,inSize:o,batchSize:r,outSize:Math.ceil(o/s)},c=new uw(i,n,null==a),u=[t];null!=a&&u.push(a);const l=e.runWebGLProgram(c,u,"int32");if(1===l.shape[1])return l;const d=dw(e,t,n,l);return e.disposeIntermediateTensorInfo(l),d}function pw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,o=Zf(r[r.length-1]),s=new lw(r,o,n,null==a),i=null==a?[t]:[t,a],c=e.runWebGLProgram(s,i,"int32");if(c.shape.length===t.shape.length){const a=pw(e,t,n,c);return e.disposeIntermediateTensorInfo(c),a}return c}function hw(e,t,n,a){const r=[n];if($l("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!Jt().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],o=e.texData.get(t.dataId);let s=t;null!==o&&o.isPacked&&(s=e.unpackTensor(t),n.push(s));const[i,c]=Ql(s.shape,r),u=kt(c),l=Dv({inputs:{x:s},backend:e,attrs:{shape:[-1,u]}});n.push(l);const d=dw(e,l,a);n.push(d);const p=Dv({inputs:{x:d},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return pw(e,t,a)}const fw={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;let s=Rt(o,r.shape);const i=Jl(s,r.shape.length);let c=r;const u=[];null!=i&&(c=Hv({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(c),s=td(s.length,c.shape.length)),$l("argMax",[s[0]],c.shape.length);const l=hw(n,c,s[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};const mw={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;let s=Rt(o,r.shape);const i=Jl(s,r.shape.length);let c=r;const u=[];null!=i&&(c=Hv({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(c),s=td(s.length,c.shape.length)),$l("argMin",[s[0]],c.shape.length);const l=hw(n,c,s[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},gw=Iv({opSnippet:jx+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),yw={kernelName:fn,backendName:"webgl",kernelFunc:gw},bw=Iv({opSnippet:jx+"return log(x + sqrt(x * x + 1.0));"}),xw={kernelName:mn,backendName:"webgl",kernelFunc:bw},vw=Iv({opSnippet:jx+"\n  return atan(x);\n"}),ww={kernelName:gn,backendName:"webgl",kernelFunc:vw},kw=Nv({opSnippet:lv+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+pv+"\n  return result;\n"}),Sw={kernelName:bn,backendName:"webgl",kernelFunc:kw},Cw=Iv({opSnippet:jx+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Iw={kernelName:yn,backendName:"webgl",kernelFunc:Cw};class Nw{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(p,", ").concat(h,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(l,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(u,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(o/4),v=o%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(p,", ").concat(h,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(l,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(x,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              getValue(batch, xR, xC + 2 * ").concat(u,", d),\n              getValue(batch, xR, xC + 3 * ").concat(u,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(x,";\n          if (").concat(1===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              getValue(batch, xR, xC + 2 * ").concat(u,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class _w{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(p,";\n              wD += ").concat(u,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(h,";\n                wR += ").concat(l,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(h," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let v="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(o/4),k=o%4,S="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(x,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(x,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(p,";\n            wD += ").concat(u,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,";\n            wR += ").concat(l,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(S,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(S,"\n            }\n          }\n        }\n        setOutput(").concat(v,");\n      }\n    ")}}const Tw={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Tg(r,"avgPool");const{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;xt(Qu(s,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(1,"'")));const u=Wu(r.shape,o,s,1,i,c);if(1===u.filterWidth&&1===u.filterHeight&&Ct(u.inShape,u.outShape))return fv({inputs:{x:r},backend:n});const l=new Nw(u,"avg",!1);return n.runWebGLProgram(l,[r],"float32")}};const Ew={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c,dataFormat:u}=a,l=Uu(r.shape,o,s,[1,1,1],i,c,u),d=new _w(l,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}};class Rw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,o=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=i-1-e.padInfo.top,l=c-1-e.padInfo.left,d=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(u,", ").concat(l,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(o,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(s,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Aw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(h,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(l,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(p,";\n                wC += ").concat(u,") {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Ow={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=a,d=Uu(s.shape,i,c,[1,1,1],u,l),p=new Aw(d);return n.runWebGLProgram(p,[r],s.dtype)}};const Fw={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o;Tg([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:u}=a,l=Wu(s.shape,i,c,1,u),d=new Rw(l);return n.runWebGLProgram(d,[r],s.dtype)}};const Dw={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o}=t,{transposeA:s,transposeB:i}=a;return qv({a:r,b:o,transposeA:s,transposeB:i,backend:n})}};class Mw{constructor(e,t,n,a,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],_c(e,t),_c(e,n);let s="0.0";null!=a&&(_c(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let i="1.0";null!=r&&(_c(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(s,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(o,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class Pw{constructor(e,t,n,a,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],_c(e,t),_c(e,n);let s="vec4(0.0)";null!=a&&(_c(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=r&&(_c(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(s,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(o,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const Lw={kernelName:ma,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:o,variance:s,offset:i,scale:c}=t;xt(o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),xt(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),xt(null==c||o.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=a;null==u&&(u=.001);const l=[r,o,s];let d=null;null!=i&&(d=i.shape,l.push(i));let p=null;null!=c&&(p=c.shape,l.push(c));const h=Jt().getBool("WEBGL_PACK_NORMALIZATION")?new Pw(r.shape,o.shape,s.shape,d,p,u):new Mw(r.shape,o.shape,s.shape,d,p,u);return n.runWebGLProgram(h,l,l[0].dtype)}};class zw{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Kg(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Bw.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(Bw[t]," = start[").concat(t,"] + coords.").concat(Bw[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const Bw=["x","y","z","w","u","v"];class Ww{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Kg(this.rank),n=Lx("coords",this.rank),a=Lx("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),o="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),s="\n      result.x = ".concat(o,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(o,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(o,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(o,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(s,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function Uw(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,size:s}=a,[i,c]=Cu(r,o,s);if(lu(r,i,c),0===kt(c))return n.makeTensorInfo(c,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=wx(e.values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),l=ku(r.shape,i,c);if(u||!l){const e=Jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ww(c):new zw(c),t=[i];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),o=a.makeTensorInfo(n,e.dtype),s=a.texData.get(o.dataId);Object.assign(s,r),s.refCount=1,s.shape=n,s.dtype=e.dtype;let i=Su(t,Wt(e.shape));r.slice&&(i+=r.slice.flatOffset),s.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const c=a.dataRefCount.get(s.slice.origDataId)||1;return a.dataRefCount.set(s.slice.origDataId,c+1),o}(r,i,c,n)}const Vw={kernelName:Rr,backendName:"webgl",kernelFunc:Uw},Gw={kernelName:Cn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,crops:s}=a;xt(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=o.reduce(((e,t)=>e*t)),c=Jf(r.shape,o,i),u=em(c.length,o.length),l=tm(r.shape,o,i),d=nm(s,o.length),p=am(l,s,o.length),h=[],f=Dv({inputs:{x:r},backend:n,attrs:{shape:c}}),m=Hv({inputs:{x:f},backend:n,attrs:{perm:u}}),g=Dv({inputs:{x:m},backend:n,attrs:{shape:l}}),y=Uw({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const Hw={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s}=a,i=n.readSync(r.dataId),c=n.readSync(o.dataId),u=Vb(i,c,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,u)}};const jw={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,o=Jt().getBool("WEBGL_PACK_BINARY_OPERATIONS"),s=Jt().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===s){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[o,s]=Hb(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(s,a.dtype);return n.texData.get(i.dataId).values=o,i}let i;return i=o?new hv("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new dv("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(i,[a,r],a.dtype)}};const Kw={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,o=n.readSync(a.dataId),s=n.readSync(r.dataId),i=_c(Array.from(o),Array.from(s));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},qw=Nv({opSnippet:"return float(a != b);",cpuKernelImpl:dx,dtype:"bool"}),Xw={kernelName:$a,backendName:"webgl",kernelFunc:qw};function Yw(e){const{inputs:t,backend:n}=e,{input:a}=t;return fv({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const Qw={kernelName:hr,backendName:"webgl",kernelFunc:Yw},Zw="return float(int(x));";const $w={kernelName:Tn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:o}=n,{dtype:s}=r;if("complex64"===s){if("complex64"===o.dtype)return fv({inputs:{x:o},backend:a});const t=Hd(o.shape),n=e({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),r=gv({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===o.dtype){const t=Yw({inputs:{input:o},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(t),n}if(!Dt(o.dtype,s)){const e=fv({inputs:{x:o},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(a.shouldExecuteOnCPU([o])){const e=a.texData.get(o.dataId).values,[t,n,r]=jb(e,o.shape,o.dtype,s);return a.makeTensorInfo(t,n,r)}if("int32"===s)return function(e,t){const n=new Hx(e.shape,Zw),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(o,a);if("bool"===s){const e=a.makeTensorInfo([],"bool",Ot("bool",1)),t=qw({inputs:{a:o,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(s))}},Jw="return ceil(x);",ek=Iv({opSnippet:Jw,packedOpSnippet:Jw,cpuKernelImpl:Kb}),tk={kernelName:En,backendName:"webgl",kernelFunc:ek};class nk{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class ak{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const rk={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:o,clipValueMax:s}=a;let i;i=Jt().getBool("WEBGL_PACK_CLIP")?new ak(r.shape):new nk(r.shape);const c=[[o],[s]];return n.runWebGLProgram(i,[r],r.dtype,c)}};class ok{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function sk(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const ik={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),o=new ok(a.shape),s=[sk(a,r.complexTensorInfos.real),sk(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(o,s,s[0].dtype)}};class ck{constructor(e){this.outputShape=[],this.outputShape=Hf(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let o=1;o<t.length;o++){const e=t[o-1];n.push("else if (yC < ".concat(t[o],") ")+"setOutput(getT".concat(o,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class uk{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Hf(e,t);const n=this.outputShape,a=n.length,r=Kg(a),o=Lx("coords",a),s=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const c=s[t],u=s.slice(-2),l=s.join();let d="if (".concat(c," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(l,"), vec2(").concat(u.join(),"));\n        }");for(let f=1;f<i.length;f++){const e=i[f-1];d+="\n        if (".concat(c," < ").concat(i[f],"  && ").concat(c," >= ").concat(i[f-1],") {\n          return getChannel(\n            getT").concat(f,"(").concat(lk(s,c,e),"),\n            vec2(").concat(lk(u,c,e),"));\n        }")}const p=i.length,h=i[i.length-1];d+="\n        return getChannel(\n          getT".concat(p,"(").concat(lk(s,c,h),"),\n          vec2(").concat(lk(u,c,h),"));"),this.userCode="\n      float getValue(".concat(s.map((e=>"int "+e)),") {\n        ").concat(d,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(o,"), 0., 0., 0.);\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," + 1;\n        if (").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-2]," = ").concat(o[a-2]," + 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," - 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2]," &&\n            ").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(o,");\n        }\n        setOutput(result);\n      }\n    ")}}function lk(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function dk(e){const{inputs:t,backend:n}=e,{input:a}=t;return fv({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const pk={kernelName:ka,backendName:"webgl",kernelFunc:dk};function hk(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>Yw({inputs:{input:e},backend:n}))),r=e.map((e=>dk({inputs:{input:e},backend:n}))),o=hk(a,t,n),s=hk(r,t,n),i=gv({inputs:{real:o,imag:s},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(s),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=kt(e.shape.slice(t));return Dv({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),o=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=Hf(r.map((e=>e.shape)),1),i=1===r[0].shape[0],c=qb(o,s,a,i),u=Hf(e.map((e=>e.shape)),t),l=n.makeTensorInfo(u,a,c);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const o=e.filter((e=>kt(e.shape)>0)),s=Jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){const t=s?new Hx(e[0].shape,Zx):new rv(e[0].shape,Zx);return n.runWebGLProgram(t,e,a)}const i=Jt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const e=[];for(let r=0;r<o.length;r+=i){const a=o.slice(r,r+i);e.push(hk(a,t,n))}const a=hk(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(s){const e=new uk(o.map((e=>e.shape)),t);return n.runWebGLProgram(e,o,a)}const{tensors2D:c,outShape:u}=function(e,t,n){const a=Hf(e.map((e=>e.shape)),t),r=e.map((e=>Dv({inputs:{x:e},attrs:{shape:[-1,kt(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(o,t,n),l=new ck(c.map((e=>e.shape))),d=n.runWebGLProgram(l,c,a);c.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=Dv({inputs:{x:d},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(d),p}function fk(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,o=Rt(r,t[0].shape)[0];Gf(t.map((e=>e.shape)),o);const s=Hf(t.map((e=>e.shape)),o);if(0===kt(s))return n.makeTensorInfo(s,t[0].dtype,[]);const i=t.filter((e=>kt(e.shape)>0));return 1===i.length?fv({inputs:{x:i[0]},backend:n}):hk(i,o,n)}const mk={kernelName:Fn,backendName:"webgl",kernelFunc:fk};class gk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,s=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(x,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(o,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(u,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(p,"; wC++) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(h,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(h,") *\n                    getW(wR, wC, ").concat(h,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(h,", xR, xC) *\n                    getW(wR, wC, ").concat(h,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(h,", d2),\n                getW(wR, wC, ").concat(h," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(h,"),\n                  getX(batch, xR, xC, ").concat(h," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(h,", xR, xC),\n                  getX(batch, ").concat(h," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(h,", d2),\n                getW(wR, wC, ").concat(h," + 1, d2),\n                getW(wR, wC, ").concat(h," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(h,"),\n                  getX(batch, xR, xC, ").concat(h," + 1),\n                  getX(batch, xR, xC, ").concat(h," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(h,", xR, xC),\n                  getX(batch, ").concat(h," + 1, xR, xC),\n                  getX(batch, ").concat(h," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}class yk{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(o,", ").concat(s,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(l,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(p,"; wC++) {\n              int xC = xCCorner + wC * ").concat(u,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(h,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(h,") *\n                  getW(wF, wR, wC, ").concat(h,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(h,"),\n                  getX(batch, xF, xR, xC, ").concat(h," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(h,", d2),\n                  getW(wF, wR, wC, ").concat(h," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(h,"),\n                  getX(batch, xF, xR, xC, ").concat(h," + 1),\n                  getX(batch, xF, xR, xC, ").concat(h," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(h,", d2),\n                  getW(wF, wR, wC, ").concat(h," + 1, d2),\n                  getW(wF, wR, wC, ").concat(h," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class bk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Jg(this.outputShape.length);const o=e.padInfo.left,s=e.strideWidth,i=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,l=u;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<u;m++)d+="\n           vec4 xTexelC".concat(2*m,";\n           int xTexelC").concat(2*m,"Ready;\n           vec4 xTexelC").concat(2*m+1,";\n           int xTexelC").concat(2*m+1,"Ready;\n           vec4 xC").concat(m,";");d+="\n     for (int r = 0; r < ".concat(c,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let m=0;m<u;m++)d+="\n           xTexelC".concat(2*m," = vec4(0.0);\n           xTexelC").concat(2*m,"Ready = 0;\n           xTexelC").concat(2*m+1," = vec4(0.0);\n           xTexelC").concat(2*m+1,"Ready = 0;\n           xC").concat(m," = vec4(0.0);");d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(l+1)/2;m++){const t=2*m;if(d+="\n           xC = xCCorner + ".concat(t*i,";\n           "),1===s){if(t<u&&(o%2===1?(d+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),d+=1===i&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):d+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<u)){const e=o%2===0?gt(i):i;i%2===0&&o%2===1||i%2!==0&&o%2!==1?(d+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),d+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):d+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<u&&(o%2===1?(d+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<u&&(d+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(d+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<u&&(d+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<u&&(d+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<u&&(d+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",h="";n&&(p=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),h="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(p,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(d,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(f,"\n         ").concat(h,"\n         setOutput(result);\n       }\n     ")}}class xk{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Jg(this.outputShape.length);const{dataFormat:n}=t,a=Rg(),r="channelsLast"===n,o=r?1:2,s=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(u,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(o,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(s,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*u+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*u+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function vk(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function wk(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const u=t.shape,l=r.texData.get(t.dataId),d=a.inChannels,p=u[0]*u[1]*u[2],h=a.outChannels,f="channelsLast"===a.dataFormat,m=!1;let g;const y=[];if(null!=s){const e=vk(s.shape,f);null!=e&&(s=Dv({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(null!=o){const e=vk(o.shape,f);null!=e&&(o=Dv({inputs:{x:o},backend:r,attrs:{shape:e}}),y.push(o))}if(!((1===p||1===h)&&d>Kv)&&l.isPacked&&f&&null!=l.texture&&u[2]%2!==0&&Ct(l.shape.slice(-3),u.slice(-3))){const e=u[0]*u[1]*(u[2]+1),d={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,xt(wg(l.shape,d.shape),(()=>"packed reshape ".concat(l.shape," to ").concat(d.shape," isn't free")));const h=Dv({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(h);const f=qv({a:d,b:h,backend:r,transposeA:false,transposeB:m,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i}),b=r.texData.get(f.dataId);xt(b.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=p,b.shape=a.outShape,g=fv({inputs:{x:f},backend:r}),g.shape=a.outShape,y.push(f)}else{const e=a.outHeight*a.outWidth,u=Dv({inputs:{x:t},backend:r,attrs:{shape:f?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),l=Dv({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),d=qv({a:f?u:l,b:f?l:u,transposeA:!f,transposeB:m,backend:r,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i});g=Dv({inputs:{x:d},backend:r,attrs:{shape:a.outShape}}),y.push(u),y.push(l),y.push(d)}for(const b of y)r.disposeIntermediateTensorInfo(b);return g}function kk(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const{filterWidth:u,filterHeight:l,inChannels:d,outWidth:p,outHeight:h,dataFormat:f}=a,m="channelsLast"===f,g=u*l*d,y=h*p,b=[a.batchSize,g,y],x=[];if(null!=s){const e=vk(s.shape,m);null!=e&&(s=Dv({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}if(null!=o){const e=vk(o.shape,m);null!=e&&(o=Dv({inputs:{x:o},backend:r,attrs:{shape:e}}),x.push(o))}const v=Dv({inputs:{x:n},backend:r,attrs:{shape:[1,g,kt(n.shape)/g]}});x.push(v);const w=new xk(b,a),k=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],S=r.runWebGLProgram(w,[t],"float32",k),C=Dv({inputs:{x:S},backend:r,attrs:{shape:b}});x.push(S),x.push(C);const I=null!=o,N=null!=s,_="leakyrelu"===c,T=c?_v(c,!0):null,E=new Tv(m?C.shape:v.shape,m?v.shape:C.shape,m?[a.batchSize,y,a.outChannels]:[a.batchSize,a.outChannels,y],!0,!1,I,T,N,_),R=m?[C,v]:[v,C];if(o&&R.push(o),N&&R.push(s),_){const e=r.makeTensorInfo([],"float32",Uo(i,"float32"));R.push(e),x.push(e)}const A=r.runWebGLProgram(E,R,"float32"),O=Dv({inputs:{x:A},backend:r,attrs:{shape:a.outShape}});x.push(A);for(const F of x)r.disposeIntermediateTensorInfo(F);return O}const Sk={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dataFormat:c,dilations:u,dimRoundingMode:l}=a,d=$u(c),p=Vu(r.shape,o.shape,s,u,i,l,!1,d);let h;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===d&&Jt().getBool("WEBGL_EXP_CONV")){const e=new bk(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];h=n.runWebGLProgram(e,[r,o],"float32",t)}else if(Jt().getBool("WEBGL_CONV_IM2COL"))h=kk({x:r,filter:o,convInfo:p,backend:n});else{const e=new gk(p);h=n.runWebGLProgram(e,[r,o],"float32")}else h=wk({x:r,filter:o,convInfo:p,backend:n});const f=Dv({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}};class Ck{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,o="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(o?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Ik{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,o="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=o?1:2,u=o?2:3,l=o?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(l,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(u,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(o,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Nk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,o=e.padInfo.top,s=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(o,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(s,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class _k{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,u=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(u,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Tk={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,dataFormat:c,dimRoundingMode:u,filterShape:l}=a,d=$u(c),p=Vu(r.shape,l,s,1,i,u,!1,d),h=new Ck(p);return n.runWebGLProgram(h,[r,o],"float32")}};class Ek{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Jg(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const Rk={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{inputShape:s,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=a,d=$u(u),p=Vu(s,o.shape,i,1,c,l,!1,d);if(Jt().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===d){const e=[[p.strideHeight,p.strideWidth]],t=new Ek(p);return n.runWebGLProgram(t,[r,o],"float32",e)}{const e=new Ik(p);return n.runWebGLProgram(e,[r,o],"float32")}}};const Ak={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a,u=Gu(r.shape,o.shape,s,c,i),l=new yk(u);return n.runWebGLProgram(l,[r,o],"float32")}};const Ok={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,filterShape:c}=a,u=Gu(r.shape,c,s,1,i),l=new Nk(u);return n.runWebGLProgram(l,[r,o],"float32")}};const Fk={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{pad:s,strides:i,inputShape:c}=a,u=Gu(c,o.shape,i,1,s),l=new _k(u);return n.runWebGLProgram(l,[r,o],"float32")}},Dk=Iv({opSnippet:Cv+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(pv,"\n  return result;\n")}),Mk={kernelName:Wn,backendName:"webgl",kernelFunc:Dk},Pk=Iv({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Lk={kernelName:Un,backendName:"webgl",kernelFunc:Pk};class zk{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,s,i,c]=e,[u]=t,[l,d]=n;this.outputShape=[u,l,d,c];const p="bilinear"===a?1:0,[h,f]=["".concat(s-1,".0"),"".concat(i-1,".0")],[m,g,y]=l>1?["".concat((s-1)/(l-1)),"(y2-y1) * height_ratio","y1*".concat(h," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(h)],[b,x,v]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(o,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(x,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(h," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(v,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(p," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const Bk={kernelName:Hn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:o,boxInd:s}=t,{cropSize:i,method:c,extrapolationValue:u}=a,l=new zk(r.shape,o.shape,i,c,u);return n.runWebGLProgram(l,[r,o,s],"float32")}};var Wk;!function(e){e.Prod="*",e.Sum="+"}(Wk||(Wk={}));class Uk{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,o=this.op===Wk.Prod?"1.0":"0.0",s=n?o:"getX(".concat(Vk(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",u="";n?(c=a?"end != ".concat(i-1):"end != 0",u=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",u=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(Kg(r)," coords = getOutputCoords();\n        int end = ").concat(Gk(r,"coords",this.op),";\n        float val = ").concat(s,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(u,";\n          ").concat(Gk(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(Vk(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function Vk(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function Gk(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function Hk(e,t,n,a,r,o){const s=t.shape.length,i=Jl([a],s);let c=t;null!=i&&(c=Hv({inputs:{x:t},backend:n,attrs:{perm:i}}));const u=td(1,s)[0];if(u!==s-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const l=c.shape[u];let d=fv({inputs:{x:c},backend:n});for(let p=0;p<=Math.ceil(Math.log2(l))-1;p++){const t=new Uk(e,c.shape,!1,o),a=[[p]],r=d;d=n.runWebGLProgram(t,[d],d.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new Uk(e,c.shape,r,o),a=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=i){const e=Hv({inputs:{x:d},backend:n,attrs:{perm:ed(i)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}const jk={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return Hk(Wk.Prod,r,n,o,s,i)}};const Kk={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return Hk(Wk.Sum,r,n,o,s,i)}};const qk={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(o.dataId),a=Vb(e,t,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(o),a=Gb(e,t,s,i);return n.makeTensorInfo(a.shape,o.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class Xk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Yk={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:o,dataFormat:s}=a,i=r.shape[0],c=("NHWC"===s?r.shape[1]:r.shape[2])*o,u=("NHWC"===s?r.shape[2]:r.shape[3])*o,l=("NHWC"===s?r.shape[3]:r.shape[1])/(o*o),d=new Xk("NHWC"===s?[i,c,u,l]:[i,l,c,u],o,s);return n.runWebGLProgram(d,[r],r.dtype)}};class Qk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Jg(this.outputShape.length);const o=e.filterHeight,s=e.filterWidth,i=e.outChannels/e.inChannels;let c="",u="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),u="result = activation(result);");const l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(o,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(l,"\n        ").concat(u,"\n        setOutput(result);\n      }\n    ")}}class Zk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Jg(this.outputShape.length);const o=e.outChannels/e.inChannels,s=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,d=l;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<l;g++)p+="\n          vec4 xTexelC".concat(2*g,";\n          int xTexelC").concat(2*g,"Ready;\n          vec4 xTexelC").concat(2*g+1,";\n          int xTexelC").concat(2*g+1,"Ready;\n          vec4 xC").concat(g,";");p+="\n    for (int r = 0; r < ".concat(u,"; r++) {\n      ");for(let g=0;g<l;g++)p+="\n          xTexelC".concat(2*g," = vec4(0.0);\n          xTexelC").concat(2*g,"Ready = 0;\n          xTexelC").concat(2*g+1," = vec4(0.0);\n          xTexelC").concat(2*g+1,"Ready = 0;\n          xC").concat(g," = vec4(0.0);");p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(d+1)/2;g++){const e=2*g;if(p+="\n          xC = xCCorner + ".concat(e*c,";\n          "),1===i){if(e<l&&(s%2===1?(p+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),p+=1===c&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):p+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<l)){const t=s%2===0?gt(c):c;c%2===0&&s%2===1||c%2!==0&&s%2!==1?(p+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),p+=c>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):p+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<l&&(s%2===1?(p+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<l&&(p+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(p+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<l&&(p+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<l&&(p+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<l&&(p+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}p+="\n    }\n  ",p+="\n      }\n    ";let h="",f="";n&&(h=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(h,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(o,";\n        int q = d2 - d1 * ").concat(o,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(p,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(m,"\n        ").concat(f,"\n        setOutput(result);\n      }\n    ")}}const $k={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c,dimRoundingMode:u}=a;let l=c;null==l&&(l=[1,1]),xt(Qu(s,l),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(s," and dilations '").concat(l,"'")));const d=Vu(r.shape,o.shape,s,l,i,u,!0);let p;p=Jt().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new Zk(d):new Qk(d);const h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,o],"float32",h)}};class Jk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(o," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class eS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,o=t-1-e.padInfo.top,s=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const tS={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:u,filterShape:l}=a,d=Vu(r.shape,l,s,i,c,u,!0),p=new Jk(d);return n.runWebGLProgram(p,[r,o],"float32")}};const nS={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:u,inputShape:l}=a,d=Vu(l,o.shape,s,i,c,u,!0),p=new eS(d);return n.runWebGLProgram(p,[r,o],"float32")}};class aS{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const rS={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],o=kt(a.shape),s=Dv({inputs:{x:a},backend:n,attrs:{shape:[o]}}),i=new aS(o),c=n.runWebGLProgram(i,[s],s.dtype),u=Dv({inputs:{x:c},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(c),u}};class oS{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:o,filterHeight:s,filterWidth:i,dilationHeight:c,dilationWidth:u}=e,{top:l,left:d}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(o,");\n      const ivec2 pads = ivec2(").concat(l,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(s,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(u,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const sS={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a,u=Bu(r.shape,o.shape,s,i,"NHWC",c);let l;const d=new oS(u);l=n.runWebGLProgram(d,[r,o],"float32");const p=Dv({inputs:{x:l},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(l),p}};const iS={kernelName:na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,o=t,{allDims:s,summedDims:i,idDims:c}=Cm(r,o.length);Nm(s.length,c,o);const{path:u,steps:l}=_m(i,c),d=l.length;let p=null,h=s.length;const f=[];for(let m=0;m<d;++m){for(const e of l[m]){const{permutationIndices:t,expandDims:a}=Im(h,c[e]);let r;Tm(t)?r=o[e]:(r=Hv({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),f.push(r));const s=r.shape.slice();for(let e=0;e<a.length;++e)s.splice(a[e],0,1);Ct(r.shape,s)||(r=Dv({inputs:{x:r},backend:n,attrs:{shape:s}}),f.push(r)),null===p?p=r:(p=Ov({inputs:{a:r,b:p},backend:n}),f.push(p))}m<d-1&&(u[m]>=0&&(p=Vv({inputs:{x:p},backend:n,attrs:{axis:u[m]-(s.length-h),keepDims:!1}}),f.push(p)),h--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}},cS=Iv({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),uS={kernelName:aa,backendName:"webgl",kernelFunc:cS},lS={kernelName:ra,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,o=Jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hv("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new dv("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(o,[a,r],a.dtype)}},dS=Nv({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Xb}),pS={kernelName:sa,backendName:"webgl",kernelFunc:dS},hS=Iv({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(sm,";\n  float a1 = ").concat(im,";\n  float a2 = ").concat(cm,";\n  float a3 = ").concat(um,";\n  float a4 = ").concat(lm,";\n  float a5 = ").concat(dm,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),fS={kernelName:oa,backendName:"webgl",kernelFunc:hS},mS=Iv({opSnippet:Cv+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Yb,dtype:"float32"}),gS={kernelName:ia,backendName:"webgl",kernelFunc:mS};function yS(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:o}=t,s=o.shape.length,i=o.shape.slice();let c=r;return r<0&&(xt(-(s+1)<=r,(()=>"Axis must be in the interval [".concat(-(s+1),", ").concat(s,"]"))),c=s+r+1),i.splice(c,0,1),Dv({inputs:{x:o},backend:a,attrs:{shape:i}})}const bS={kernelName:ca,backendName:"webgl",kernelFunc:yS},xS="return exp(x) - 1.0;",vS=Iv({opSnippet:xS,packedOpSnippet:xS,cpuKernelImpl:Qb}),wS={kernelName:ua,backendName:"webgl",kernelFunc:vS};class kS{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),o=n?"".concat(a,".0"):"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));s="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(s,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(o,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function SS(e,t,n){const a=n.texData.get(e.dataId),r=kt(e.shape),o=e.shape[e.shape.length-1],s=Dv({inputs:{x:e},backend:n,attrs:{shape:[r/o,o]}}),i=s.shape,c=new kS("real",i,t),u=new kS("imag",i,t),l=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],d=n.runWebGLProgram(c,l,"float32"),p=n.runWebGLProgram(u,l,"float32"),h=gv({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const f=Dv({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(h),f}const CS={kernelName:la,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return SS(a,!1,n)}};class IS{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function NS(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:o}=n;if(o=o||Lt(r),"string"===o){const e=Ft(o,kt(a));return e.fill(r),t.makeTensorInfo(a,o,e)}{const e=new IS(a,r),n=[[r]];return t.runWebGLProgram(e,[],o,n)}}const _S={kernelName:da,backendName:"webgl",kernelFunc:NS};class TS{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const ES={kernelName:pa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,o=new TS(a.shape);return r.runWebGLProgram(o,[a],a.dtype)}},RS="return floor(x);",AS=Iv({opSnippet:RS,packedOpSnippet:RS,cpuKernelImpl:Zb}),OS={kernelName:ha,backendName:"webgl",kernelFunc:AS},FS=Nv({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),DS={kernelName:fa,backendName:"webgl",kernelFunc:FS};class MS{constructor(e){this.variableNames=["A"];const t=Rg(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class PS{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Rg(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const LS={kernelName:po,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:o}=a,s="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[c,u]=s?[r.videoWidth,r.videoHeight]:[r.width,r.height],l=[u,c],d=[u,c,o];if(i||s){const e=Jt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=zS&&e===BS||(BS=e,zS=document.createElement("canvas").getContext("2d",{willReadFrequently:BS})),zS.canvas.width=c,zS.canvas.height=u,zS.drawImage(r,0,0,c,u),r=zS.canvas}const p=n.makeTensorInfo(l,"int32");n.texData.get(p.dataId).usage=$m.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const h=Jt().getBool("WEBGL_PACK")?new PS(d):new MS(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}};let zS,BS=Jt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const WS={kernelName:mo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=$u(l),g=Vu(r.shape,o.shape,c,d,u,p,!1,m);let y;const b=[],x=null!=s,v=null!=i,w="leakyrelu"===h,k=()=>{const e=[r,o],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Dv({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(s,l)),v&&e.push(t(i,l)),w){const t=n.makeTensorInfo([],"float32",Uo(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Jt().getBool("WEBGL_EXP_CONV")){const e=h?_v(h,!0):null,t=new bk(g,x,e,v,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(t,r,"float32",a)}else if(Jt().getBool("WEBGL_CONV_IM2COL"))y=kk({x:r,filter:o,convInfo:g,backend:n,bias:s,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{const e=h?_v(h,!1):null,t=new gk(g,x,e,v,w),a=k();y=n.runWebGLProgram(t,a,"float32")}else y=wk({x:r,filter:o,convInfo:g,backend:n,bias:s,activation:h,preluActivationWeights:i,leakyreluAlpha:f});const S=Dv({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const US={kernelName:go,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:u,dilations:l,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=a,f=[];let m=l;null==m&&(m=[1,1]),xt(Qu(c,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(m,"'")));const g=Vu(r.shape,o.shape,c,m,u,d,!0),y=Jt().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=p?_v(p,y):null,x=[r,o],v=null!=s,w=null!=i,k="leakyrelu"===p;if(v&&x.push(s),w&&x.push(i),k){const e=n.makeTensorInfo([],"float32",Uo(h,"float32"));x.push(e),f.push(e)}let S;S=y?new Zk(g,v,b,w,k):new Qk(g,v,b,w,k);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],I=n.runWebGLProgram(S,x,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class VS{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=Kg(n.length);let o="\n    int index;";for(let s=0;s<this.sliceDim;s++)o+="\n          index = round(getIndices(coords[0], ".concat(s,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[s],";\n          flattenIndex += index * ").concat(this.strides[s],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(o,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const GS={kernelName:ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,o=r.shape,s=o[o.length-1],i=kt(a.shape),[c,u,l,d]=ru(a,r),p=Dv({inputs:{x:r},backend:n,attrs:{shape:[u,s]}}),h=Dv({inputs:{x:a},backend:n,attrs:{shape:[kt(a.shape)/l,l]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),o=$b(e,t,a.dtype,u,s,l,d,a.shape,i);return n.makeTensorInfo(c,a.dtype,o.values)}const f=new VS(s,d,[u,l],a.shape),m=n.runWebGLProgram(f,[h,p],h.dtype),g=Dv({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}};class HS{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Kg(this.rank),a=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("index"):n.push("".concat(t[a]));return n.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function jS(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:o}=t,{axis:s,batchDims:i}=a,c=Rt(s,r.shape)[0];if(Jt().get("DEBUG")){const e=n.readSync(o.dataId),t=r.shape[c];for(let n=0;n<e.length;++n){const a=e[n];xt(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const u=jm(r,o,c,i),l=kt(o.shape),d=[],p=Dv({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=Dv({inputs:{x:o},backend:n,attrs:{shape:[u.batchSize,l/u.batchSize]}});d.push(p),d.push(h);const f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,o])||"string"===r.dtype){const e=n.bufferSync(h),t=n.bufferSync(p),a=Jb(t,e,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}const m=new HS(p.shape,f),g=n.runWebGLProgram(m,[p,h],p.dtype);d.push(g);const y=Dv({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const KS={kernelName:ga,backendName:"webgl",kernelFunc:jS},qS=Nv({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:ex,dtype:"bool"}),XS={kernelName:ba,backendName:"webgl",kernelFunc:qS},YS=Nv({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:tx}),QS={kernelName:xa,backendName:"webgl",kernelFunc:YS};const ZS={kernelName:wa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return SS(a,!0,n)}},$S=Iv({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),JS={kernelName:Sa,backendName:"webgl",kernelFunc:$S},eC=Iv({opSnippet:"return float(isinf(x));",dtype:"bool"}),tC={kernelName:Ca,backendName:"webgl",kernelFunc:eC},nC=Iv({opSnippet:"return float(isnan(x));",dtype:"bool"}),aC={kernelName:Ia,backendName:"webgl",kernelFunc:nC},rC=Nv({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:nx,dtype:"bool"}),oC={kernelName:_a,backendName:"webgl",kernelFunc:rC},sC=Nv({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:ax,dtype:"bool"}),iC={kernelName:Ta,backendName:"webgl",kernelFunc:sC};const cC={kernelName:Ea,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:o}=n,s=rx(a,r,o);return t.makeTensorInfo([s.length],"float32",s)}},uC=Iv({opSnippet:Cv+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:ox}),lC={kernelName:Ra,backendName:"webgl",kernelFunc:uC},dC=Iv({opSnippet:Cv+"\n  return log(1.0 + x);\n"}),pC={kernelName:Aa,backendName:"webgl",kernelFunc:dC},hC=Nv({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),fC={kernelName:Oa,backendName:"webgl",kernelFunc:hC},mC=Iv({opSnippet:"return float(!(x >= 1.0));"}),gC={kernelName:Fa,backendName:"webgl",kernelFunc:mC},yC=Nv({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),bC={kernelName:Da,backendName:"webgl",kernelFunc:yC};class xC{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const o=t,s=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(o,"; j <= ").concat(o,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(s,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class vC{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,s=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(o,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(o,"; j <= ").concat(o,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(s,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const wC={kernelName:Ma,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:o,bias:s,alpha:i,beta:c}=a,u=Jt().getBool("WEBGL_PACK_NORMALIZATION")?new vC(r.shape,o,s,i,c):new xC(r.shape,o,s,i,c);return n.runWebGLProgram(u,[r],r.dtype)}};class kC{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const SC={kernelName:Pa,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:o,dy:s}=t,{depthRadius:i,bias:c,alpha:u,beta:l}=a,d=new kC(r.shape,i,c,u,l);return n.runWebGLProgram(d,[r,o,s],r.dtype)}};function CC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:o,keepDims:s}=a,i=r.shape.length,c=Rt(o,r.shape);let u=c;const l=Jl(u,i),d=null!=l,p=n.shouldExecuteOnCPU([r]);let h=r;if(d){if(p){const e=n.texData.get(h.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=r.shape[l[n]];const a=Dx(e,r.shape,r.dtype,l,t);h=n.makeTensorInfo(t,r.dtype);n.texData.get(h.dataId).values=a}else h=Uv(r,l,n);u=td(u.length,i)}$l("max",u,i);const[f,m]=Ql(h.shape,u);let g,y=f;if(s&&(y=Zl(f,c)),p){const e=n.texData.get(h.dataId).values,t=sx(e,kt(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const r=kt(t),o=Dv({inputs:{x:e},attrs:{shape:[kt(e.shape)/r,r]},backend:a}),s=zv(o,e.dtype,"max",a),i=Dv({inputs:{x:s},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),i}(h,m,y,n);return d&&n.disposeIntermediateTensorInfo(h),g}const IC={kernelName:La,backendName:"webgl",kernelFunc:CC},NC=Nv({opSnippet:lv+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+pv+"\n  return result;\n",cpuKernelImpl:ix}),_C={kernelName:za,backendName:"webgl",kernelFunc:NC};const TC={kernelName:Ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Tg(r,"maxPool");const{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;xt(Qu(s,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(1,"'")));const u=Wu(r.shape,o,s,1,i,c);if(1===u.filterWidth&&1===u.filterHeight&&Ct(u.inShape,u.outShape))return fv({inputs:{x:r},backend:n});const l=new Nw(u,"max",!1);return n.runWebGLProgram(l,[r],r.dtype)}};const EC={kernelName:Ua,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dataFormat:c,dimRoundingMode:u}=a,l=Uu(r.shape,o,s,[1,1,1],i,u,c),d=new _w(l,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}};class RC{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,o=e.effectiveFilterWidth,s=r-1-e.padInfo.top,i=o-1-e.padInfo.left,c=r*o-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(o," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class AC{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,o=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.front,d=c-1-e.padInfo.top,p=u-1-e.padInfo.left,h=i*c*u-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(l,", ").concat(d,", ").concat(p,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(o,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(u,";\n                wC += ").concat(s,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(h," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(u," +\n                  wR * ").concat(u," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const OC={kernelName:Va,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=a,d=Uu(s.shape,i,c,[1,1,1],u,l),p=new _w(d,"max",!0),h=n.runWebGLProgram(p,[s],s.dtype),f=new AC(d),m=n.runWebGLProgram(f,[r,h],s.dtype);return n.disposeIntermediateTensorInfo(h),m}};const FC={kernelName:Wa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o,output:s}=t,i=o;Tg([o,s],"maxPoolGrad");const{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=a,p=Wu(i.shape,c,u,1,l,d),h=new Nw(p,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new RC(p),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const DC={kernelName:Ga,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:o,strides:s,pad:i,includeBatchInIndex:c}=n,u=a;xt(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const l=[1,1];xt(Qu(s,l),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(l,"'")));const d=Wu(r.shape,o,s,l,i),[p,h]=function(e,t,n,a){let r=new Nw(n,"max",!1);const o=a.runWebGLProgram(r,[e],"float32");return r=new Nw(n,"max",!0,!0,t),[o,a.runWebGLProgram(r,[e],"float32")]}(r,c,d,u);return[p,h]}};const MC={kernelName:Ha,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:o,axis:s}=n,i=a,c=r.shape.length,u=Rt(s,r.shape);let l=u;const d=Jl(l,c),p=null!=d,h=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(p){if(h){const e=i.texData.get(m.dataId).values,t=new Array(c);for(let a=0;a<t.length;a++)t[a]=r.shape[d[a]];const n=Dx(e,r.shape,r.dtype,d,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=Uv(r,d,i);f.push(m),l=td(l.length,c)}$l("sum",l,c);const[g,y]=Ql(m.shape,l);let b=g;o&&(b=Zl(g,u));const x=function(e,t,n,a){const r=kt(t),o=Dv({inputs:{x:e},attrs:{shape:[kt(e.shape)/r,r]},backend:a}),s=zv(o,"float32","mean",a),i=Dv({inputs:{x:s},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),i}(m,y,b,i);for(const v of f)i.disposeIntermediateTensorInfo(v);return x}};const PC={kernelName:ja,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a,i=r.shape.length,c=Rt(o,r.shape);let u=c;const l=Jl(u,i);let d=r;null!=l&&(d=Hv({inputs:{x:r},backend:n,attrs:{perm:l}}),u=td(u.length,r.shape.length)),$l("min",u,i);const[p,h]=Ql(d.shape,u),f=Dv({inputs:{x:d},backend:n,attrs:{shape:[-1,kt(h)]}}),m=zv(f,f.dtype,"min",n);let g;if(s){g=Dv({inputs:{x:m},backend:n,attrs:{shape:Zl(p,c)}})}else g=Dv({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(d),g}},LC=Nv({opSnippet:lv+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+pv+"\n  return result;\n",cpuKernelImpl:cx}),zC={kernelName:Ka,backendName:"webgl",kernelFunc:LC};class BC{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Kg(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(o,");\n      ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class WC{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Kg(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=Lx("rc",a),c=Lx("source",a),u="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),l=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let p="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");p="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(u,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");p="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(u,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(u,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(o,");\n      const ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const UC={kernelName:qa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:o,mode:s}=a,i=Jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WC(r.shape,o,s):new BC(r.shape,o,s);return n.runWebGLProgram(i,[r],r.dtype)}},VC=Nv({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+pv+"\n  return result;\n"}),GC={kernelName:Xa,backendName:"webgl",kernelFunc:VC};class HC{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const jC=Nv({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),KC={kernelName:ta,backendName:"webgl",kernelFunc:jC},qC="return a - b;",XC=Nv({opSnippet:qC,packedOpSnippet:qC,supportsComplex:!0,cpuKernelImpl:Ax}),YC={kernelName:Jr,backendName:"webgl",kernelFunc:XC};function QC(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:o}=a,s=Rt([o],r.shape),i=CC({inputs:{x:r},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),c=Zl(i.shape,s),u=Dv({inputs:{x:i},backend:n,attrs:{shape:c}}),l=XC({inputs:{a:r,b:u},backend:n}),d=mS({inputs:{x:l},backend:n}),p=Vv({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:!1}}),h=Dv({inputs:{x:p},backend:n,attrs:{shape:c}}),f=jC({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}const ZC={kernelName:Wr,backendName:"webgl",kernelFunc:QC};const $C={kernelName:Ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:o,seed:s,normalized:i}=a,c=i?r:QC({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=c.shape[0],l=c.shape[1],d=new HC(u,l,o),p=[[s]],h=n.runWebGLProgram(d,[c],"int32",p);return i||n.disposeIntermediateTensorInfo(c),h}},JC=jx+"\n  return -x;\n";const eI={kernelName:Za,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=lx(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=Jt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new rv(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Hx(a.shape,JC),n.runWebGLProgram(r,[a],a.dtype)}},tI=Jh;const nI={kernelName:Ja,backendName:"webgl",kernelFunc:function(e){yo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=a,u=n.readSync(r.dataId),l=n.readSync(o.dataId),{selectedIndices:d}=tI(u,l,s,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},aI=ef;const rI={kernelName:er,backendName:"webgl",kernelFunc:function(e){yo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:u}=a,l=n.readSync(r.dataId),d=n.readSync(o.dataId),{selectedIndices:p,validOutputs:h}=aI(l,d,s,i,c,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},oI=tf;const sI={kernelName:tr,backendName:"webgl",kernelFunc:function(e){yo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=a,l=n.readSync(r.dataId),d=n.readSync(o.dataId),p=s,h=i,f=c,m=u,{selectedIndices:g,selectedScores:y}=oI(l,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class iI{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const cI={kernelName:ar,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:o,depth:s,onValue:i,offValue:c}=a,u=kt(r.shape),l=new iI(u,s,i,c),d=Dv({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(l,[d],o);n.disposeIntermediateTensorInfo(d);const h=Dv({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeIntermediateTensorInfo(p),h}};function uI(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=Yw({inputs:{input:a},backend:n}),t=uI({inputs:{x:e},backend:n}),r=dk({inputs:{input:a},backend:n}),o=uI({inputs:{x:r},backend:n}),s=gv({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),s}return NS({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const lI={kernelName:uo,backendName:"webgl",kernelFunc:uI};const dI={kernelName:nr,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=Yw({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),o=dk({inputs:{input:r},backend:a}),s=uI({inputs:{x:o},backend:a}),i=gv({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),i}return NS({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const pI={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return yS({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const o=t[0].shape,s=t[0].dtype;t.forEach((e=>{vt(o,e.shape,"All tensors passed to stack must have matching shapes"),xt(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=fk({inputs:t.map((e=>{const t=yS({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};class hI{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Kg(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(o,");\n      ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class fI{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Kg(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=Lx("rc",a),c=Lx("source",a),u="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),l=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(u,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(u,") {")],p=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===a?2:4;f<m;f++)h+="\n        ".concat(d[f],"\n        if (").concat(p,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n      ");h+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(o,");\n      const ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const mI=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:o,constantValue:s}=a;if(0===kt(r.shape)){return NS({backend:n,attrs:{shape:o.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:s,dtype:r.dtype}})}const i=Jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fI(r.shape,o,s):new hI(r.shape,o,s),c=[[s]];return n.runWebGLProgram(i,[r],r.dtype,c)},gI={kernelName:or,backendName:"webgl",kernelFunc:mI},yI=Nv({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+pv+"\n  return result;\n"}),bI={kernelName:sr,backendName:"webgl",kernelFunc:yI};const xI={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a,i=r.shape.length,c=[],u=Rt(o,r.shape);let l=u;const d=Jl(l,i);let p,h=r;if(null!=d&&(h=Hv({inputs:{x:r},backend:n,attrs:{perm:d}}),l=td(l.length,i),c.push(h)),$l("prod",l,i),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:a,outDtype:r}=px(h.shape,h.dtype,e,l);p=n.makeTensorInfo(a,r,t)}else{const[e,t]=Ql(h.shape,l),a=kt(t),o=Dv({inputs:{x:h},backend:n,attrs:{shape:[-1,a]}}),s=zv(o,xs(r.dtype),"prod",n);p=Dv({inputs:{x:s},backend:n,attrs:{shape:e}}),c.push(o),c.push(s)}if(s){c.push(p);const e=Zl(p.shape,u);p=Dv({inputs:{x:p},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const vI={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:o,indices:s}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),l=n.readSync(o.dataId),d=n.readSync(s.dataId),[p,h,f]=hx(c,u,l,o.shape,o.dtype,d,s.shape,i),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,o.dtype,h);return m.concat([g])}};const wI={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:o}=t,s=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(o.dataId),[u,l]=fx(s,a.shape,a.dtype,i,r.shape,c,o.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([l.length],a.dtype,l)]}};const kI={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:o,defaultValue:s,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,u=n.readSync(r.dataId),l=n.readSync(o.dataId),d=n.readSync(s.dataId),p=i.map((e=>n.readSync(e.dataId))),h=i.map((e=>e.shape)),[f,m]=mx(u,r.shape,l,o.shape,o.dtype,d,s.shape,p,h,c);return n.makeTensorInfo(f,o.dtype,m)}},SI=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:o,dtype:s}=n,i=gx(a,r,o,s);return t.makeTensorInfo([i.length],s,i)},CI={kernelName:pr,backendName:"webgl",kernelFunc:SI},II=Iv({opSnippet:"return 1.0 / x;"}),NI={kernelName:fr,backendName:"webgl",kernelFunc:II},_I=Iv({opSnippet:jx+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),TI={kernelName:mr,backendName:"webgl",kernelFunc:_I},EI=Iv({opSnippet:jx+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),RI={kernelName:wr,backendName:"webgl",kernelFunc:EI};class AI{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const u=[a&&t>1?s-1:s,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class OI{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const u=[a&&t>1?s-1:s,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],",\n          ").concat(u[1]/l[1],");\n      const vec3 inputShapeRC = vec3(").concat(s,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const FI={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:s,size:i}=a,[c,u]=i,l=Jt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new OI(r.shape,c,u,o,s):new AI(r.shape,c,u,o,s);return n.runWebGLProgram(l,[r],"float32")}};class DI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,o,s]=e,i=[n&&o>1?a-1:a,n&&s>1?r-1:r],c=[n&&o>1?o-1:o,n&&s>1?s-1:s],u=i[0]/c[0],l=i[1]/c[1],d=1/u,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(u,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(p,");\n\n        const int winHeight = int(").concat(h,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const MI={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,i=new DI(o.shape,r.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class PI{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const u=[a&&t>1?s-1:s,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(p,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class LI{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const u=[a&&t>1?s-1:s,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let p;p=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],",\n          ").concat(u[1]/l[1],");\n      const vec3 inputShapeRC = vec3(").concat(s,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(p,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const zI={kernelName:yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:s,size:i}=a,[c,u]=i,l=Jt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new LI(r.shape,c,u,o,s):new PI(r.shape,c,u,o,s);return n.runWebGLProgram(l,[r],r.dtype)}};class BI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,o,s]=e,i=[n&&o>1?a-1:a,n&&s>1?r-1:r],c=[n&&o>1?o-1:o,n&&s>1?s-1:s],u=i[0]/c[0],l=i[1]/c[1],d=1/u,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(u,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(p,");\n\n        const int winHeight = int(").concat(h,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const WI={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,i=new BI(o.shape,r.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class UI{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=Kg(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class VI{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=Lx("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),o="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),s=Kg(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),o=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(o,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(s," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(o,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const GI={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:o}=a,s=r.shape.length,i=Rt(o,r.shape);if(0===s)return fv({inputs:{x:r},backend:n});const c=Jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VI(r.shape,i):new UI(r.shape,i);return n.runWebGLProgram(c,[r],r.dtype)}};class HI{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const jI={kernelName:ho,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:o,fillValue:s,center:i}=n,c=a,u=new HI(r.shape,s),[l,d]=$f(i,r.shape[1],r.shape[2]),p=[[l,d,Math.sin(o),Math.cos(o)]];return c.runWebGLProgram(u,[r],r.dtype,p)}},KI=Iv({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),qI={kernelName:Sr,backendName:"webgl",kernelFunc:KI},XI=Iv({opSnippet:"return inversesqrt(x);",cpuKernelImpl:yx}),YI={kernelName:Cr,backendName:"webgl",kernelFunc:XI};class QI{constructor(e,t,n,a,r,o){let s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const i=Kg(r.length),c=Kg(o.length);let u="";1===n?u="i":2===n&&(u="i, j");const l="getIndices(".concat(u,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p="getUpdates(".concat(d,")");let h="";s&&(h="coords[0], coords[1]");const f="getDefaultValue(".concat(h,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(l,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(p,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class ZI{constructor(e,t,n,a,r,o){let s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const i=Kg(r.length),c=Kg(o.length);let u="";1===n?u="i":2===n&&(u="i, j");const l="getIndices(".concat(u,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p="getUpdates(".concat(d,")");let h="";s&&(h="coords[0], coords[1]");const f="getDefaultValue(".concat(h,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(l,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(p,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const $I={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:o}=t,{shape:s}=a,{sliceRank:i,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=iu(0,r,s),p=[d/u,u];if(0===d)return n.makeTensorInfo(s,r.dtype);const h=Dv({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),f=Dv({inputs:{x:o},backend:n,attrs:{shape:[c,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Jt().getBool("WEBGL_PACK")?new ZI(c,i,h.shape.length,f.shape.length,l,p):new QI(c,i,h.shape.length,f.shape.length,l,p);const y=n.runWebGLProgram(g,[f,h,m],f.dtype),b=Dv({inputs:{x:y},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class JI{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),o=2===Jt().getNumber("WEBGL_VERSION")?"while (left < right) {":r,s="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(o,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(s," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const eN={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:o}=t,{side:s}=a,i=new JI(r.shape[0],r.shape[1],o.shape[1],s),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,o],"int32",c)}};class tN{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[];for(let a=0;a<t.length;a++)s.push("".concat(n[a])),a<e&&o.push("".concat(n[a]));a=o.join(),r=s.join()}const o=Kg(n);this.userCode="\n      void main() {\n        ".concat(o," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const nN={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:o}=t,s=new tN(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(s,[a,r,o],bs(r.dtype,o.dtype))}},aN=Iv({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(rm,";\n  float scale = ").concat(om,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),rN={kernelName:Er,backendName:"webgl",kernelFunc:aN},oN=Iv({opSnippet:Cv+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:xx}),sN={kernelName:Dr,backendName:"webgl",kernelFunc:oN},iN=Iv({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),cN={kernelName:Fr,backendName:"webgl",kernelFunc:iN},uN=Iv({opSnippet:Cv+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(pv,"\n  return result;\n")}),lN={kernelName:Ar,backendName:"webgl",kernelFunc:uN},dN=Iv({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),pN={kernelName:Or,backendName:"webgl",kernelFunc:dN},hN=Iv({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),fN={kernelName:Mr,backendName:"webgl",kernelFunc:hN},mN={kernelName:zr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,paddings:s}=a;xt(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=o.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...s);for(let y=1+o.length;y<r.shape.length;++y)c.push([0,0]);const u=[],l=mI({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),d=Jf(l.shape,o,i,!1),p=em(d.length,o.length,!1),h=tm(l.shape,o,i,!1),f=Dv({inputs:{x:l},backend:n,attrs:{shape:d}}),m=Hv({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Dv({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(l),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const gN={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:o,defaultValue:s}=t;if(1!==o.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(o.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==s.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(s.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),u=n.readSync(o.dataId),l=n.readSync(s.dataId)[0],[d,p,h,f,m]=kx(i,a.shape,a.dtype,c,r.dtype,u,l);return[n.makeTensorInfo(p,a.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const yN={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:o}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==o.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(o.shape));const s=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(o.dataId)),[u,l,d]=Sx(i,a.shape,a.dtype,s,c);return[n.makeTensorInfo(l,a.dtype,u),n.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}};const bN={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(o.shape));const s=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(o.dataId),[u,l]=Cx(s,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(l,a.dtype,u)}};const xN={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(o.shape));const s=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(o.dataId),[u,l]=Cx(s,a.shape,a.dtype,i,c);return n.makeTensorInfo(l,a.dtype,u)}};const vN={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:o,defaultValue:s}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=iu(0,r,i),h=!1;if("string"===o.dtype){const e=n.bufferSync(r),t=n.bufferSync(o),a=jo(n.readSync(s.dataId)[0]),f=bx(e,t,i,p,l,u,c,d,a,h);return n.makeTensorInfo(i,f.dtype,f.values)}const f=new QI(u,c,r.shape.length,o.shape.length,d,[p,1],h),m=n.runWebGLProgram(f,[o,r,s],o.dtype),g=Dv({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}};const wN={kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:o,axis:s}=a,i=Rt(s,r.shape)[0],c=Rm(r,o,i),u=r.shape.length,l=new Array(u).fill(0),d=r.shape.slice();return c.map((e=>{const t=[...d];t[i]=e;const a=Uw({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,a}))}},kN="return sqrt(x);",SN=Iv({opSnippet:kN,packedOpSnippet:kN,cpuKernelImpl:Ix}),CN={kernelName:Pr,backendName:"webgl",kernelFunc:SN},IN={kernelName:qr,backendName:"webgl",kernelFunc:Iv({opSnippet:"return x * x;"})},NN="return (a - b) * (a - b);",_N=Nv({opSnippet:NN,packedOpSnippet:NN}),TN={kernelName:Kr,backendName:"webgl",kernelFunc:_N};const EN={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const o=Km(n.readSync(r.dataId)),s=Nx(o,"string",a);return n.makeTensorInfo(r.shape,"string",s)}};const RN={kernelName:lo,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,o=jx+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),s=new Hx(r.shape,o);return a.runWebGLProgram(s,[r],r.dtype)}};class AN{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=Kg(n.length),o=Kg(n.length);let s="";if(1===a)s="coords * strides + begin";else{let e=0;s=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(o," coords = getOutputCoords();\n        setOutput(getX(").concat(s,"));\n      }\n    ")}}const ON={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,end:s,strides:i,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:p}=a,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Iu(r.shape,o,s,i,c,u,l,d,p);let w;if(m)w=Dv({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){xt(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=pu(b,x,v),t=Uw({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=Dv({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=nc(r.shape,r.dtype,e),a=_x(h,t,v,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new AN(b,v,h);w=n.runWebGLProgram(e,[r],r.dtype)}}const k=Dv({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const FN={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:o,leftPad:s,rightPad:i,padWidth:c,preserveShortSequences:u}=a,{data:l,dataSplits:d}=t,p=n.readSync(l.dataId),h=n.readSync(d.dataId),[f,m]=Tx(p,h,r,o,s,i,c,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const DN={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:o,delimiter:s}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error("Input must be a vector, got shape: ".concat(o.shape));if(0!==s.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(s.shape));const i=n.readSync(o.dataId),c=n.readSync(s.dataId)[0],[u,l,d]=Ex(i,c,r),p=l.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const MN={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:o}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const s=n.readSync(o.dataId),i=Rx(s,r);return n.makeTensorInfo(o.shape,"int32",i)}},PN=Iv({opSnippet:"return tan(x);"}),LN={kernelName:eo,backendName:"webgl",kernelFunc:PN},zN=Iv({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),BN={kernelName:to,backendName:"webgl",kernelFunc:zN};const WN={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:o,updates:s}=t,{}=a,{sliceRank:i,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=iu(0,o,r.shape),p=[d/u,u];if(0===d)return n.makeTensorInfo(r.shape,o.dtype);const h=Dv({inputs:{x:o},backend:n,attrs:{shape:[c,i]}}),f=Dv({inputs:{x:s},backend:n,attrs:{shape:[c,u]}}),m=Dv({inputs:{x:r},backend:n,attrs:{shape:p}}),g=new QI(c,i,h.shape.length,f.shape.length,l,p,!1,!0),y=n.runWebGLProgram(g,[f,h,m],m.dtype),b=Dv({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class UN{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.rank=n.length;const a=Kg(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function VN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:o}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>jo(e))):e,a=nc(r.shape,r.dtype,t),s=Ox(a,o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new UN(r.shape,o);return n.runWebGLProgram(s,[r],r.dtype)}const GN={kernelName:no,backendName:"webgl",kernelFunc:VN};class HN{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class jN{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function KN(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function qN(e){let t=1;for(;t<e;)t*=2;return t}const XN={kernelName:ao,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:o,sorted:s}=a,i=Jt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=Jt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,l=u[u.length-1];if(n.shouldExecuteOnCPU([r])||l<i||o>c){const e=n.readSync(r.dataId),[t,a]=Fx(e,u,r.dtype,o,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===o)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===l)return[r,NS({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const d=n.texData.get(r.dataId),p=null!==d&&d.isPacked,h=p?n.unpackTensor(r):r,f=kt(u)/l,m=Dv({inputs:{x:h},attrs:{shape:[f,l]},backend:n});p&&KN(n,h);const g=qN(o),y=qN(l);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,a)=>{const r=x(),o=new HN(a),s=[[l],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(o,r,"int32",s),KN(n,i)};for(let I=1;I<g;I*=2){const e=2*I;for(let t=I;t>=1;t/=2)v(e,t,[f,y])}for(let I=y;I>g;I/=2){const e=x(),t=new jN([f,I/2]),a=[[l],[null===b?1:0],[g]],r=b;b=n.runWebGLProgram(t,e,"int32",a),KN(n,r);const o=g/2,s=2*o;for(let n=o;n>=1;n/=2)v(s,n,b.shape)}let w=b;b=Uw({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,o]}}),KN(n,w);let k=jS({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});KN(n,m);const S=u.slice(0,-1);S.push(o),w=b,b=Dv({inputs:{x:b},attrs:{shape:S},backend:n}),KN(n,w);const C=k;return k=Dv({inputs:{x:k},attrs:{shape:S},backend:n}),KN(n,C),[k,b]}};class YN{constructor(e,t,n,a,r,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const s="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(s," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const QN={kernelName:ro,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:o}=t,{interpolation:s,fillMode:i,fillValue:c,outputShape:u}=a,[l,d,p,h]=r.shape,[f,m]=null!=u?u:[d,p],g=new YN(d,p,s,i,c,[l,f,m,h]);return n.runWebGLProgram(g,[r,o],"float32")}};const ZN={kernelName:so,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:o}=t;Tg(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=a.readSync(o.dataId),{outputValues:i,outputShape:c,indices:u}=Mx(s,r,o.shape,o.dtype);return[a.makeTensorInfo(c,o.dtype,i),a.makeTensorInfo([u.length],"int32",u)]}};const $N={kernelName:io,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:o}=a;o<0&&(o+=r.shape.length);const s=r,i=s.shape.length,c=r.shape[o],u=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==o&&(u[l++]=s.shape[m]);const d=[],p=new Array(i).fill(0),h=s.shape.slice();h[o]=1;const f=new Array(c);for(let m=0;m<f.length;m++){p[o]=m;const e=Uw({inputs:{x:s},backend:n,attrs:{begin:p,size:h}}),t=Dv({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class JN{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,o=e.numSegments,s=o*Math.ceil(r/n);this.outputShape=[a,s];const i=4*Math.floor(n/4),c=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let d="";r%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(o,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(o,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(u,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(u,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(u,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(u,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const e_={kernelName:co,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:o}=t,{numSegments:s}=a,i=r.shape.length,c=[];let u=0;const l=Jl([u],i);let d=r;null!=l&&(d=Hv({inputs:{x:r},backend:n,attrs:{perm:l}}),c.push(d),u=td(1,i)[0]);const p=Hm(d.shape,u,s),h=kt([d.shape[u]]),f=Dv({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});c.push(f);const m=xs(r.dtype),g=(e,t,a,r,o)=>{const s=e.shape[0],i=e.shape[1],u=Gm(i,o),l=new JN({windowSize:u,inSize:i,batchSize:s,numSegments:o},t),d=n.compileAndRun(l,[e,a],r);if(c.push(d),d.shape[1]===o)return d;const p=SI({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),h=VN({inputs:{x:p},backend:n,attrs:{reps:[i/u]}});c.push(p),c.push(h);return g(d,t,h,r,o)},y=Dv({inputs:{x:g(f,"unsortedSegmentSum",o,m,s)},backend:n,attrs:{shape:p}});let b=y;if(null!=l){c.push(y);const e=ed(l);b=Hv({inputs:{x:b},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},t_=[Xv,Qv,$v,ew,aw,sw,iw,cw,fw,mw,yw,xw,ww,Sw,Iw,Tw,Ew,Ow,Fw,Dw,Lw,Gw,Hw,jw,Kw,$w,tk,rk,yv,ik,mk,Sk,Tk,Rk,Ak,Ok,Fk,Mk,Lk,Bk,jk,Kk,qk,Yk,$k,tS,nS,rS,sS,iS,uS,lS,pS,fS,gS,bS,wS,CS,_S,ES,OS,DS,LS,WS,US,GS,KS,XS,QS,mv,ZS,pk,JS,tC,aC,vv,oC,iC,cC,lC,pC,fC,gC,bC,wC,SC,IC,_C,TC,EC,OC,FC,DC,MC,PC,zC,UC,GC,$C,Fv,eI,nI,rI,sI,Xw,cI,dI,pI,gI,bI,Sv,xI,vI,wI,kI,CI,Qw,KC,NI,TI,RI,Mv,FI,MI,zI,WI,GI,jI,qI,YI,$I,eN,nN,rN,sN,cN,lN,pN,Vw,ZC,fN,mN,gN,yN,bN,xN,vN,wN,CN,IN,TN,EN,RN,ON,FN,DN,MN,YC,Gv,LN,BN,WN,GN,XN,QN,jv,ZN,$N,e_,lI];for(const n of t_)Co(n);const n_=Jt();n_.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),n_.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),n_.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",(()=>-1)),n_.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!0)),n_.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),n_.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),n_.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),n_.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",(()=>!0)),n_.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",(()=>!1)),n_.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",(()=>-1)),n_.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1)),n_.registerFlag("WEBGPU_PRINT_SHADER",(()=>"")),n_.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",(()=>!1));class a_{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return"intel"===this.vendor}}class r_{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t){let n,a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const o=o_(e,t);return r?(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).length>0?(n=this.freeBuffers.get(o).pop(),this.numFreeBuffers--):(n=this.device.createBuffer({size:e,usage:t,mappedAtCreation:a}),this.numBytesAllocated+=e)):(n=this.device.createBuffer({size:e,usage:t,mappedAtCreation:a}),this.numBytesAllocated+=e),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.usedBuffers.get(o).push(n),this.numUsedBuffers++,this.numBytesUsed+=e,n}releaseBuffer(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===this.freeBuffers.size)return;const n=e.size,a=o_(n,e.usage),r=this.usedBuffers.get(a),o=r.indexOf(e);if(o<0)throw new Error("Cannot find the buffer in buffer manager");r[o]=r[r.length-1],r.pop(),this.numUsedBuffers--,this.numBytesUsed-=n,t?(this.freeBuffers.get(a).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=n)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function o_(e,t){return"".concat(e,"_").concat(t)}class s_{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,a){const r=e*t*c_(n),o=i_(e,t,n,a);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=r,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;const e=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(e),e}this.numBytesAllocated+=r;const s=this.device.createTexture({size:[e,t],format:n,usage:a});return this.usedTextures.get(o).push(s),s}releaseTexture(e){if(0===this.freeTextures.size)return;const t=e.width,n=e.height,a=e.format,r=i_(t,n,a,e.usage);this.freeTextures.has(r)||this.freeTextures.set(r,[]),this.freeTextures.get(r).push(e),this.numFreeTextures++,this.numUsedTextures--;const o=this.usedTextures.get(r),s=o.indexOf(e);if(s<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(s,1);const i=t*n*c_(a);this.numBytesUsed-=i}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function i_(e,t,n,a){return"".concat(e,"_").concat(t,"_").concat(n,"_").concat(a)}function c_(e){if("rgba8unorm"===e)return 16;throw new Error("".concat(e," is not supported!"))}function u_(e,t){if(Math.max(...e)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const n=e.length,a=e.map((e=>"".concat(t,".").concat("xyzwuv"[e]))),r=new Array(n-1);r[n-2]=a[n-1];for(let o=n-3;o>=0;--o)r[o]="(".concat(r[o+1]," * ").concat(a[o+1],")");return r}const l_=(e,t,n)=>"int32"===n?"atomicAdd(".concat(e,", bitcast<i32>(").concat(t,"));"):"\n          {\n            var oldValue = 0;\n            loop {\n              let newValueF32 = bitcast<f32>(oldValue) + (".concat(t,");\n              let newValue = bitcast<i32>(newValueF32);\n              let res = atomicCompareExchangeWeak(").concat(e,", oldValue, newValue);\n              if res.exchanged {\n                break;\n              }\n              oldValue = res.old_value;\n            }\n          }");var d_;!function(e){e[e.FROM_PIXELS=0]="FROM_PIXELS",e[e.DRAW=1]="DRAW"}(d_||(d_={}));const p_=(e,t,n,a,r)=>{const o=function(e,t,n){const a=[],r=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,a.push("\n\n      var<private> localId: vec3<u32>;\n      var<private> localIndex: u32;\n      var<private> globalId: vec3<u32>;\n      var<private> numWorkgroups: vec3<u32>;\n      var<private> workgroupId: vec3<u32>;\n\n      // Only used when the y/z dimension of workgroup size is 1.\n      fn getGlobalIndex() -> i32 {\n        ".concat(k_(n)?"  return i32(globalId.x);":"  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +\n                workgroupId.y * numWorkgroups.x + workgroupId.x) * ".concat(r,"u +\n                localIndex);\n        "),"\n      }\n    ")),null!=n.pixelsOpType){const r=n.pixelsOpType===d_.FROM_PIXELS?"@group(0) @binding(0) var<storage, read_write> result: array<".concat(S_(t.dtype,n.outputComponent),">;"):"@group(0) @binding(1) var<storage, read> inBuf : array<".concat(S_(e[0].dtype,n.outputComponent),">;"),o=3===t.shape.length?"vec2<i32>":"i32";a.push("\n        struct Uniform {\n          outShapeStrides : ".concat(o,",\n          size            : i32,\n          numChannels     : i32,\n          alpha           : f32,\n        };\n\n        ").concat(r,"\n        @group(0) @binding(2) var<uniform> uniforms: Uniform;\n      "));const s=C_(n);return[b_,a.join("\n"),v_(t.shape),n.getUserCode(),y_(s,n)].join("\n")}let o,s,i="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach(((t,n)=>{const a=f_(e[n].shape.length);i+="".concat(t.charAt(0).toLowerCase()+t.slice(1),"Shape : ").concat(a,", "),o=e[n].shape.length-1,s=f_(o),i+="".concat(t.charAt(0).toLowerCase()+t.slice(1),"ShapeStrides: ").concat(s,", ")}));const c=f_(t.shape.length);i+="outShape : ".concat(c,", "),o=t.shape.length-1,s=f_(o),i+="\n         outShapeStrides: ".concat(s,", "),n.size&&(i+="size : i32, ");n.uniforms&&(i+=n.uniforms);i+="};",i=function(e){const t=/(\w+)\s*:\s*vec(5|6)/g;e=e.replace(t,(e=>"@align(16) "+e));const n=/vec(5|6)\s*,\s*(\w+)/g;return e=e.replace(n,((e,t,n)=>"vec".concat(t,", @align(16) ").concat(n)))}(i),a.push(i),n.atomic?a.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n    "):a.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<".concat(S_(t.dtype,n.outputComponent),">;\n    "));n.variableNames.forEach(((t,r)=>{a.push("\n      @group(0) @binding(".concat(1+r,") var<storage, read> ").concat(t,": array<").concat(n.variableComponents?S_(e[r].dtype,n.variableComponents[r]):S_(e[r].dtype,n.outputComponent),">;\n        "))})),""!==i&&a.push("\n      @group(0) @binding(".concat(1+n.variableNames.length,") var<uniform> uniforms: Uniforms;\n      "));const u=function(e,t){const{x:n,y:a=[],z:r=[]}=t,o=e.length,s=n.length+a.length+r.length;if(s!==o)return"";if(n.length===o){const e=f_(o);return"fn getOutputCoords() -> ".concat(e,"{\n    let globalIndex = getGlobalIndex();\n    return getCoordsFromIndex(globalIndex);\n  }\n  ")}let i="";const c=[n,a,r];for(let p=0;p<c.length;p++){const e=c[p];if(0!==e.length)if(1===e.length)i+="let d".concat(e[0]," = i32(globalId[").concat(p,"]);");else{const t=u_(e,"uniforms.outShape");i+="var index".concat(p," = i32(globalId[").concat(p,"]);");for(let n=0;n<t.length;n++)i+="let d".concat(e[n]," = index").concat(p," / ").concat(t[n],";"),n===t.length-1?i+="let d".concat(e[n+1]," = ")+"index".concat(p," - d").concat(e[n]," * ").concat(t[n],";"):i+="index".concat(p," = index").concat(p," - d").concat(e[n]," * ").concat(t[n],";")}}const u=[];for(let p=0;p<s;p++)u.push("d".concat(p));const l=f_(s);let d="fn getOutputCoords() -> ".concat(l," {\n  ").concat(i,"\n");0===u.length?d+="return ".concat(l,"(0); }"):d+="return ".concat(l,"(").concat(u.join(","),"); }");return d}(t.shape,n.dispatchLayout),l=[b_,a.join("\n")+x_,v_(t.shape),u,w_(t.shape.length)];n.atomic||l.push(function(e,t,n){const a=e.length,r=S_(t,n);let o="fn setOutputAtIndex(flatIndex : i32, value : ".concat(h_(n),") {\n      result[flatIndex] = ").concat(r,"(value);\n    }\n\n    fn setOutputAtIndexI32(flatIndex : i32, value : ").concat(h_(n,"i32"),") {\n      result[flatIndex] = ").concat(r,"(value);\n    }\n    ");if(a>=2){const e=["d0","d1","d2","d3","d4","d5"].slice(0,a),t=f_(a);o+="\n      fn setOutputAtCoords(".concat(e.map((e=>"".concat(e," : i32"))).join(", "),", value : ").concat(h_(n),") {\n        let flatIndex = getOutputIndexFromCoords(").concat(t,"(").concat(e.join(", "),"));\n        setOutputAtIndex(flatIndex").concat(1===n?"":" / ".concat(n),", value);\n      }\n      fn setOutputAtCoordsI32(").concat(e.map((e=>"".concat(e," : i32"))).join(", "),", value : ").concat(h_(n,"i32"),") {\n        let flatIndex = getOutputIndexFromCoords(").concat(t,"(").concat(e.join(", "),"));\n        setOutputAtIndexI32(flatIndex").concat(1===n?"":" / ".concat(n),", value);\n      }\n    ")}return o}(t.shape,t.dtype,n.outputComponent));n.variableNames.forEach(((t,n)=>{l.push("".concat(v_(e[n].shape,t)))}));const d=e.map(((e,a)=>function(e,t,n,a){let r=function(e,t){const n=e.name,a=e.shape.length,r=f_(a),o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=["d0","d1","d2","d3","d4","d5"].slice(0,a),i=s.map((e=>"".concat(e," : i32"))).join(", ");if(a<1)return"\n      fn ".concat(o,"() -> ").concat(h_(t)," {\n        return ").concat(h_(t),"(").concat(n,"[0]);\n      }\n    ");const c="uniforms.".concat(n.charAt(0).toLowerCase()+n.slice(1),"Shape");let u="".concat(a,"D");0===a&&(u="1D");return"\n    fn ".concat(o,"(").concat(i,") -> ").concat(h_(t)," {\n      return ").concat(h_(t),"(").concat(n,"[getIndexFromCoords").concat(u,"(").concat(r,"(").concat(s.join(","),"),\n        ").concat(c,")").concat(1===t?"":" / ".concat(t),"]);\n    }\n   ")}(e,n);const o=e.shape;o.length<=t.length&&(r+=function(e,t,n,a){const r=e.name,o=r.charAt(0).toUpperCase()+r.slice(1),s="get"+o+"ByOutput",i=e.shape.length,c=t.length,u=f_(c);if(Ct(e.shape,t)&&a)return"\n    fn ".concat(s,"Index(globalIndex : i32) -> ").concat(h_(n)," {\n      return ").concat(h_(n),"(").concat(r,"[globalIndex]);\n    }\n\n    fn ").concat(s,"Coords(coords : ").concat(u,") -> ").concat(h_(n)," {\n      return ").concat(h_(n),"(").concat(r,"[").concat(c>1?"getOutputIndexFromCoords(coords)":"coords").concat(1===n?"":" / ".concat(n),"]);\n    }\n    ");const l=Ic(e.shape,t),d=c-i;let p="";if(0===i)return"\n    fn ".concat(s,"Index(globalIndex : i32) -> ").concat(h_(n),"{\n      return get").concat(o,"();\n    }\n\n    fn ").concat(s,"Coords(coords : ").concat(u,") -> ").concat(h_(n),"{\n      return get").concat(o,"();\n    }\n  ");p=c<2&&l.length>=1?"coords = 0;":l.map((e=>"coords.".concat(m_(e+d)," = 0;"))).join("\n");let h="";if(c<2&&i>0)h="coords";else if(c>1){const t=f_(i),n=e.shape.map(((e,t)=>"coords.".concat(m_(t+d)))).join(", ");h="".concat(t,"(").concat(n,")")}else h="coords";const f="uniforms.".concat(r.charAt(0).toLowerCase()+r.slice(1),"Shape"),m="".concat(i,"D");return"\n  fn ".concat(s,"Index(globalIndex : i32) -> ").concat(h_(n)," {\n    var coords = getCoordsFromIndex(globalIndex);\n    ").concat(p,"\n    return ").concat(h_(n),"(").concat(r,"[getIndexFromCoords").concat(m,"(").concat(h,", ").concat(f,")").concat(1===n?"":" / ".concat(n),"]);\n  }\n\n  fn ").concat(s,"Coords(coordsIn : ").concat(u,") -> ").concat(h_(n)," {\n    var coords = coordsIn;\n    ").concat(p,"\n    return ").concat(h_(n),"(").concat(r,"[getIndexFromCoords").concat(m,"(").concat(h,", ").concat(f,")").concat(1===n?"":" / ".concat(n),"]);\n  }\n")}(e,t,n,a));return r}(e,t.shape,n.variableComponents?n.variableComponents[a]:n.outputComponent,n.dispatchLayout.x.length===t.shape.length))).join("\n");l.push(d),l.push(n.getUserCode());const p=C_(n);l.push(y_(p,n));const h=l.join("\n");return h}(n,{dtype:a.dtype,shape:a.shape},t),s=e.createShaderModule({code:o,label:t.constructor.name});let i=Jt().get("WEBGPU_PRINT_SHADER");if(""!==i){i=i.toLowerCase();const e=i.split(",");("all"===i||e.some((e=>t.shaderKey.toLowerCase().includes(e))))&&(console.group(t.shaderKey),console.debug(o),console.groupEnd())}return r?e.createComputePipelineAsync({compute:{module:s,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):e.createComputePipeline({compute:{module:s,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},h_=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"f32";switch(e){case 1:return"".concat(t);case 2:return"vec2<".concat(t,">");case 3:return"vec3<".concat(t,">");case 4:return"vec4<".concat(t,">");default:throw new Error("".concat(e,"-component ").concat(t," is not supported."))}};function f_(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function m_(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error("Index ".concat(e," is not yet supported"))}function g_(){let e;switch(arguments.length){case 0:e="\n        fn main()\n      ";break;case 1:e="\n        fn main(".concat(arguments.length<=0?void 0:arguments[0]," : i32)\n      ");break;default:throw Error("Unreachable")}return e}function y_(e,t){let n;return n="\n     ".concat(function(e){return"\n  @compute @workgroup_size(".concat(e.workgroupSize[0],", ").concat(e.workgroupSize[1],", ").concat(e.workgroupSize[2],")\n")}(t),"\n      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,\n                @builtin(global_invocation_id) GlobalId : vec3<u32>,\n                @builtin(local_invocation_index) LocalIndex: u32,\n                @builtin(workgroup_id) WorkgroupId : vec3<u32>,\n                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {\n        localId = LocalId;\n        localIndex = LocalIndex;\n        globalId = GlobalId;\n        numWorkgroups = NumWorkgroups;\n        workgroupId = WorkgroupId;\n        ").concat(e?"main(getGlobalIndex());":"main();",";\n      }\n    "),n}const b_="\n  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};\n  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {\n    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;\n  }\n  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {\n    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);\n    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);\n  }\n",x_="\n  fn isinf(val: f32) -> bool {\n    return abs(val) == uniforms.INFINITY;\n  }\n";function v_(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const n=e.length,a=""!==t?"get".concat(t.charAt(0).toUpperCase()+t.slice(1),"CoordsFromIndex"):"getCoordsFromIndex",r=""!==t?"".concat(t.charAt(0).toLowerCase()+t.slice(1),"ShapeStrides"):"outShapeStrides";if(n<=1)return"fn ".concat(a,"(index : i32) -> i32 { return index; }");const o=Wt(e),s=f_(n),i=[];for(let u=0;u<n;u++)i.push("d".concat(u));if(1===o.length)return"    fn ".concat(a,"(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.").concat(r,"; let d1 = index - d0 * uniforms.").concat(r,";\n      return vec2<i32>(d0, d1);\n    }");let c;return c="var index2 = index;"+o.map(((e,t)=>{const n="let ".concat(i[t]," = index2 / uniforms.").concat(r,".").concat(m_(t)),a=t===o.length-1?"let ".concat(i[t+1]," = index2 - ").concat(i[t]," * uniforms.").concat(r,".").concat(m_(t)):"index2 = index2 - ".concat(i[t]," * uniforms.").concat(r,".").concat(m_(t));return"".concat(n,"; ").concat(a,";")})).join(""),"\n    fn ".concat(a,"(index : i32) -> ").concat(s," {\n      ").concat(c,"\n      return ").concat(s,"(").concat(i.join(","),");\n    }\n  ")}function w_(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;case 5:t+="\n        fn getOutputIndexFromCoords(coords : vec5) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u;\n        }\n        ";break;case 6:t+="\n        fn getOutputIndexFromCoords(coords : vec6) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u * uniforms.outShapeStrides.u +\n              coords.v;\n        }\n        ";break;default:xt(!1,(()=>"Unsupported ".concat(e,"D shape")))}return t}function k_(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function S_(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if("float32"===e)return h_(t,"f32");if("int32"===e||"bool"===e)return h_(t,"i32");throw new Error("type ".concat(e," is not supported."))}function C_(e){return(!e.dispatchLayout.hasOwnProperty("y")||0===e.dispatchLayout.y.length)&&(!e.dispatchLayout.hasOwnProperty("z")||0===e.dispatchLayout.z.length)}const I_=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function N_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1];const[r,o,s]=[Math.ceil(I_(e.x.map((e=>t[e])))/(n[0]*a[0])),e.y?Math.ceil(I_(e.y.map((e=>t[e])))/(n[1]*a[1])):1,e.z?Math.ceil(I_(e.z.map((e=>t[e])))/(n[2]*a[2])):1];return[r,o,s]}function __(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return[8,8,1];const n=I_(e.x.map((e=>t[e]))),a=I_(e.y.map((e=>t[e])));return n<=4?[4,16,1]:a<=4?[16,4,1]:[16,16,1]}function T_(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return[4,4,1];const n=I_(e.x.map((e=>t[e]))),a=I_(e.y.map((e=>t[e])));return n<=4?[1,2,1]:a<=4?[2,1,1]:[2,2,1]}function E_(e){return{x:e.map(((e,t)=>t))}}function R_(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error("Unknown dtype ".concat(e))}function A_(){return!("undefined"===typeof globalThis||!globalThis.navigator||!globalThis.navigator.gpu)}function O_(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&xt("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGPU backend."))}))}var F_;!function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"}(F_||(F_={}));const D_=Jt().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD");class M_ extends ht{nextDataId(){return M_.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!A_())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new a_(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new r_(this.device),this.textureManager=new s_(this.device),this.tensorMap=new pt(this,qs()),Jt().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.tensorMap.has(e))return!0;const n=this.tensorMap.get(e);return t?n.refCount=0:n.refCount--,!(n.refCount>0)&&(null!=n.complexTensorInfos&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);t&&t.resource&&(t.external||(t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource)),t.resource=null)}refCount(e){if(this.tensorMap.has(e)){return this.tensorMap.get(e).refCount}return 0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){if(this.tensorMap.has(e)){this.tensorMap.get(e).refCount--}}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.tensorMap.set(a,{dtype:n,shape:t,values:e,refCount:1}),a}move(e,t,n,a,r){if("complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:a,shape:n,values:t,refCount:r})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach((e=>{this.releaseResource(e),this.tensorMap.delete(e)})),this.uniformPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e))),this.stagingPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e,!1))),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(_j){throw new Error(_j.message)}Object.keys(this.pipelineCache).map(((t,n)=>{this.pipelineCache[t]=e[n]}))}async getBufferData(e){if(Jt().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const t=e.size,n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const a=n.getMappedRange().slice(0);return n.unmap(),null!=n&&this.bufferManager.releaseBuffer(n),Jt().getBool("WEBGPU_USE_PROFILE_TOOL")&&(xt(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,t){const n=this.tensorMap.get(e);return n.values=t,n.values}readSync(e){const t=this.tensorMap.get(e),{values:n,complexTensorInfos:a}=t;if(null!=n||"string"===t.dtype)return n;if("complex64"===t.dtype){const t=Gt(pm(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)).buffer,"float32");return this.convertAndCacheOnCPU(e,t),t}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const r=["opaque","premultiplied"],o=t.resource,s=o.size;xt(s%4===0,(()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4."));const i=s/4,c=new ArrayBuffer(s),u=256,l=256,d=r.map((e=>new OffscreenCanvas(u,l))),p=new OffscreenCanvas(u,l);this.endComputePassEncoder(),d.map(((e,t)=>{const n=e.getContext("webgpu");return n.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:r[t]}),n.getCurrentTexture()})).map(((e,t)=>{const n=(n,a,s)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:o,bytesPerRow:1024,offset:s},{texture:e},{width:n,height:a}),this.submitQueue();const i=p.getContext("2d",{willReadFrequently:!0});i.clearRect(0,0,n,a),i.drawImage(d[t],0,0);const u=i.getImageData(0,0,n,a).data,l=r[t],h=new Uint8ClampedArray(c,s,n*a*4);for(let e=0;e<h.length;e+=4)if("premultiplied"===l)h[e+3]=u[e+3];else{const t=u[e];h[e]=u[e+2],h[e+1]=u[e+1],h[e+2]=t}},a=Math.floor(i/65536);let s=u,h=l,f=0;for(let r=0;r<a;r++)n(s,h,f),f+=262144;const m=i%65536;h=Math.floor(m/u),h>0&&(n(s,h,f),f+=1024*h),s=m%u,s>0&&n(s,1,f)}));const h=Gt(c,t.dtype);return this.convertAndCacheOnCPU(e,h),h}async read(e){if(!this.tensorMap.has(e))throw new Error("Tensor ".concat(e," was not registered!"));const t=this.tensorMap.get(e),{values:n}=t;if(null!=n)return n;let a;if("complex64"===t.dtype){const e=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]);a=pm(e[0],e[1])}else{a=Gt(await this.getBufferData(t.resource),t.dtype)}return this.convertAndCacheOnCPU(e,a),a}copyBuffer(e){const t=e.size,n=e.usage,a=this.bufferManager.acquireBuffer(t,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,a,0,t),this.submitQueue(),a}createTensorFromGPUData(e,t,n){let a=e.buffer;if("complex64"===n)throw new Error("Cannot write to a complex64 dtype. ");const r={id:this.nextDataId()};this.tensorMap.set(r,{dtype:n,shape:t,values:null,refCount:1,external:e.zeroCopy});const o=this.tensorMap.get(r),s=R_(o.dtype)*kt(o.shape);if(e.buffer.size<s)throw new Error("GPUBuffer size(".concat(e.buffer.size,") is smaller than tensor size(").concat(s,")!"));if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return!0!==e.zeroCopy&&(a=this.copyBuffer(a)),o.resource=a,qs().makeTensorFromDataId(r,t,n,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:n,dtype:a,shape:r,resource:o}=t;if("complex64"===a)throw new Error("Does not support reading buffer for complex64 dtype.");if(null==o)throw null!=n?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const s=o,i=s.size,c=s.usage,u=this.bufferManager.acquireBuffer(i,c);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(o,0,u,0,i),this.submitQueue();const l=this.makeTensorInfo(r,a),d=qs().makeTensorFromTensorInfo(l);return this.tensorMap.get(l.dataId).resource=u,{tensorRef:d,buffer:u}}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>jo(e)));return nc(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return nc(e.shape,e.dtype,t)}async time(e){this.supportTimestampQuery||this.hasTimestampQueryWarned||(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=qo(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=qo(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return s.kernelMs=bt(i),s.getExtraProfileInfo=()=>i.map(((e,t)=>({name:o[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,s}makeTensorInfo(e,t,n){"string"===t&&null!=n&&n.length>0&&Pt(n[0])&&(n=n.map((e=>Ho(e))));return{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const t=this.tensorMap.get(e.dataId).resource;return t instanceof GPUBuffer?{buffer:t}:t instanceof GPUTexture?t.createView():t}uploadToGPU(e){const t=this.tensorMap.get(e);if(null!=t.resource)return;const n=R_(t.dtype)*kt(t.shape);let a;const r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(a=this.bufferManager.acquireBuffer(n,r,!0),"unmapped"===a.mapState){const e=this.bufferManager.acquireBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),r=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(r).set(t.values):new Float32Array(r).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,a,0,n),this.stagingPendingDisposal.push(e)}else{const e=a.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(e).set(t.values):new Float32Array(e).set(t.values),a.unmap()}t.values=null}else a=this.bufferManager.acquireBuffer(n,r);t.resource=a}makeUniforms(e){let t=0,n=0;const a=[];let r=1;e.forEach((e=>{let o;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:o=4;break;case 2:o=8;break;case 3:case 4:case 5:case 6:o=16;break;default:xt(!1,(()=>"Unsupported ".concat(e.data.length,"D shape")))}5!==n&&6!==n||(o=16),o>r&&(r=o),t=Math.ceil(t/o)*o,n=e.data.length,a.push(t),t+=4*e.data.length})),t=Math.ceil(t/r)*r;const o=new ArrayBuffer(t);e.forEach(((e,t)=>{const n=a[t];"int32"===e.type?new Int32Array(o,n,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(o,n,e.data.length).set(e.data):new Float32Array(o,n,e.data.length).set(e.data)}));const s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(s,0,o,0,t),this.uniformPendingDisposal.push(s),{offset:0,size:t,buffer:s}}runWebGPUProgram(e,t,n,a,r){if(r||(r=this.makeTensorInfo(e.outputShape,n)),0===kt(r.shape))return this.tensorMap.get(r.dataId).values=Ot(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=((e,t)=>{const n=e.limits.maxComputeWorkgroupsPerDimension,a=t.dispatchLayout,r=t.dispatch;if(r.every((e=>e<=n)))return r;xt(r[0]>n&&void 0===a.y&&void 0===a.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let o=Math.ceil(Math.sqrt(r[0]));return o>n?(o=Math.ceil(Math.cbrt(r[0])),xt(o<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[o,o,o]):[o,o,1]})(this.device,e);const o=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}}));e.shaderKey=function(e,t,n){let a=e.shaderKey;if(null!=e.pixelsOpType)return a;const r=[],o=[];t.forEach((e=>{r.push(e.shape),o.push(e.dtype)})),r.push(n.shape),o.push(n.dtype);const s=t.map((e=>Ic(e.shape,n.shape))),i=t.map((e=>Ct(e.shape,n.shape))).join("_"),c=s.map((e=>e.join("_"))).join(";"),u=k_(e)?"flatDispatch":"";return a+="_"+(e.workgroupSize?e.workgroupSize.join(","):"")+r.map((e=>e.length)).join(",")+o.join(",")+e.variableNames.join(",")+c+i+u,a}(e,o,r);const s=Jt().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=p_(this.device,e,o,r,s)),e.pipeline=this.pipelineCache[e.shaderKey],s||this.recordAndSubmit(e,r,t,a),r}recordAndSubmit(e,t,n,a){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let r=[],o=[];const s="int32";if(null==e.pixelsOpType){r.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),o=n.concat(t).map((e=>e.shape));const e="int32";o.map((t=>{r.push({type:e,data:t});const n=Wt(t);r.push({type:e,data:n})}))}else{const e=Wt(t.shape);r.push({type:s,data:e})}if(e.size){const t=kt(e.outputShape);r.push({type:s,data:[e.outputComponent?t/e.outputComponent:t]})}a&&(r=[...r,...a]);const i=[this.tensorToBinding(t),...n.map((e=>this.tensorToBinding(e))),this.makeUniforms(r)];n.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(t.dataId);const c=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:i.map(((e,t)=>({binding:t,resource:e})))}),u=null!=this.activeTimers;this.ensureCommandEncoderReady();const l={};u&&this.supportTimestampQuery?(this.endComputePassEncoder(),null==this.querySet&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),l.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(l)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(l)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,c),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(u||Jt().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===d_.DRAW)&&(this.endComputePassEncoder(),u?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;null==this.queryResolveBuffer&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,8*this.querySetCount),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),n=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:D_;return Jt().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).resource&&kt(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(null!=this.querySet&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}var P_;M_.nextDataId=0,A_()&&$s("webgpu",(async()=>{const e={powerPreference:Jt().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},a=[];t.features.has("timestamp-query")&&a.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&a.push(["bgra8unorm-storage"]),n.requiredFeatures=a;const r=t.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};const o=await t.requestDevice(n),s=await t.requestAdapterInfo();return new M_(o,s)}),3),function(e){e[e.ADD=0]="ADD",e[e.ATAN2=1]="ATAN2",e[e.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",e[e.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",e[e.DIV=4]="DIV",e[e.ELU_DER=5]="ELU_DER",e[e.EQUAL=6]="EQUAL",e[e.FLOOR_DIV=7]="FLOOR_DIV",e[e.GREATER=8]="GREATER",e[e.GREATER_EQUAL=9]="GREATER_EQUAL",e[e.LESS=10]="LESS",e[e.LESS_EQUAL=11]="LESS_EQUAL",e[e.LOGICAL_AND=12]="LOGICAL_AND",e[e.LOGICAL_OR=13]="LOGICAL_OR",e[e.MAX=14]="MAX",e[e.MIN=15]="MIN",e[e.MOD=16]="MOD",e[e.MUL=17]="MUL",e[e.NOT_EQUAL=18]="NOT_EQUAL",e[e.POW=19]="POW",e[e.PRELU=20]="PRELU",e[e.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",e[e.SUB=22]="SUB"}(P_||(P_={}));const L_="let resultTemp = a + b;",z_="let resultTemp = atan2(a, b);",B_="let resultTemp = areal * breal - aimag * bimag;",W_="let resultTemp = areal * bimag + aimag * breal;",U_="let resultTemp = a / b;",V_="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",G_="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a == b);\n",H_="\n  let remainder =\n      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));\n  let quotient = (a - remainder) / b;\n  let resultTemp =\n      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));\n",j_="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a > b);\n",K_="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a >= b);\n",q_="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a < b);\n",X_="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a <= b);\n",Y_="return f32(a >= 1.0 && b >= 1.0);",Q_="return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));",Z_="return f32(a >= 1.0 || b >= 1.0);",$_="return min(vec4<f32>(a >= vec4<f32>(1.0)) +\n  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));",J_="let resultTemp = max(a, b);",eT="let resultTemp = min(a, b);",tT="\n  let isNaN = b == 0.;\n  var resultTemp = a % b;\n  resultTemp = select((resultTemp + b) % b, resultTemp,\n      (a < 0. && b < 0.) || (a >= 0. && b > 0.));\n",nT="\n  let isNaN = !vec4<bool>(b);\n  var resultTemp = vec4<f32>(a % b);\n  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {\n    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];\n  }\n  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {\n    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];\n  }\n  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {\n    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];\n  }\n  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {\n    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];\n  }\n",aT="let resultTemp = a * b;",rT="\n  var resultTemp = f32(a != b);\n  let valueForNaN = 1.0;\n",oT="\n  var resultTemp = vec4<f32>(a != b);\n  let valueForNaN = 1.0;\n",sT="\n  let isNaN = a < 0.0 && floor(b) < b;\n  if (b == 0.0) {\n    return 1.0;\n  }\n  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),\n      round(abs(b) % 2.0) != 1.0);\n",iT="\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);\n",cT="if (a < 0.0) { return b * a; }  return a;",uT="\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n",lT="let resultTemp = (a - b) * (a - b);",dT="let resultTemp = a - b;";function pT(e,t){let n;do{switch(e){case P_.ATAN2:n=z_;break;case P_.MAX:n=J_;break;case P_.MIN:n=eT;break;case P_.MOD:n=t?nT:tT;break;case P_.NOT_EQUAL:n=t?oT:rT;break;case P_.POW:n=t?iT:sT;break;default:continue}let a,r,o;return t?(a="isnanVec4",r="vec4<f32>",o="vec4<bool>"):(a="isnan",r="f32",o="bool"),"\n      let aIsNaN = ".concat(a,"(a);\n      let aPostLegalization = select(a, ").concat(r,"(42), aIsNaN);\n      let bIsNaN = ").concat(a,"(b);\n      let bPostLegalization = select(b, ").concat(r,"(42), bIsNaN);\n      let isNaN = false;\n      let valueForNaN = uniforms.NAN;\n      {\n        let a = aPostLegalization;\n        let b = bPostLegalization;\n        ").concat(n,"\n        return select(\n            resultTemp, ").concat(r,"(valueForNaN),\n            ").concat(o,"(isNaN) | aIsNaN | bIsNaN);\n      }\n    ")}while(0);switch(e){case P_.ADD:n=L_;break;case P_.COMPLEX_MULTIPLY_IMAG:n=W_;break;case P_.COMPLEX_MULTIPLY_REAL:n=B_;break;case P_.DIV:n=U_;break;case P_.ELU_DER:n=V_;break;case P_.EQUAL:n=G_;break;case P_.FLOOR_DIV:n=H_;break;case P_.GREATER:n=j_;break;case P_.GREATER_EQUAL:n=K_;break;case P_.LESS:n=q_;break;case P_.LESS_EQUAL:n=X_;break;case P_.LOGICAL_AND:return t?Q_:Y_;case P_.LOGICAL_OR:return t?$_:Z_;case P_.MUL:n=aT;break;case P_.PRELU:return t?uT:cT;case P_.SQUARED_DIFFERENCE:n=lT;break;case P_.SUB:n=dT}return"\n    ".concat(n,"\n    return resultTemp;\n  ")}var hT;!function(e){e[e.ABS=0]="ABS",e[e.ACOS=1]="ACOS",e[e.ACOSH=2]="ACOSH",e[e.ASIN=3]="ASIN",e[e.ASINH=4]="ASINH",e[e.ATAN=5]="ATAN",e[e.ATANH=6]="ATANH",e[e.CEIL=7]="CEIL",e[e.COS=8]="COS",e[e.COSH=9]="COSH",e[e.ELU=10]="ELU",e[e.ERF=11]="ERF",e[e.EXP=12]="EXP",e[e.EXPM1=13]="EXPM1",e[e.FLOOR=14]="FLOOR",e[e.IS_FINITE=15]="IS_FINITE",e[e.IS_INF=16]="IS_INF",e[e.IS_NAN=17]="IS_NAN",e[e.LINEAR=18]="LINEAR",e[e.LOG=19]="LOG",e[e.LOG1P=20]="LOG1P",e[e.LOGICAL_NOT=21]="LOGICAL_NOT",e[e.NEG=22]="NEG",e[e.RELU=23]="RELU",e[e.RELU6=24]="RELU6",e[e.LEAKYRELU=25]="LEAKYRELU",e[e.RECIPROCAL=26]="RECIPROCAL",e[e.ROUND=27]="ROUND",e[e.RSQRT=28]="RSQRT",e[e.SELU=29]="SELU",e[e.SIGMOID=30]="SIGMOID",e[e.SIGN=31]="SIGN",e[e.SIN=32]="SIN",e[e.SINH=33]="SINH",e[e.SOFTPLUS=34]="SOFTPLUS",e[e.SQRT=35]="SQRT",e[e.SQUARE=36]="SQUARE",e[e.STEP=37]="STEP",e[e.TAN=38]="TAN",e[e.TANH=39]="TANH",e[e.TO_INT=40]="TO_INT"}(hT||(hT={}));const fT="return abs(a);",mT="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return acos(a);\n",gT="\n  if (a < 1.) {\n    return uniforms.NAN;\n  }\n  return acosh(a);\n",yT="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return asin(a);\n",bT="return asinh(a);",xT="\n  if (isnan(a)) {\n    return uniforms.NAN;\n  }\n  return atan(a);\n",vT="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  if (a == 1.) {\n    return uniforms.INFINITY;\n  }\n  if (a == -1.) {\n    return -uniforms.INFINITY;\n  }\n  return atanh(a);\n",wT="return ceil(a);",kT="return cos(a);",ST="\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n",CT="return exp(a) - 1.0;",IT="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",NT="\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n",_T='\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  let p = '.concat(sm,";\n  let a1 = ").concat(im,";\n  let a2 = ").concat(cm,";\n  let a3 = ").concat(um,";\n  let a4 = ").concat(lm,";\n  let a5 = ").concat(dm,";\n\n  let sign = sign(a);\n  let absA = abs(a);\n  let t = 1.0 / (1.0 + p * absA);\n  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));\n"),TT="return exp(a);",ET="return floor(a);",RT="return f32(!isnan(a) && !isinf(a));",AT="return f32(isinf(a));",OT="return f32(isnan(a));",FT="return a;",DT="if (a < 0.0) { return uniforms.NAN; }\n  return log(a);",MT="\n  if (isnan(a)) { return a; }\n  return log(1.0 + a);\n",PT="return f32(!(a >= 1.0));",LT="return -a;",zT="if (a < 0.0) { return uniforms.alpha * a; } return a;",BT="\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n",WT="return 1.0 / a;",UT="return select(a, 0.0, a < 0.0);",VT="return clamp(a, 0.0, 6.0);",GT="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",HT="\n  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));\n",jT="return round(a);",KT="return inverseSqrt(a);",qT="\n  if (a >= 0.0) {\n    return ".concat(om," * a;\n  } else {\n    return ").concat(rm," * (exp(a) - 1.0);\n  }\n"),XT="return 1.0 / (1.0 + exp(-1.0 * a));",YT="return sign(a);",QT="return sin(a);",ZT="\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n",$T="\n  let epsilon = 1.1920928955078125e-7;\n  let threshold = log(epsilon) + 2.0;\n\n  let too_large = a > -threshold;\n  let too_small = a < threshold;\n  let exp_a = exp(a);\n\n  if (too_large) {\n    return a;\n  } else if (too_small) {\n    return exp_a;\n  } else {\n    return log(exp_a + 1.0);\n  }\n",JT="return sqrt(a);",eE="return a * a;",tE="\n  if (isnan(a)) {\n    return a;\n  }\n\n  return select(uniforms.stepAlpha, 1.0, a > 0.0);\n",nE="return tan(a);",aE="\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n",rE="return f32(i32((a)));";function oE(e,t){switch(e){case hT.ABS:return fT;case hT.ACOS:return mT;case hT.ACOSH:return gT;case hT.ASIN:return yT;case hT.ASINH:return bT;case hT.ATAN:return xT;case hT.ATANH:return vT;case hT.COS:return kT;case hT.COSH:return ST;case hT.CEIL:return wT;case hT.ELU:return t?NT:IT;case hT.ERF:return _T;case hT.EXP:return TT;case hT.EXPM1:return CT;case hT.FLOOR:return ET;case hT.IS_FINITE:return RT;case hT.IS_INF:return AT;case hT.IS_NAN:return OT;case hT.LINEAR:return FT;case hT.LOG:return DT;case hT.LOG1P:return MT;case hT.LOGICAL_NOT:return PT;case hT.NEG:return LT;case hT.LEAKYRELU:return t?BT:zT;case hT.RECIPROCAL:return WT;case hT.RELU:return t?HT:UT;case hT.RELU6:return t?GT:VT;case hT.ROUND:return jT;case hT.RSQRT:return KT;case hT.SELU:return qT;case hT.SIGMOID:return XT;case hT.SIGN:return YT;case hT.SIN:return QT;case hT.SINH:return ZT;case hT.SOFTPLUS:return $T;case hT.SQRT:return JT;case hT.SQUARE:return eE;case hT.STEP:return tE;case hT.TAN:return nE;case hT.TANH:return aE;case hT.TO_INT:return rE;default:throw new Error("BinaryType ".concat(e," is not implemented!"))}}function sE(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3;if(null===e)return"";let r="";if("linear"===e)r=oE(hT.LINEAR);else if("relu"===e)r=oE(hT.RELU,n);else if("elu"===e)r=oE(hT.ELU,n);else if("relu6"===e)r=oE(hT.RELU6,n);else if("prelu"===e)r=pT(P_.PRELU,n);else if("sigmoid"===e)r=oE(hT.SIGMOID,n);else{if("leakyrelu"!==e)throw new Error("Activation ".concat(e," has not been implemented for the WebGPU backend."));r=oE(hT.LEAKYRELU,n)}const o=h_(n?4:1);let s="";return s=t?"\n      fn activation(a : ".concat(o,", coords : vec").concat(a,"<i32>) -> ").concat(o," {\n        let b = getPreluActivationWeightsByOutputCoords(coords);\n        ").concat(r,"\n      }"):"\n      fn activation(a : ".concat(o,", coords : vec").concat(a,"<i32>) -> ").concat(o," {\n        ").concat(r,"\n      }"),s}function iE(e,t){return"\n      ".concat(e?"value = value + getBiasByOutputCoords(coords);":"","\n      ").concat(t?"value = activation(value, coords);":"","\n      ")}function cE(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;xt(e&&1===r||!e,(()=>"transposeA ".concat(e," is not compatible with component size ").concat(r)));const o="\n      ".concat(e?"value = getA(batch, col, row);":"value = getA(batch, row, col);","\n\n    "),s=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return"\n  fn mm_readA(batch: i32, row: i32, col: i32) -> ".concat(h_(r)," {\n    var value = ").concat(h_(r),"(0.0);\n    ").concat(n&&a?o:"\n    ".concat(e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])","\n    {\n      ").concat(o,"\n    }\n    "),"\n    return value;\n  }\n\n  fn mm_readB(batch: i32, row: i32, col: i32) -> ").concat(h_(r)," {\n    var value = ").concat(h_(r),"(0.0);\n    ").concat(s,"\n    return value;\n  }\n  ")}function uE(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>7&&void 0!==arguments[7]?arguments[7]:1;return"\n  ".concat(cE(n,a,r,o,arguments.length>6&&void 0!==arguments[6]&&arguments[6],s),"\n  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ").concat(h_(s),") {\n    ").concat(r&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)","\n    {\n      var value = valueIn;\n      let coords = vec3<i32>(batch, row, col);\n      ").concat(iE(e,t),"\n      setOutputAtCoords(coords[0], coords[1], coords[2], value);\n    }\n  }\n  ")}function lE(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6];const i=t[1]*e[1],c=t[0]*e[0],u=n?i:a,l=n?a:i,d=u/t[0],p=a/t[1],h=e[1],f=e[0];return xt((n&&4===d&&4===e[1]||!n&&(3===d||4===d))&&u%t[0]===0&&a%t[1]===0&&4===e[0],(()=>"If transposeA ".concat(n," is true, innerElementSize ").concat(d," and workPerThread[1] ").concat(e[1]," must be 4.\n          Otherwise, innerElementSize ").concat(d," must be 3 or 4.\n      tileAWidth ").concat(u," must be divisible by workgroupSize[0]").concat(t[0],". tileInner ").concat(a," must be divisible by workgroupSize[1] ").concat(t[1],". colPerThread ").concat(e[0]," must be 4."))),"\n  var<workgroup> mm_Asub : array<array<vec".concat(d,"<f32>, ").concat(u/d,">, ").concat(l,">;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ").concat(c/e[0],">, ").concat(a,">;\n\n  ").concat(g_()," {\n    let localRow = i32(localId.y);\n    let tileRow = localRow * ").concat(h,";\n    let tileCol = i32(localId.x);\n\n    let globalRow = i32(globalId.y) * ").concat(h,";\n    let globalCol = i32(globalId.x) * ").concat(f,";\n    let batch = ").concat(r?"0":"i32(globalId.z)",";\n    let batchA = ").concat(r||!s?"batch":"batch % uniforms.aShape[0]",";\n    let batchB = ").concat(r||!s?"batch":"batch % uniforms.bShape[0]",";\n    let globalRowStart = i32(workgroupId.y) * ").concat(i,";\n\n    let numTiles = ").concat(r?"".concat(Math.ceil(o/a)):"(uniforms.dimInner - 1) / ".concat(a," + 1"),";\n    var kStart = ").concat(r?"i32(globalId.z) * ".concat(o):"0",";\n\n    var acc: array<vec4<f32>, ").concat(h,">;\n\n    // Loop over shared dimension.\n    let tileRowB = localRow * ").concat(p,";\n    for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ").concat(h,"; innerRow++) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            ").concat(((e,t)=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol * ".concat(t,");\n        "):"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRow + innerRow,\n          kStart + inputCol * ".concat(t,");\n        "))(n,d),"\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < ").concat(p,"; innerRow++) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);\n        }\n        kStart = kStart + ").concat(a,";\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        ").concat(((e,t,n,a)=>{if(e)return"\n      for (var k = 0; k < ".concat(a,"; k++) {\n        let BCached0 = mm_Bsub[k][tileCol];\n        let ACached0 = mm_Asub[k][localRow];\n        for (var i = 0; i < ").concat(n,"; i++) {\n          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);\n        }\n      }");{let e="",r="";for(let n=0;n<t;n++)e+="let BCached".concat(n," = mm_Bsub[k * ").concat(t," + ").concat(n,"][tileCol];"),r+="acc[i] = fma(BCached".concat(n,", vec4<f32>(ACached[").concat(n,"]), acc[i]);");return"\n      for (var k = 0; k < ".concat(a/t,"; k++) {\n        ").concat(e,"\n        for (var i = 0; i < ").concat(n,"; i++) {\n          let ACached = mm_Asub[tileRow + i][k];\n          ").concat(r,"\n        }\n      }")}})(n,d,h,a),"\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < ").concat(h,"; innerRow++) {\n        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n    }\n  }")}const dE=e=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRowStart + inputRow,\n          kStart + inputCol);\n        ";function pE(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const c=e[1]*t[1],u=e[0]*t[0],l=n?c:a,d=n?a:c;xt(d%t[1]===0&&l%t[0]===0&&a%t[1]===0,(()=>"tileAHight ".concat(d," must be divisible by workgroupSize[1]").concat(t[1],", tileAWidth ").concat(l," must be divisible by workgroupSize[0]").concat(t[0],", tileInner ").concat(a," must be divisible by workgroupSize[1]").concat(t[1])));const p=d/t[1],h=l/t[0],f=a/t[1],m=e[1],g=e[0],y=s?"\n      let localRow = i32(localId.y);\n      let localCol = i32(localId.x);\n      let globalRowStart = i32(workgroupId.y) * ".concat(c,";\n      let globalColStart = i32(workgroupId.x) * ").concat(u,";\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var inputRow = localRow; inputRow < ").concat(d,"; inputRow = inputRow + ").concat(t[1],") {\n          for (var inputCol = localCol; inputCol < ").concat(l,"; inputCol = inputCol + ").concat(t[0],") {\n            ").concat(dE(n),"\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var inputRow = localRow; inputRow < ").concat(a,"; inputRow = inputRow + ").concat(t[1],") {\n              for (var inputCol = localCol; inputCol < ").concat(u,"; inputCol = inputCol + ").concat(t[0],") {\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n              kStart + inputRow,\n              globalColStart + inputCol);\n          }\n        }\n        kStart = kStart + ").concat(a,";\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        var BCached : array<f32, ").concat(g,">;\n        for (var k = 0; k < ").concat(a,"; k++) {\n          for (var inner = 0; inner < ").concat(g,"; inner++) {\n            BCached[inner] = mm_Bsub[k][localCol + inner * ").concat(t[0],"];\n          }\n          for (var innerRow = 0; innerRow < ").concat(m,"; innerRow++) {\n            let ACached = ").concat(n?"mm_Asub[k][localRow + innerRow * ".concat(t[1],"];"):"mm_Asub[localRow + innerRow * ".concat(t[1],"][k];"),"\n            for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n              acc[innerRow][innerCol] =\n                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n            }\n          }\n        }\n        workgroupBarrier();\n      }\n      for (var innerRow = 0; innerRow < ").concat(m,"; innerRow++) {\n        let gRow = globalRowStart + localRow + innerRow * ").concat(t[1],";\n        for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n          let gCol = globalColStart + localCol + innerCol * ").concat(t[0],";\n          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n        }\n      }\n      "):"\n  let tileRow = i32(localId.y) * ".concat(m,";\n  let tileCol = i32(localId.x) * ").concat(g,";\n\n  let globalRow = i32(globalId.y) * ").concat(m,";\n  let globalCol = i32(globalId.x) * ").concat(g,";\n  let globalRowStart = i32(workgroupId.y) * ").concat(c,";\n\n  let tileRowA = i32(localId.y) * ").concat(p,";\n  let tileColA = i32(localId.x) * ").concat(h,";\n  let tileRowB = i32(localId.y) * ").concat(f,";\n  // Loop over shared dimension.\n  for (var t = 0; t < numTiles; t++) {\n    // Load one tile of A into local memory.\n    for (var innerRow = 0; innerRow < ").concat(p,"; innerRow++) {\n      for (var innerCol = 0; innerCol < ").concat(h,"; innerCol++) {\n        let inputRow = tileRowA + innerRow;\n        let inputCol = tileColA + innerCol;\n        ").concat(dE(n),"\n      }\n    }\n\n    // Load one tile of B into local memory.\n    for (var innerRow = 0; innerRow < ").concat(f,"; innerRow++) {\n      for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n        let inputRow = tileRowB + innerRow;\n        let inputCol = tileCol + innerCol;\n        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n          kStart + inputRow,\n          globalCol + innerCol);\n      }\n    }\n    kStart = kStart + ").concat(a,";\n    workgroupBarrier();\n\n    // Compute acc values for a single thread.\n    var BCached : array<f32, ").concat(g,">;\n    for (var k = 0; k < ").concat(a,"; k++) {\n      for (var inner = 0; inner < ").concat(g,"; inner++) {\n        BCached[inner] = mm_Bsub[k][tileCol + inner];\n      }\n\n      for (var innerRow = 0; innerRow < ").concat(m,"; innerRow++) {\n        ").concat((e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(n),"\n        for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n          acc[innerRow][innerCol] =\n              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n        }\n      }\n    }\n\n    workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < ").concat(m,"; innerRow++) {\n    for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n      mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n          acc[innerRow][innerCol]);\n    }\n  }\n  ");return"\n    var<workgroup> mm_Asub : array<array<f32, ".concat(l,">, ").concat(d,">;\n    var<workgroup> mm_Bsub : array<array<f32, ").concat(u,">, ").concat(a,">;\n\n    ").concat(g_()," {\n      let batch = ").concat(r?"0":"i32(globalId.z)",";\n      let batchA = ").concat(r||!i?"batch":"batch % uniforms.aShape[0]",";\n      let batchB = ").concat(r||!i?"batch":"batch % uniforms.bShape[0]",";\n      let numTiles = ").concat(r?"".concat(Math.ceil(o/a)):"(uniforms.dimInner - 1) / ".concat(a," + 1"),";\n      var kStart = ").concat(r?"i32(globalId.z) * ".concat(o):"0",";\n\n      var acc : array<array<f32, ").concat(g,">, ").concat(m,">;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ").concat(m,"; innerRow++) {\n        for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n      ").concat(y,"\n    }\n  ")}class hE{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const c=n?e[1]:e[2];if(this.isVec4=(c%4===0&&!n||t[1]%4===0&&n)&&t[2]%4===0&&!a,this.outputComponent=this.isVec4?4:1,this.isVectorA=1===t[1]&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const e=function(e,t,n){const a=[8,8,1],r=[4,4,1];return arguments.length>3&&void 0!==arguments[3]&&arguments[3]||(e<=8&&(r[1]=1),t<=16&&n<=16&&(a[0]=4)),{workgroupSize:a,elementsPerThread:r}}(t[1],c,t[2],n);this.workgroupSize=e.workgroupSize,this.elementsPerThread=e.elementsPerThread}this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const u=null!=r,l=null!=s;u&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=i,this.transposeA=n,this.transposeB=a,this.addBias=u,this.activation=o,this.hasPreluActivationWeights=l,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],c),this.shaderKey="matMulPacked_".concat(this.elementsPerThread,"_").concat(n,"_").concat(a,"_").concat(this.activation,"_").concat(this.fitAOuter,"_").concat(this.fitBOuter,"_").concat(this.fitInner,"_").concat(this.isVec4,"_").concat(this.isVectorA,"_").concat(this.sequentialAccessByThreads)}getShapeFit(e,t,n){const a=this.workgroupSize[1]*this.elementsPerThread[1],r=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=4*this.workgroupSize[0]:this.tileInner=r;return[e%a===0,t%r===0,n%this.tileInner===0]}getUserCode(){const e="\n      ".concat(sE(this.activation,this.hasPreluActivationWeights,this.isVec4),"\n      ").concat(uE(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1),"\n      ").concat(this.isVec4?lE(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];xt(1===e[1]&&1===e[2],(()=>"A linear work group size is required. But got ".concat(e,".")));const n=4*e[0];return"\n    var<workgroup> mm_Asub : array<vec4<f32>, ".concat(e[0],">;\n\n    ").concat(g_()," {\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / ").concat(n," + 1;\n      let batch = i32(globalId.z);\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        let colA = t * ").concat(n," + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(").concat((e=>e?"\n      mm_readA(batchA, colA, globalRow),\n      mm_readA(batchA, colA + 1, globalRow),\n      mm_readA(batchA, colA + 2, globalRow),\n      mm_readA(batchA, colA + 3, globalRow)\n  ":"\n      mm_readA(batchA, globalRow, colA),\n      mm_readA(batchA, globalRow, colA + 1),\n      mm_readA(batchA, globalRow, colA + 2),\n      mm_readA(batchA, globalRow, colA + 3)\n  ")(t),");\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ").concat(n/4,"; k++) {\n          let rowB = t * ").concat(n," + k * 4;\n          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),\n                              mm_readB(batchB, rowB + 1, globalCol),\n                              mm_readB(batchB, rowB + 2, globalCol),\n                              mm_readB(batchB, rowB + 3, globalCol));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      mm_write(batch, globalRow, globalCol, acc);\n    }\n  ")}(this.workgroupSize,this.transposeA):pE(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0),"\n    ");return e}}class fE{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize);const s=null!=a,i=null!=o;s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=s,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey="matMulReduce_".concat(this.activation,"_").concat(t,"_").concat(n)}getUserCode(){var e;return"\n      ".concat(sE(this.activation,this.hasPreluActivationWeights),"\n      ").concat(uE(this.addBias,this.activation,this.transposeA,this.transposeB),"\n      ").concat((e=this.workgroupSize[0],"\n    var<workgroup> sumValues : array<f32, ".concat(e,">;\n    ").concat(g_()," {\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + ").concat(e,") {\n        let dataA = mm_readA(batchA, row, k);\n        let dataB = mm_readB(batchB, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = ").concat(e/2,"u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  ")),"\n    ")}}class mE{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];const c=null!=o;c&&this.variableNames.push("bias");const u=null!=i;u&&this.variableNames.push("preluActivationWeights"),this.transposeA=a,this.transposeB=r,this.addBias=c,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey="matMulSmallOutputSize_".concat(this.activation,"_").concat(a,"_").concat(r)}getUserCode(){return"\n      ".concat(sE(this.activation,this.hasPreluActivationWeights),"\n      ").concat(uE(this.addBias,this.activation,this.transposeA,this.transposeB),"\n      ").concat(function(e){const t=e[1],n=e[0],a=t>n?t:n;return"\n  var<workgroup> mm_Asub : array<array<f32, ".concat(a,">, ").concat(t,">;\n  var<workgroup> mm_Bsub : array<array<f32, ").concat(n,">, ").concat(a,">;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Read data from global memory to registers firstly, then store them into\n  // shared memory, so it is instruction-Level parallelism for arithmetic\n  // operations and others handle IO operations between barrier api, makes ALU\n  // and load/store units work simultaneously, could improves the performance.\n  ").concat(g_()," {\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n    let batchA = batch % uniforms.aShape[0];\n    let batchB = batch % uniforms.bShape[0];\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ").concat(a," + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = 0;\n    var regA = mm_readA(batchA, globalRow, globalColA);\n    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n    globalColA = globalColA + ").concat(a,";\n    globalRowB = globalRowB + ").concat(a,";\n\n    for (var t = 0; t < numTiles; t = t + 1) {\n      mm_Asub[tileRow][tileCol] = regA;\n      mm_Bsub[2 * tileRow][tileCol] = regB0;\n      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;\n\n      workgroupBarrier();\n\n      regA = mm_readA(batchA, globalRow, globalColA);\n      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n      globalColA = globalColA + ").concat(a,";\n      globalRowB = globalRowB + ").concat(a,";\n\n      for (var k = 0; k < ").concat(a,"; k = k + 1) {\n        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];\n      }\n      workgroupBarrier();\n    }\n\n    mm_write(batch, globalRow, globalCol, acc);\n  }\n  ")}(this.workgroupSize),"\n    ")}}class gE{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,xt(1===e[0],(()=>"MatMulSplitKProgram only supports batch = 1.")),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const r=(n&&this.outputShape[1]%4===0||!n&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=r?4:1,r||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=N_(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=a,this.shaderKey="matMulSplitK_".concat(n,"_").concat(a,"_").concat(this.elementsPerThread,"_").concat(this.outputComponent)}getUserCode(){const e=this.outputComponent;return"\n      ".concat(cE(!1,this.transposeB,!1,!1,!1,e),"\n      fn mm_write(batch: i32, row : i32, col : i32, value : ").concat(h_(e),") {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n          let coords = vec3<i32>(batch, row, col);\n          let flatIndex = getOutputIndexFromCoords(coords);\n          // The problem is that we should initialize output to zero before using.\n          // Otherwise, the original value will be added to the result.\n          for (var i = 0; i < ").concat(e,"; i = i + 1) {\n            ").concat(l_("&result[flatIndex + i]","".concat(e>1?"value[i]":"value"),"float32"),"\n          }\n        }\n      }\n      ").concat(4===e?lE(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):pE(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner),"\n    ")}}class yE{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=a,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey="biasActivation_".concat(n)}getUserCode(){return"\n    ".concat(sE(this.activation,this.hasPreluActivationWeights),"\n    ").concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        var value = getXByOutputIndex(index);\n        ").concat(iE(this.addBias,this.activation),"\n        setOutputAtIndex(index, value);\n      }\n    }\n    ")}}class bE{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return"\n    ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  ")}}function xE(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:o}=n;if(o=o||Lt(r),"string"===o){const e=Ft(o,kt(a));return e.fill(r),t.makeTensorInfo(a,o,e)}{const e=new bE(a),n=[{type:"float32",data:[r]}];return t.runWebGPUProgram(e,[],o,n)}}const vE={kernelName:da,backendName:"webgpu",kernelFunc:xE};function wE(e){const{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,o=kt(a.shape),s=Et(r,o),i=kt(s);return xt(o===i,(()=>"The new shape (".concat(s,") has ").concat(i," elements and the old ")+"shape (".concat(a.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:s,dtype:a.dtype}}const kE={kernelName:gr,backendName:"webgpu",kernelFunc:wE};function SE(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:u=null}=e;const l=t.shape.length,d=n.shape.length,p=a?t.shape[l-2]:t.shape[l-1],h=r?n.shape[d-1]:n.shape[d-2],f=a?t.shape[l-1]:t.shape[l-2],m=r?n.shape[d-2]:n.shape[d-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=kt(g),x=kt(y),v=_c(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);xt(p===h,(()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(h,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,p,f]:[b,f,p],k=r?[x,m,h]:[x,h,m],S=wE({inputs:{x:t},backend:o,attrs:{shape:w}}),C=wE({inputs:{x:n},backend:o,attrs:{shape:k}}),I=[S,C],N=Math.max(b,x),_=[S,C],T=[{type:"int32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[p]}];let E,R;const A=[N,f,m];let O=Jt().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(O<0){const e=Jt().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),t=e>0?e:o.thresholdToIncreaseWorkgroups,n=N*Math.ceil(f/32)*Math.ceil(m/32);O=n<=t||f<=8&&n<=2*t?N*f*m<=128?F_.MatMulReduceProgram:1===N&&h>=2e3?F_.MatMulSplitKProgram:F_.MatMulSmallOutputSizeProgram:F_.MatMulPackedProgram}switch(O){case F_.MatMulReduceProgram:E=new fE(A,a,r,s,u,i);break;case F_.MatMulSplitKProgram:if(R=xE({backend:o,attrs:{shape:A,value:0,dtype:t.dtype}}),E=new gE(A,h,a,r),s||u){R=o.runWebGPUProgram(E,_,t.dtype,T,R);const e=new yE(R.shape,s,u,i);let n=null;const a=[R];s&&a.push(s),i&&a.push(i),"leakyrelu"===u&&(n=[{type:"float32",data:[c]}],e.uniforms+=" alpha : f32,");const r=o.runWebGPUProgram(e,a,R.dtype,n);I.push(R);const l=wE({inputs:{x:r},backend:o,attrs:{shape:v}});I.push(r);for(const t of I)o.disposeData(t.dataId);return l}break;case F_.MatMulSmallOutputSizeProgram:E=new mE(w,k,A,a,r,s,u,i);break;case F_.MatMulPackedProgram:const e=o.adapterInfo.isIntel();E=new hE(w,A,a,r,s,u,i,e);break;default:throw new Error("Unsupported MatMulProgramType ".concat(O,"."))}s&&_.push(s),i&&_.push(i),"leakyrelu"===u&&(T.push({type:"float32",data:[c]}),E.uniforms+=" alpha : f32,"),R=o.runWebGPUProgram(E,_,t.dtype,T,R);const F=wE({inputs:{x:R},backend:o,attrs:{shape:v}});I.push(R);for(const D of I)o.disposeData(D.dataId);return F}const CE={kernelName:fo,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=a;return SE({a:r,b:o,transposeA:c,transposeB:u,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}};class IE{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=_c(t,n),this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="binaryOpComplex_".concat(e),this.op=e}getUserCode(){const e=pT(this.op,!1);return"\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ".concat(e,"\n      }\n\n      ").concat(g_("index")," {\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    ")}}class NE{constructor(e,t,n){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=_c(t,n),this.dispatchLayout=E_(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&n.length>1&&t[0]<128,this.useSharedMemoryWithB=n.length<=1&&t.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey="binary_".concat(e,"_").concat(this.lastDimensionSize),this.type="shared",this.workgroupSize=[256,1,1];else{const a=t.length>0&&t[t.length-1]%4===0,r=n.length>0&&n[n.length-1]%4===0;a&&r?(this.outputComponent=4,this.variableComponents=[4,4]):a&&(St(n)||1===n[n.length-1])||r&&(St(t)||1===t[t.length-1])?(this.outputComponent=4,this.variableComponents=a?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey="binary_".concat(e,"_").concat(this.variableComponents),this.workgroupSize=[128,1,1]}this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=4===this.outputComponent?"vec4<f32>":"f32",n="\n    fn binaryOperation(a : ".concat(t,", b : ").concat(t,") -> ").concat(t," {\n      ").concat(pT(this.op,4===this.outputComponent),"\n    };\n    ");if("shared"===this.type){const t=this.lastDimensionSize>1?"coords[".concat(this.outputShape.length-1,"]"):"0",a=this.useSharedMemoryWithB?"let a = getAByOutputIndex(index);\n          let b = sharedBuf[".concat(t,"];"):"let a = sharedBuf[".concat(t,"];\n          let b = getBByOutputIndex(index);");e="\n        ".concat(n,"\n        var<workgroup> sharedBuf : array<f32, ").concat(this.lastDimensionSize,">;\n        ").concat(g_("index")," {\n          // Fill in the shared memory buffer.\n          let localIndex = i32(localId.x);\n          if(localIndex < ").concat(this.lastDimensionSize,") {\n            sharedBuf[localIndex] = f32(").concat(this.useSharedMemoryWithB?"B":"A","[localIndex]);\n          }\n          workgroupBarrier();\n\n          if(index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            ").concat(a,"\n            setOutputAtIndex(index, binaryOperation(a, b));\n          }\n        }\n        ")}else e="\n       ".concat(n,"\n       ").concat(g_("index")," {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index * ").concat(this.outputComponent,");\n           let a = ").concat(t,"(getAByOutputCoords(coords));\n           let b = ").concat(t,"(getBByOutputCoords(coords));\n           setOutputAtIndex(index, binaryOperation(a, b));\n         }\n       }\n       ");return e}}function _E(e){const{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const TE={kernelName:va,backendName:"webgpu",kernelFunc:_E};function EE(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,o=n.makeTensorInfo(a.shape,"complex64"),s=n.tensorMap.get(o.dataId),i=_E({inputs:{x:a},backend:n}),c=_E({inputs:{x:r},backend:n});return s.complexTensorInfos={real:i,imag:c},o}const RE={kernelName:An,backendName:"webgpu",kernelFunc:EE};class AE{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";this.variableNames=["A"],this.size=!0;this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,""!==n&&(this.uniforms=n),this.shaderKey="unary_".concat(t)}getUserCode(){return"\n      fn unaryOperation(a : f32) -> f32 {\n        ".concat(oE(this.op,!1),"\n      }\n      ").concat(g_("index")," {\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      ")}}function OE(e){let{opType:t,cpuKernelImpl:n,dtype:a}=e;return e=>{let{inputs:r,backend:o}=e;const{x:s}=r,i=o,c=a||s.dtype;if(i.shouldExecuteOnCPU([s])&&null!=n){const e=i.tensorMap.get(s.dataId),t=n(e.values,c);return i.makeTensorInfo(s.shape,c,t)}const u=new AE(s.shape,t);return i.runWebGPUProgram(u,[s],c)}}function FE(e){let{opType:t,cpuKernelImpl:n,supportsComplex:a=!1,dtype:r}=e;return e=>{let{inputs:o,backend:s}=e;const{a:i,b:c}=o,u=s;if(a&&"complex64"===i.dtype){const e=u.tensorMap.get(i.dataId),n=u.tensorMap.get(c.dataId);let a,r;if(t!==P_.MUL)[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:i.shape},o={dataId:a.dataId,dtype:a.dtype,shape:c.shape},s=new NE(t,i.shape,c.shape);return u.runWebGPUProgram(s,[r,o],bs(n.dtype,a.dtype))}));else{const t=new IE(P_.COMPLEX_MULTIPLY_REAL,i.shape,c.shape),o=new IE(P_.COMPLEX_MULTIPLY_IMAG,i.shape,c.shape),s=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:i.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:c.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:c.shape}];a=u.runWebGPUProgram(t,s,"float32"),r=u.runWebGPUProgram(o,s,"float32")}const o=EE({inputs:{real:a,imag:r},backend:u});return u.disposeData(a.dataId),u.disposeData(r.dataId),o}const l=r||bs(i.dtype,c.dtype);if(("string"===i.dtype||"string"===c.dtype||u.shouldExecuteOnCPU([i,c]))&&null!=n){const e=u.tensorMap.get(i.dataId).values,t=u.tensorMap.get(c.dataId).values,a="string"===i.dtype?Km(e):e,r="string"===i.dtype?Km(t):t,[o,s]=n(i.shape,c.shape,a,r,l);return u.makeTensorInfo(s,l,o)}const d=new NE(t,i.shape,c.shape);return u.runWebGPUProgram(d,[i,c],l)}}const{mx:DE,ct:ME,YG:PE,hH:LE,z3:zE,sG:BE,uM:WE,vS:UE,C1:VE,qB:GE,GG:HE,lg:jE,rq:KE,cu:qE,WR:XE,px:YE,jC:QE,He:ZE,hE:$E,BF:JE,Dk:eR,cl:tR,_B:nR,qy:aR,Zy:rR,bu:oR,dH:sR,HS:iR,eW:cR,GK:uR,dl:lR,Dw:dR,xT:pR,_X:hR,wz:fR}=s,mR=OE({opType:hT.ABS,cpuKernelImpl:sR}),gR={kernelName:rn,backendName:"webgpu",kernelFunc:mR},yR=OE({opType:hT.ACOS}),bR={kernelName:on,backendName:"webgpu",kernelFunc:yR},xR=OE({opType:hT.ACOSH}),vR={kernelName:sn,backendName:"webgpu",kernelFunc:xR},wR=FE({opType:P_.ADD,cpuKernelImpl:DE,supportsComplex:!0}),kR={kernelName:cn,backendName:"webgpu",kernelFunc:wR};class SR{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>"T".concat(t))),this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach((t=>{e.push("let v".concat(t," = get").concat(t,"ByOutputCoords(coords);"))}));const t=this.variableNames.map((e=>"v".concat(e))).join(" + ");return"\n      ".concat(g_("index")," {\n        for (var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let flatIndex = index * ").concat(this.workPerThread," + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ").concat(e.join("\n        "),"\n            setOutputAtIndex(flatIndex, ").concat(t,");\n          }\n        }\n      }\n    ")}}const CR={kernelName:un,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;if(1===a.length)return _E({inputs:{x:a[0]},backend:n});const r=a.map((e=>e.dtype)).reduce(((e,t)=>bs(e,t))),o=a.map((e=>e.shape)),s=new SR(o);return n.runWebGPUProgram(s,a,r)}};class IR{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){xt(this.workgroupSize[0]===this.workgroupSize[1],(()=>"Must be a square tile, current tile shape is ".concat(this.workgroupSize[0]," x ").concat(this.workgroupSize[1])));const e=this.workgroupSize[0];return"\n      var<workgroup> tile : array<array<f32, ".concat(this.workgroupSize[0]+1,">, ").concat(this.workgroupSize[0],">;\n      ").concat(g_()," {\n        var x = i32(workgroupId.x) * ").concat(e," + i32(localId.x);\n        var y = i32(workgroupId.y) * ").concat(e," + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = f32(A[y * width + x]);\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * ").concat(e," + i32(localId.x);\n        y = i32(workgroupId.x) * ").concat(e," + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    ")}}class NR{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey="transpose_".concat(t)}getUserCode(){const e=f_(this.outputShape.length),t=_R(this.newDim);return"\n      ".concat(g_("index")," {\n        for(var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let flatIndex = index * ").concat(this.workPerThread," + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords").concat(this.outputShape.length,"D(\n              ").concat(e,"(").concat(t,"), uniforms.aShape)]);\n          }\n        }\n      }\n    ")}}function _R(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=new Array(t);for(let a=0;a<e.length;a++)n[e[a]]="coords.".concat(m_(a));return n.join()}function TR(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:o}=a,s=n,i=r.shape.length,c=new Array(i);for(let l=0;l<c.length;l++)c[l]=r.shape[o[l]];if(n.shouldExecuteOnCPU([r])){const e=s.tensorMap.get(r.dataId).values,t=hR(e,r.shape,r.dtype,o,c);return n.makeTensorInfo(c,r.dtype,t)}if(2===r.shape.length&&Ct(o,[1,0])){const e=new IR(r.shape,o);return s.runWebGPUProgram(e,[r],r.dtype)}const u=new NR(r.shape,o);return s.runWebGPUProgram(u,[r],r.dtype)}const ER={kernelName:oo,backendName:"webgpu",kernelFunc:TR};class RR{constructor(e,t,n){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[a]=Ql(this.inputShape,[1]);this.outputShape=0===a.length?[1]:a,e.inSize>=32768&&n>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey="reduce_".concat(t)}getUserCode(){let e="",t="0.0";const n=this.workgroupSize[0];"min"===this.reduceType||"max"===this.reduceType?(e="\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ".concat("min"===this.reduceType?"<":">"," bestValue)\n           {  bestValue = candidate; }"),t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType?(e=" bestValue = bestValue * candidate; ",t="1.0"):"all"===this.reduceType?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):"any"===this.reduceType&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const a="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);",r="\n         var<workgroup> xBestValues : array<f32, ".concat(n,">;\n       ");return"\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       ".concat(r,"\n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ").concat(1===this.outputShape.length?"outputCoords":"outputCoords[0]"," * uniforms.reduceSize;\n          return offset;\n       }\n       ").concat(g_("index")," {\n         let outputIndex = index / ").concat(n,";\n         let offset = getOffset(outputIndex);\n         var bestValue = ").concat(t,";\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), ").concat(n,"u);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + ").concat(n,") {\n           let candidate = f32(x[offset + k]);\n           ").concat(e,"\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), ").concat(n,"u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ").concat(e,"\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ").concat(a,"\n        }\n       }\n     ")}}const AR={mean:"float32",all:"bool",any:"bool"};function OR(e,t,n,a,r){const o=e.shape.length,s=[],i=Rt(t,e.shape);let c=i;const u=Jl(c,o);let l=e;null!=u&&(l=TR({inputs:{x:e},attrs:{perm:u},backend:r}),c=td(c.length,o),s.push(l)),$l(a,c,o);const[d,p]=Ql(l.shape,c);let h,f=d;if(n&&(f=Zl(d,i)),"max"!==a&&"prod"!==a||!r.shouldExecuteOnCPU([l])){const t=kt(p),n={windowSize:t,inSize:t,batchSize:kt(l.shape)/t,outSize:1},o=AR[a]||xs(e.dtype),i=[{type:"int32",data:[t]}],c=new RR(n,a,r.device.limits.maxComputeWorkgroupSizeX),u=r.runWebGPUProgram(c,[l],o,i);s.push(u),h=wE({inputs:{x:u},attrs:{shape:f},backend:r})}else{const t=r.tensorMap.get(l.dataId).values;switch(a){case"max":const n=QE(t,kt(p),f,e.dtype);h=r.makeTensorInfo(f,e.dtype,n);break;case"prod":const{outVals:o,outShape:s,outDtype:i}=nR(l.shape,l.dtype,t,c);h=r.makeTensorInfo(s,i,o);break;default:throw new Error("".concat(a," CPU implementation is not yet supported."))}}return s.forEach((e=>r.disposeData(e.dataId))),h}const FR={kernelName:ln,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:o,axis:s}=a;return OR(r,s,o,"all",n)}};const DR={kernelName:dn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:o,axis:s}=a;return OR(r,s,o,"any",n)}};class MR{constructor(e,t,n){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const a=[t];this.op="min"===n?"<":">";const[r,o]=Ql(e,a);this.outputShape=0===r.length?[1]:r,this.dispatchLayout=E_(this.outputShape),kt(o)<32?(this.type="plain",this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=N_(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey="argMinMax_".concat(this.op,"_").concat(this.type)}getUserCode(){const e=this.workgroupSize[0],t=()=>1===this.inputShape.length?"uniforms.xShape":"uniforms.xShape.".concat(m_(this.inputShape.length-1)),n=()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+="outputCoords.".concat(m_(t),",");return e};if("shared"===this.type){const a="\n      var<workgroup> xBestIndices : array<i32, ".concat(e,">;\n      var<workgroup> xBestValues : array<f32, ").concat(e,">;\n    ");return"\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      ".concat(a,"\n\n      ").concat(g_("index")," {\n        let outputIndex = index / ").concat(e,";\n        let reduceLength = ").concat(t(),";\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;\n            k = k + ").concat(e,") {\n          let candidate = getX(").concat(n()," k);\n          if (!isnan(candidate) && candidate ").concat(this.op," bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(reduceLength), ").concat(e,"u);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ").concat(this.op," bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    ")}return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let outputCoords = getCoordsFromIndex(index);\n          var bestIndex = 0;\n          var bestValue = getX(").concat(n()," 0);\n          let reduceLength = ").concat(t(),";\n          for (var i = 1; i < reduceLength; i++) {\n            let candidate = getX(").concat(n()," i);\n            if (candidate ").concat(this.op," bestValue) {\n              bestValue = candidate;\n              bestIndex = i;\n            }\n          }\n          setOutputAtIndexI32(index, bestIndex);\n        }\n      }\n      ")}}const PR={kernelName:pn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;let s=Rt(o,r.shape);const i=Jl(s,r.shape.length);let c=r;const u=[];null!=i&&(c=TR({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(c),s=td(s.length,c.shape.length)),$l("argMax",[s[0]],c.shape.length);const l=new MR(c.shape,s[0],"max"),d=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(l,[c],"int32",d);return u.forEach((e=>n.disposeData(e.dataId))),p}};const LR={kernelName:hn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;let s=Rt(o,r.shape);const i=Jl(s,r.shape.length);let c=r;const u=[];null!=i&&(c=TR({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(c),s=td(s.length,c.shape.length)),$l("argMin",[s[0]],c.shape.length);const l=new MR(c.shape,s[0],"min"),d=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(l,[c],"int32",d);return u.forEach((e=>n.disposeData(e.dataId))),p}},zR=OE({opType:hT.ASIN}),BR={kernelName:fn,backendName:"webgpu",kernelFunc:zR},WR=OE({opType:hT.ASINH}),UR={kernelName:mn,backendName:"webgpu",kernelFunc:WR},VR=OE({opType:hT.ATAN}),GR={kernelName:gn,backendName:"webgpu",kernelFunc:VR},HR=FE({opType:P_.ATAN2}),jR={kernelName:bn,backendName:"webgpu",kernelFunc:HR},KR=OE({opType:hT.ATANH}),qR={kernelName:yn,backendName:"webgpu",kernelFunc:KR};class XR{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.strides;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    ")}}class YR{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey="pool2D_".concat(t,"_").concat(n,"_").concat(a,"_").concat(r)}getUserCode(){let e;if("avg"===this.poolType)e="resultValue = resultValue + value; count = count + 1.0;";else if(this.computePositions){const t=this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC";e="let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ".concat(t,";\n      }")}else e="resultValue = max(value, resultValue);";let t="resultValue";"avg"===this.poolType&&(t="resultValue / max(count, 1.0)");return"\n      ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          ").concat(this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":"var resultValue = ".concat("avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)",";"),"\n\n          var count = 0.0;\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, d);\n              ").concat(e,"\n            }\n          }\n\n          ").concat(this.computePositions?"setOutputAtIndexI32(index, maxPosition);":"setOutputAtIndex(index, ".concat(t,");"),"\n        }\n      }\n    ")}}class QR{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey="pool3D_".concat(t,"_").concat(n,"_").concat(a,"_").concat(r)}getUserCode(){let e;if("avg"===this.poolType)e="resultValue += value; count += 1.0;";else if(this.computePositions){const t=this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC";e="let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ".concat(t,";\n      }")}else e="resultValue = max(value, resultValue);";let t="resultValue";"avg"===this.poolType&&(t="resultValue / max(count, 1.0)");return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords.x;\n          let ch = coords.u;\n\n          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n          let xDCorner = xCorner.x;\n          let xRCorner = xCorner.y;\n          let xCCorner = xCorner.z;\n\n          ").concat(this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":"var resultValue = ".concat("avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)",";"),"\n\n          var count = 0.0;\n          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {\n            let xD = xDCorner + wD;\n            if (xD < 0 || xD >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {\n              let xR = xRCorner + wR;\n              if (xR < 0 || xR >= uniforms.convDims.y) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {\n                let xC = xCCorner + wC;\n                if (xC < 0 || xC >= uniforms.convDims.z) {\n                  continue;\n                }\n\n                let value = getX(batch, xD, xR, xC, ch);\n                ").concat(e,"\n              }\n            }\n          }\n\n          ").concat(this.computePositions?"setOutputAtIndexI32(index, maxPosition);":"setOutputAtIndex(index, ".concat(t,");"),"\n        }\n      }\n    ")}}function ZR(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:o,keepDims:s}=a;return OR(r,o,s,"max",n)}const $R={kernelName:La,backendName:"webgpu",kernelFunc:ZR};function JR(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:o,axis:s}=a;return OR(r,s,o,"mean",n)}const eA={kernelName:Ha,backendName:"webgpu",kernelFunc:JR};function tA(e,t,n,a){if(1===t.filterWidth&&1===t.filterHeight&&Ct(t.inShape,t.outShape))return _E({inputs:{x:e},backend:a});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&1===t.batchSize&&"VALID"===t.padInfo.type){const r=e.shape.length,o=wE({inputs:{x:e},backend:a,attrs:{shape:[e.shape[r-3]*e.shape[r-2],e.shape[r-1]]}});let s;"avg"===n?s=JR({inputs:{x:o},backend:a,attrs:{axis:0,keepDims:!1}}):(xt("max"===n,(()=>"Invalid pool type ".concat(n))),s=ZR({inputs:{x:o},backend:a,attrs:{reductionIndices:0,keepDims:!1}}));const i=wE({inputs:{x:s},backend:a,attrs:{shape:t.outShape}});return a.disposeData(o.dataId),a.disposeData(s.dataId),i}let r;const o=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return 1===t.filterHeight&&1===t.filterWidth?r=new XR(t):("avg"===n?r=new YR(t,"avg"):(xt("max"===n,(()=>"Invalid pool type ".concat(n))),r=new YR(t,"max")),o.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),a.runWebGPUProgram(r,[e],e.dtype,o)}const nA={kernelName:xn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;return tA(r,Wu(r.shape,o,s,1,i,c),"avg",n)}};const aA={kernelName:wn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dataFormat:c,dimRoundingMode:u}=a,l=Uu(r.shape,o,s,[1,1,1],i,u,c),d=new QR(l,"avg"),p=[{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.front,l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.inDepth,l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth]}];return n.runWebGPUProgram(d,[r],r.dtype,p)}};class rA{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return"\n      ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n\n            dotProd = dotProd + dyValue * uniforms.avgMultiplier;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}class oA{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return"\n      ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              dotProd += dyValue * uniforms.avgMultiplier;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}const sA={kernelName:kn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=a,d=Uu(s.shape,i,c,1,u,l),p=new oA(d),h=1/(d.filterDepth*d.filterHeight*d.filterWidth),f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[h]}];return n.runWebGPUProgram(p,[r],s.dtype,f)}};const iA={kernelName:vn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o;O_([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:u}=a,l=Wu(s.shape,i,c,1,u),d=new rA(l),p=1/(l.filterHeight*l.filterWidth),h=[{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.effectiveFilterHeight-1-l.padInfo.top,l.effectiveFilterWidth-1-l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"float32",data:[p]}];return n.runWebGPUProgram(d,[r],s.dtype,h)}};const cA={kernelName:Sn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o}=t,{transposeA:s,transposeB:i}=a;return SE({a:r,b:o,transposeA:s,transposeB:i,backend:n})}};class uA{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms="start : ".concat(f_(e.length),", "),this.shaderKey="slice"}getUserCode(){const e=f_(this.rank),t=function(e){if(1===e)return"sourceLoc";if(e<=6)return lA.slice(0,e).map((e=>"sourceLoc.".concat(e))).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let n;n=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>"sourceLoc.".concat(lA[t]," = uniforms.start.").concat(m_(t)," + coords.").concat(lA[t],";")));return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          var sourceLoc : ").concat(e,";\n          let coords = getCoordsFromIndex(index);\n          ").concat(n.join("\n"),"\n          setOutputAtIndex(index, getSource(").concat(t,"));\n        }\n      }\n    ")}}const lA=["x","y","z","w","u","v"];function dA(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,size:s}=a,[i,c]=Cu(r,o,s);if(lu(r,i,c),n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.tensorMap.get(r.dataId),t=iR(e.values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,t)}if(0===kt(c))return n.makeTensorInfo(c,r.dtype,[]);const u=new uA(i,c),l=[{type:"int32",data:i}];return n.runWebGPUProgram(u,[r],r.dtype,l)}const pA={kernelName:Rr,backendName:"webgpu",kernelFunc:dA},hA={kernelName:Cn,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,crops:s}=a;xt(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));const i=o.reduce(((e,t)=>e*t)),c=Jf(r.shape,o,i),u=em(c.length,o.length),l=tm(r.shape,o,i),d=nm(s,o.length),p=am(l,s,o.length),h=[],f=wE({inputs:{x:r},backend:n,attrs:{shape:c}}),m=TR({inputs:{x:f},backend:n,attrs:{perm:u}}),g=wE({inputs:{x:m},backend:n,attrs:{shape:l}}),y=dA({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeData(e.dataId))),y}},fA="\n  fn bincount_write(index: i32, value: f32) {\n    ".concat(l_("&result[index]","value","float32"),"\n  }\n");class mA{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey="bincount_".concat(this.hasWeights,"_").concat(this.binaryOutput,"_").concat(this.rank)}getUserCode(){return"\n    ".concat(this.binaryOutput?"\n  fn bincount_write(index: i32, value: f32) {\n    atomicStore(&result[index], bitcast<i32>(value));\n  }\n":fA,"\n  ").concat(g_("index")," {\n    ").concat(1===this.rank?"if (index < uniforms.xShape) {\n      let indexVal = i32(getX(index));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ".concat(this.binaryOutput?1:this.hasWeights?"getW(index)":"1.",";\n        bincount_write(indexVal, value);\n      }\n    }"):"let coord = getCoordsFromIndex(index);\n    if (coordsInBounds2D(coord, uniforms.xShape)) {\n      let indexVal = i32(getX(coord[0], coord[1]));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ".concat(this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1.",";\n        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);\n      }\n    }"),"\n  }\n  ")}}const gA={kernelName:In,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s}=a,i=kt(r.shape),c=kt(o.shape)>0,u=[s],l=o.dtype,d=xE({backend:n,attrs:{shape:u,value:0,dtype:l}}),p=new mA([i],c),h=[{type:"int32",data:[s]}],f=c?[r,o]:[r];return n.runWebGPUProgram(p,f,l,h,d)}};class yA{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return"\n  ".concat(g_("index")," {\n    if (index < uniforms.size) {\n      var s0 = 1.0;\n      var s1 = 1.0;\n      let indexS0 = index - uniforms.size + uniforms.s0Size;\n      let indexS1 = index - uniforms.size + uniforms.s1Size;\n      if (indexS0 >= 0) {\n        s0 = getS0(indexS0);\n      }\n      if (indexS1 >= 0) {\n        s1 = getS1(indexS1);\n      }\n\n      if (s0 == 1.0) {\n        setOutputAtIndex(index, s1);\n      } else if (s1 == 1.0) {\n        setOutputAtIndex(index, s0);\n      } else if (s0 != s1) {\n        setOutputAtIndex(index, uniforms.NAN);\n      } else {\n        setOutputAtIndex(index, s0);\n      }\n    }\n  }\n  ")}}const bA={kernelName:_n,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t;if(n.shouldExecuteOnCPU([a,r])){const e=n.tensorMap.get(a.dataId),t=n.tensorMap.get(r.dataId),o=e.values,s=t.values,i=_c(Array.from(o),Array.from(s));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const o=kt(a.shape),s=kt(r.shape),i=Math.max(o,s),c=new yA(i),u=[{type:"int32",data:[o]},{type:"int32",data:[s]}];return n.runWebGPUProgram(c,[a,r],"int32",u)}},xA=FE({opType:P_.NOT_EQUAL,dtype:"bool",cpuKernelImpl:tR}),vA={kernelName:$a,backendName:"webgpu",kernelFunc:xA};function wA(e){const{inputs:t,backend:n}=e,{input:a}=t;return _E({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.real},backend:n})}const kA={kernelName:hr,backendName:"webgpu",kernelFunc:wA};const SA={kernelName:Tn,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:o}=n,{dtype:s}=r;if("complex64"===s){if("complex64"===o.dtype)return _E({inputs:{x:o},backend:a});const t=Hd(o.shape),n=e({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),r=EE({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeData(n.dataId),r}if("complex64"===o.dtype){const t=wA({inputs:{input:o},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:s}});return a.disposeData(t.dataId),n}if(!Dt(o.dtype,s)){const e=_E({inputs:{x:o},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(a.shouldExecuteOnCPU([o])){const e=a.tensorMap.get(o.dataId).values,[t,n,r]=ME(e,o.shape,o.dtype,s);return a.makeTensorInfo(t,n,r)}if("int32"===s)return function(e,t){const n=new AE(e.shape,hT.TO_INT),a=t.runWebGPUProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(o,a);if("bool"===s){const e=a.makeTensorInfo([],"bool",Ot("bool",1)),t=xA({inputs:{a:o,b:e},backend:a});return a.disposeData(e.dataId),t}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(s))}},CA=OE({opType:hT.CEIL,cpuKernelImpl:PE}),IA={kernelName:En,backendName:"webgpu",kernelFunc:CA};class NA{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return"\n      ".concat(g_("index")," {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue = clamp(\n              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));\n          clampedValue = select(clampedValue, value, isnanVec4(value));\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    ")}}class _A{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return"\n      ".concat(g_("index")," {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    ")}}const TA={kernelName:Rn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:o,clipValueMax:s}=a;let i;const c=[{type:"float32",data:[o]},{type:"float32",data:[s]}];return i=kt(r.shape)%4===0?new NA(r.shape):new _A(r.shape),n.runWebGPUProgram(i,[r],r.dtype,c)}};class EA{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return"\n    ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let re = abs(getRealByOutputIndex(index));\n        let im = abs(getImagByOutputIndex(index));\n        let mx = max(re, im);\n\n        // The length function in wgsl may be not underflow-safe on some GPUs.\n        // So the safe solution is to ensure underflow-safety in all cases.\n        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));\n      }\n    }\n  ")}}function RA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const AA={kernelName:On,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.tensorMap.get(a.dataId),o=new EA(a.shape),s=[RA(a,r.complexTensorInfos.real),RA(a,r.complexTensorInfos.imag)];return n.runWebGPUProgram(o,s,s[0].dtype)}};class OA{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Hf(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t))),this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+="offset".concat(t," : i32,");this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let a=1;a<this.offsetLength;a++)e.push("else if (yC < uniforms.offset".concat([a],"){ ")+"setOutputAtCoords(coords.x, coords.y, getT".concat(a,"(yR, yC - uniforms.offset").concat(a-1,")); }"));const t=this.offsetLength,n=this.offsetLength-1;e.push("else { setOutputAtCoords(coords.x, coords.y, getT".concat(t,"(yR, yC - uniforms.offset").concat(n,")); }"))}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return"\n      ".concat(g_("index")," {\n        for(var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let flatIndex = index * ").concat(this.workPerThread," + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ").concat(e.join("\n        "),"\n          }\n        }\n      }\n    ")}}function FA(e){const{inputs:t,backend:n}=e,{input:a}=t;return _E({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.imag},backend:n})}const DA={kernelName:ka,backendName:"webgpu",kernelFunc:FA};function MA(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>wA({inputs:{input:e},backend:n}))),r=e.map((e=>FA({inputs:{input:e},backend:n}))),o=MA(a,t,n),s=MA(r,t,n),i=EE({inputs:{real:o,imag:s},backend:n});return a.forEach((e=>n.disposeData(e.dataId))),r.forEach((e=>n.disposeData(e.dataId))),n.disposeData(o.dataId),n.disposeData(s.dataId),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=kt(e.shape.slice(t));return wE({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),o=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=Hf(r.map((e=>e.shape)),1),i=1===r[0].shape[0],c=LE(o,s,a,i),u=Hf(e.map((e=>e.shape)),t),l=n.makeTensorInfo(u,a,c);return r.forEach((e=>n.disposeData(e.dataId))),l}const o=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>o){const a=[];for(let s=0;s<e.length;s+=o){const r=e.slice(s,s+o);a.push(MA(r,t,n))}const r=MA(a,t,n);for(const e of a)n.disposeData(e.dataId);return r}const{tensors2D:s,outShape:i}=function(e,t,n){const a=Hf(e.map((e=>e.shape)),t),r=e.map((e=>wE({inputs:{x:e},backend:n,attrs:{shape:[kt(e.shape.slice(0,t)),kt(e.shape.slice(t))]}})));return{tensors2D:r,outShape:a}}(e,t,n),c=s.map((e=>e.shape)),u=new OA(c),l=[],d=new Array(c.length-1);if(d.length>0){d[0]=c[0][1],l.push({type:"int32",data:[d[0]]});for(let e=1;e<d.length;e++)d[e]=d[e-1]+c[e][1],l.push({type:"int32",data:[d[e]]})}const p=n.runWebGPUProgram(u,s,s[0].dtype,l);s.forEach((e=>n.disposeData(e.dataId)));const h=wE({inputs:{x:p},backend:n,attrs:{shape:i}});return n.disposeData(p.dataId),h}function PA(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,o=Rt(r,t[0].shape)[0];Gf(t.map((e=>e.shape)),o);const s=Hf(t.map((e=>e.shape)),o);if(0===kt(s))return n.makeTensorInfo(s,t[0].dtype,[]);const i=t.filter((e=>kt(e.shape)>0));return 1===i.length?_E({inputs:{x:i[0]},backend:n}):MA(i,o,n)}const LA={kernelName:Fn,backendName:"webgpu",kernelFunc:PA};class zA{constructor(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=__(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=T_(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),r&&(this.variableNames.push("bias"),this.variableComponents.push(4)),s&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=i,this.addBias=r,this.activation=o,this.hasPreluActivationWeights=s,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=a%this.tileInner===0,this.shaderKey="conv2DMM_".concat(this.elementsPerThread,"_").concat(this.activation,"}_").concat(this.fitAOuter,"_").concat(this.fitBOuter,"_").concat(this.fitInner,"_").concat(this.isVec4,"_").concat(this.innerElementSize,"_").concat(this.isChannelsLast,"_").concat(this.sequentialAccessByThreads)}getUserCode(){const e=this.isVec4?lE(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):pE(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1],n="\n    ".concat(function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:4,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:4,u=arguments.length>9&&void 0!==arguments[9]?arguments[9]:4;const l=e?"\n      let coord = vec4<i32>(batch, xRow, xCol, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, xRow, xCol);\n      ",d=e?"\n      let coords = vec4<i32>(\n        batch,\n        row / outWidth,\n        row % outWidth,\n        col);\n      ":"\n      let coords = vec4<i32>(\n        batch,\n        row,\n        col / outWidth,\n        col % outWidth);\n      ",p=e?"uniforms.xShape[1]":"uniforms.xShape[2]",h=e?"uniforms.xShape[2]":"uniforms.xShape[3]",f=e?"row":"col",m=e?"col":"row",g="\n      let inChannels = uniforms.wShape[2];\n      let outWidth = ".concat(e?"uniforms.outShape[2]":"uniforms.outShape[3]",";\n      let outRow = ").concat(f," / outWidth;\n      let outCol = ").concat(f," % outWidth;\n\n      let WRow = ").concat(m," / (uniforms.filterDims[1] * inChannels);\n      let WCol = ").concat(m," / inChannels % uniforms.filterDims[1];\n      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];\n      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];\n      let xCh = ").concat(m," % inChannels;\n      var resData = ").concat(h_(i),"(0.0);\n      // The bounds checking is always needed since we use it to pad zero for\n      // the 'same' padding type.\n      if (xRow >= 0 && xRow < ").concat(p," && xCol >= 0 && xCol < ").concat(h,") {\n        ").concat(l,"\n        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);\n        ").concat((e=>{switch(e){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error("innerElementSize ".concat(e," is not supported."))}})(i),"\n      }\n      return resData;"),y=e?t&&a?"\n      ".concat(g):"\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ".concat(g,"\n      }\n      return ").concat(h_(i),"(0.0);"):a&&n?"\n      ".concat(g):"\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ".concat(g,"\n      }\n      return ").concat(h_(i),"(0.0);"),b="".concat((e=>{switch(e){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error("innerElementSize ".concat(e," is not supported."))}})(c)),x=h_(u),v=h_(e?i:c),w=h_(e?c:i);return"\n      ".concat(sE(o,s,4===u,4),"\n      fn mm_readA(batch: i32, row : i32, col : i32) -> ").concat(v," {\n        ").concat(e?y:b,"\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> ").concat(w," {\n        ").concat(e?b:y,"\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ").concat(x,") {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n        {\n        var value = valueIn;\n        let outWidth = ").concat(e?"uniforms.outShape[2]":"uniforms.outShape[3]",";\n        ").concat(d,"\n        ").concat(iE(r,o),"\n        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }")}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2]),"\n    ").concat(e,"\n  ");return n}}class BA{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.shaderKey="conv2dnaive_".concat(this.activation,"_").concat(this.isChannelsLast)}getUserCode(){return"\n       ".concat(sE(this.activation,this.hasPreluActivationWeights,!1,4),"\n       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{\n         let coords = vec4<i32>(batch, row, col, chan);\n         if (coordsInBounds4D(coords, uniforms.xShape)) {\n           return  getX(batch, row, col, chan);\n         } else {\n          return 0.0;\n         }\n       }\n       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n         let coords = vec4<i32>(row, col, xChannel, outChannel);\n         if(coordsInBounds4D(coords, uniforms.wShape)) {\n           return getW(row, col, xChannel, outChannel);\n          } else {\n            return 0.0;\n          }\n       }\n       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {\n         let coords = ").concat(this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);","\n         if (coordsInBounds4D(coords, uniforms.outShape)) {\n           var value = valueIn;\n           ").concat(iE(this.addBias,this.activation),"\n           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);\n         }\n       }\n       ").concat(g_("index")," {\n         let coords = getOutputCoords();\n         let batch = coords[0];\n         let outChannel = ").concat(this.isChannelsLast?"coords[3];":"coords[1];","\n         let outRow = ").concat(this.isChannelsLast?"coords[1];":"coords[2];","\n         let outCol = ").concat(this.isChannelsLast?"coords[2];":"coords[3];","\n         var acc : f32 = 0.0;\n         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];\n             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];\n             for (var xChannel = 0; xChannel < ").concat(this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"," xChannel = xChannel + 1) {\n               ").concat(this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);","\n               let f = readFilt(row, col, xChannel, outChannel);\n               acc = acc + v * f;\n             }\n           }\n         }\n         writeResult(batch, outRow, outCol, outChannel, acc);\n       }\n     ")}}class WA{constructor(e,t){this.variableNames=["x"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n       inChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey="im2col_".concat(this.isChannelsLast)}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",a=this.isChannelsLast?"coords[2]":"coords[1]",r=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return"\n    ".concat(g_("index")," {\n      let coords = getCoordsFromIndex(index);\n      if(index < uniforms.size) {\n        let batch = coords[0];\n        let row = ").concat(n,";\n        let col = ").concat(a,";\n        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];\n        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);\n        var value = 0.0;\n        if(xRow < uniforms.xShape[").concat(e,"] && xRow >= 0) {\n          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -\n              uniforms.pads[1];\n          let xCol = offsetX + uniforms.dilations[1] * ((col %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n          let ch = col % uniforms.inChannels;\n          if(xCol < uniforms.xShape[").concat(t,"] && xCol >= 0) {\n            value = ").concat(r,";\n          }\n        }\n        setOutputAtIndex(index, value);\n      }\n    }\n   ")}}function UA(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function VA(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const u=null!=o,l=null!=s,d="channelsLast"===a.dataFormat,p=d&&a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&"VALID"===a.padInfo.type,h=Jt().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!h&&(p||1===a.filterHeight&&1===a.filterWidth&&1===a.dilationHeight&&1===a.dilationWidth&&1===a.strideHeight&&1===a.strideWidth&&("SAME"===a.padInfo.type||"VALID"===a.padInfo.type)))return function(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const u="channelsLast"===a.dataFormat,l=!u,d=[];let p,h;if(u&&a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&"VALID"===a.padInfo.type){const e=a.inHeight*a.inWidth*a.inChannels;p=wE({inputs:{x:t},backend:r,attrs:{shape:[1,a.batchSize,e]}}),h=wE({inputs:{x:n},backend:r,attrs:{shape:[1,e,a.outChannels]}})}else p=wE({inputs:{x:t},backend:r,attrs:{shape:u?[a.batchSize,a.inHeight*a.inWidth,a.inChannels]:[a.batchSize,a.inChannels,a.inHeight*a.inWidth]}}),h=wE({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});if(d.push(p),d.push(h),null!=s){const e=UA(s.shape,u);null!=e&&(s=wE({inputs:{x:s},backend:r,attrs:{shape:e}}),d.push(s))}if(null!=o){const e=UA(o.shape,u);null!=e&&(o=wE({inputs:{x:o},backend:r,attrs:{shape:e}}),d.push(o))}const f=SE({a:u?p:h,b:u?h:p,transposeA:l,transposeB:!1,backend:r,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i}),m=wE({inputs:{x:f},backend:r,attrs:{shape:a.outShape}});d.push(f);for(const g of d)r.disposeData(g.dataId);return m}({x:t,filter:n,convInfo:a,backend:r,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i});const f=Jt().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),m=f>-1?f:r.thresholdToIncreaseWorkgroups,g=a.batchSize*Math.ceil(a.outHeight*a.outWidth/32)*Math.ceil(a.outChannels/32);if(Jt().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||g<=m)return function(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const{filterWidth:u,filterHeight:l,inChannels:d,strideWidth:p,strideHeight:h,padInfo:f,outWidth:m,outHeight:g,dilationWidth:y,dilationHeight:b,dataFormat:x}=a,v="channelsLast"===x,w=u*l*d,k=g*m,S=v?[a.batchSize,k,w]:[a.batchSize,w,k],C=new WA(S,v),I=[{type:"int32",data:[f.top,f.left]},{type:"int32",data:[h,p]},{type:"int32",data:[b,y]},{type:"int32",data:[m]},{type:"int32",data:[d*u]},{type:"int32",data:[d]}],N=r.runWebGPUProgram(C,[t],t.dtype,I),_=[];_.push(N);const T=wE({inputs:{x:n},backend:r,attrs:{shape:[1,w,-1]}});if(_.push(T),null!=s){const e=UA(s.shape,v);null!=e&&(s=wE({inputs:{x:s},backend:r,attrs:{shape:e}}),_.push(s))}if(null!=o){const e=UA(o.shape,v);null!=e&&(o=wE({inputs:{x:o},backend:r,attrs:{shape:e}}),_.push(o))}const E=SE({a:v?N:T,b:v?T:N,transposeA:!v,transposeB:!1,backend:r,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i}),R=wE({inputs:{x:E},backend:r,attrs:{shape:a.outShape}});_.push(E);for(const A of _)r.disposeData(A.dataId);return R}({x:t,filter:n,convInfo:a,backend:r,bias:o,preluActivationWeights:s,leakyreluAlpha:i,activation:c});let y;const b=[a.padInfo.top,a.padInfo.left],x=[{type:"int32",data:[a.filterHeight,a.filterWidth]},{type:"int32",data:[...b]},{type:"int32",data:[a.strideHeight,a.strideWidth]},{type:"int32",data:[a.dilationHeight,a.dilationWidth]}];if(h)y=new BA(a,u,c,l);else{const e=d?a.outHeight*a.outWidth:a.outChannels,t=d?a.outChannels:a.outHeight*a.outWidth,n=a.filterHeight*a.filterWidth*a.inChannels;x.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[n]});const o=r.adapterInfo.isIntel();y=new zA(a,e,t,n,u,c,l,o)}const v=[],w=[t,n];u&&(d||1!==o.shape.length||(o=wE({inputs:{x:o},backend:r,attrs:{shape:[o.shape[0],1,1]}}),v.push(o)),w.push(o)),l&&(d||1!==s.shape.length||(s=wE({inputs:{x:s},backend:r,attrs:{shape:[s.shape[0],1,1]}}),v.push(s)),w.push(s)),"leakyrelu"===c&&(x.push({type:"float32",data:[i]}),y.uniforms+=" alpha : f32,");const k=r.runWebGPUProgram(y,w,t.dtype,x);for(const S of v)r.disposeData(S.dataId);return k}const GA={kernelName:Dn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dataFormat:c,dilations:u,dimRoundingMode:l}=n,d=$u(c);return VA({x:r,filter:o,convInfo:Vu(r.shape,o.shape,s,u,i,l,!1,d),backend:a})}};class HA{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey="conv2DDerInput_".concat(this.isChannelsLast,"_").concat(this.isVec4,"_").concat(this.workPerThread)}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1,a="\n    ".concat(g_()," {\n      let batch = i32(globalId.z) / uniforms.outShape[1];\n      let r = i32(globalId.z) % uniforms.outShape[1];\n      let c = i32(globalId.y) * ").concat(this.workPerThread,";\n      let d1 = i32(globalId.x) * 4;\n\n      let dyCorner = vec2<i32>(r, c) - uniforms.pads;\n\n      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n      // ? = to be determined. : = across all values in that axis.\n      var dotProd: array<vec4<f32>, ").concat(this.workPerThread,">;\n      for (var i = 0; i < ").concat(this.workPerThread,"; i++) {\n        dotProd[i] = vec4<f32>(0.0);\n      }\n      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);\n        let wRPerm = uniforms.filterDims.x - 1 - wR;\n        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||\n            fract(dyR) > 0.0) {\n          continue;\n        }\n        let idyR = i32(dyR);\n\n        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);\n          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);\n          let wCPerm = uniforms.filterDims.y - 1 - wC;\n          var bDyCVal = true;\n          var bDyCVal2 = true;\n          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC) > 0.0) {\n            bDyCVal = false;\n          }\n          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC2) > 0.0) {\n            bDyCVal2 = false;\n          }\n\n          let idyC = i32(dyC);\n          let idyC2 = i32(dyC2);\n          if (bDyCVal && bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n              xValue = getDy(batch, idyR, idyC2, d2);\n              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),\n                                                  dot(xValue, wValue1),\n                                                  dot(xValue, wValue2),\n                                                  dot(xValue, wValue3));\n            }\n          } else if (bDyCVal) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n            }\n          } else if (bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC2, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[1] = dotProd[1] + tmpval;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n        let coords = vec4<i32>(batch, r, c + i, d1);\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n        }\n      }\n    }\n    ");return this.isVec4?"\n    ".concat(a,"\n    "):"\n    ".concat(g_("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[").concat(n,"];\n\n        let dyCorner = vec2<i32>(coords[").concat(e,"], coords[").concat(t,"]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              let xValue = ").concat(this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)",";\n              let wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd = dotProd + xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}class jA{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey="conv2DDerFilter_".concat(this.isChannelsLast)}getUserCode(){return"\n    ".concat(g_("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let d2 = coords[3];\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b = b + 1) {\n          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              if (").concat(this.isChannelsLast,") {\n                let dyValue = getDy(b, yR, yC, d2);\n                let xValue = getX(b, xR, xC, d1);\n                dotProd = dotProd + xValue * dyValue;\n              } else {\n                let dyValue = getDy(b, d2, yR, yC);\n                let xValue = getX(b, d1, xR, xC);\n                dotProd = dotProd + xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}class KA{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,\n       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return"\n    ".concat(g_("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wF = coords.x;\n        let wR = coords.y;\n        let wC = coords.z;\n        let d1 = coords.w;\n        let d2 = coords.u;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yF = 0; yF < uniforms.outDepth; yF++) {\n            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];\n            if (xF < 0 || xF >= uniforms.inDepth) {\n              continue;\n            }\n\n            for (var yR = 0; yR < uniforms.outHeight; yR++) {\n              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];\n              if (xR < 0 || xR >= uniforms.inHeight) {\n                continue;\n              }\n\n              for (var yC = 0; yC < uniforms.outWidth; yC++) {\n                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];\n                if (xC < 0 || xC >= uniforms.inWidth) {\n                  continue;\n                }\n\n                let dyValue = getDy(b, yF, yR, yC, d2);\n                let xValue = getX(b, xF, xR, xC, d1);\n                dotProd += xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}class qA{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return"\n    ".concat(g_("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let d1 = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyFCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);\n          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {\n            continue;\n          }\n          let idyF = i32(dyF);\n\n          let wFPerm = uniforms.filterDims[0] - 1 - wF;\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            let wRPerm = uniforms.filterDims[1] - 1 - wR;\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let wCPerm = uniforms.filterDims[2] - 1 - wC;\n\n              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {\n                let xValue = getDy(batch, idyF, idyR, idyC, d2);\n                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}const XA={kernelName:Mn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,dataFormat:c,dimRoundingMode:u,filterShape:l}=a,d=$u(c),p=Vu(r.shape,l,s,1,i,u,!1,d),h=new jA(p),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]}];return n.runWebGPUProgram(h,[r,o],r.dtype,f)}};class YA{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,xt("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=__(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=T_(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey="conv2DDerInputMM_".concat(this.isVec4,"_").concat(this.elementsPerThread)}getUserCode(){const e=this.isVec4?lE(this.elementsPerThread,this.workgroupSize):pE(this.elementsPerThread,this.workgroupSize),t="\n    ".concat(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:4;const t="\n      let outRow = row / uniforms.outShape[2];\n      let outCol = row % uniforms.outShape[2];\n\n      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n        return ".concat(h_(e),"(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n        return ").concat(h_(e),"(0.0);\n      }\n      let coord = vec4<i32>(\n          batch,\n          i32(xR),\n          i32(xC),\n          col % uniforms.outBackprop[3]);\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)/").concat(e,"];"),n="if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ".concat(t,"\n      }\n      return ").concat(h_(e),"(0.0);");return"\n  fn mm_readA(batch: i32, row : i32, col : i32) -> ".concat(h_(e)," {\n    ").concat(n,"\n  }\n\n  fn mm_readB(batch: i32, row : i32, col : i32) -> ").concat(h_(e)," {\n    let coordX = uniforms.filterDims.x - 1 -\n        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let coordY = uniforms.filterDims.y - 1 -\n        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n        coordX >= 0 && coordY >= 0) {\n      let rowInner = row % uniforms.outBackprop[3];\n      let coord = vec4<i32>(coordX, coordY, col, rowInner);\n      ").concat((e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return"\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            ";default:throw new Error("innerElementSize ".concat(e," is not supported."))}})(e),"\n    }\n    return ").concat(h_(e),"(0.0);\n  }\n\n  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ").concat(h_(e),") {\n    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/").concat(e,"] = value;\n    }\n  }")}(this.isVec4?4:1),"\n    ").concat(e,"\n    ");return t}}const QA={kernelName:Pn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{inputShape:s,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=a,d=$u(u),p=Vu(s,o.shape,i,1,c,l,!1,d),h=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}];let f;if(Jt().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||"channelsLast"!==p.dataFormat)f=new HA(p);else{f=new YA(p);const e=p.inHeight*p.inWidth,t=p.inChannels,n=p.filterHeight*p.filterWidth*p.outChannels;h.push({type:"uint32",data:[e]},{type:"uint32",data:[t]},{type:"uint32",data:[n]})}return n.runWebGPUProgram(f,[r,o],"float32",h)}};class ZA{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return"\n    ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords.x;\n        let d2 = coords.u;\n\n        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n        let xFCorner = xFRCCorner.x;\n        let xRCorner = xFRCCorner.y;\n        let xCCorner = xFRCCorner.z;\n\n        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;\n        let inputDepthVec4Remainder = uniforms.xShape.u % 4;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let xF = xFCorner + wF * uniforms.dilations[0];\n          if (xF < 0 || xF >= uniforms.xShape.y) {\n            continue;\n          }\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let xR = xRCorner + wR * uniforms.dilations[1];\n            if (xR < 0 || xR >= uniforms.xShape.z) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let xC = xCCorner + wC * uniforms.dilations[2];\n              if (xC < 0 || xC >= uniforms.xShape.w) {\n                continue;\n              }\n\n              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {\n                let xValues = vec4<f32>(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                let wValues = vec4<f32>(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (inputDepthVec4Remainder == 1) {\n                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2);\n              } else if (inputDepthVec4Remainder == 2) {\n                let xValues = vec2<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)\n                );\n                let wValues = vec2<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (inputDepthVec4Remainder == 3) {\n                let xValues = vec3<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)\n                );\n                let wValues = vec3<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }")}}const $A={kernelName:Ln,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a,u=Gu(r.shape,o.shape,s,c,i),l=[u.padInfo.front,u.padInfo.top,u.padInfo.left],d=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...l]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],p=new ZA(u),h=bs(r.dtype,o.dtype);return n.runWebGPUProgram(p,[r,o],h,d)}};const JA={kernelName:zn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,filterShape:c}=a,u=Gu(r.shape,c,s,1,i),l=new KA(u),d=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return n.runWebGPUProgram(l,[r,o],o.dtype,d)}};const eO={kernelName:Bn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{strides:s,pad:i,inputShape:c}=a,u=Gu(c,o.shape,s,1,i),l=new qA(u),d=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return n.runWebGPUProgram(l,[r,o],r.dtype,d)}},tO=OE({opType:hT.COS}),nO={kernelName:Wn,backendName:"webgpu",kernelFunc:tO},aO=OE({opType:hT.COSH}),rO={kernelName:Un,backendName:"webgpu",kernelFunc:aO};class oO{constructor(e,t,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId="bilinear"===a?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey="cropAndResize_".concat(this.methodId,"_").concat(this.cropHeightBiggerThan1,"_").concat(this.cropWidthBiggerThan1)}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,a,r]=this.cropHeightBiggerThan1?["(".concat(e," / f32(uniforms.outShape[1] - 1))"),"(y2-y1) * height_ratio","y1*".concat(e," + f32(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(e)],[o,s,i]=this.cropWidthBiggerThan1?["(".concat(t," / f32(uniforms.outShape[2] - 1))"),"(x2-x1) * width_ratio","x1*".concat(t," + f32(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(t)];return"\n    ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(").concat(n,");\n        let width_ratio = f32(").concat(o,");\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ").concat(a,";\n        let width_scale = ").concat(s,";\n        let in_y = ").concat(r,";\n        if( in_y < 0.0 || in_y > ").concat(e," ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ").concat(i,";\n        if( in_x < 0.0 || in_x > ").concat(t," ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(").concat(this.methodId," == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    ")}}const sO={kernelName:Hn,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:o,boxInd:s}=t,{cropSize:i,method:c,extrapolationValue:u}=a,l=new oO(r.shape[3],o.shape,i,c),d=[{type:"float32",data:[u]}];return n.runWebGPUProgram(l,[r,o,s],"float32",d)}};var iO;!function(e){e.Prod="*",e.Sum="+"}(iO||(iO={}));class cO{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=a,this.op=e,this.shaderKey="cum_".concat(this.op,"_").concat(this.exclusive,"_").concat(this.reverse)}getUserCode(){const e=this.outputShape.length,t=this.op===iO.Prod?"1.0":"0.0",n=this.exclusive?t:"getX(".concat(uO(e,"coords",this.op),")"),a=this.outputShape[this.outputShape.length-1];let r="",o="";return this.exclusive?(r=this.reverse?"end != ".concat(a-1):"end != 0",o=this.reverse?"end + 1":"end - 1"):(r=this.reverse?"end + pow2 < ".concat(a):"end >= pow2",o=this.reverse?"end + pow2":"end - pow2"),"\n      ".concat(g_("index")," {\n       if (index < uniforms.size) {\n         var coords = getCoordsFromIndex(index);\n\n         let end = ").concat(lO(e,"coords",this.op),";\n         var val = ").concat(n,";\n         let pow2 = i32(pow(2.0, uniforms.index));\n         if (").concat(r,") {\n           let idx = ").concat(o,";\n           ").concat(lO(e,"coords",this.op)," = idx;\n           val ").concat(this.op,"= getX(").concat(uO(e,"coords",this.op),");\n         }\n         setOutputAtIndex(index, val);\n       }\n      }\n    ")}}function uO(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function lO(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function dO(e,t,n,a,r,o){const s=t.shape.length,i=Jl([a],s);let c=t;null!=i&&(c=TR({inputs:{x:t},backend:n,attrs:{perm:i}}));const u=td(1,s)[0];if(u!==s-1)throw new Error("WebGPU cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const l=c.shape[u];let d=_E({inputs:{x:c},backend:n});for(let p=0;p<=Math.ceil(Math.log2(l))-1;p++){const t=new cO(e,c.shape,!1,o),a=d,r=[{type:"float32",data:[p]}];d=n.runWebGPUProgram(t,[d],d.dtype,r),n.disposeData(a.dataId)}if(r){const t=new cO(e,c.shape,r,o),a=d,s=[{type:"float32",data:[0]}];d=n.runWebGPUProgram(t,[d],d.dtype,s),n.disposeData(a.dataId)}if(null!=i){const e=TR({inputs:{x:d},backend:n,attrs:{perm:ed(i)}});return n.disposeData(d.dataId),n.disposeData(c.dataId),e}return d}const pO={kernelName:Vn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return dO(iO.Prod,r,n,o,s,i)}};const hO={kernelName:Gn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return dO(iO.Sum,r,n,o,s,i)}};const fO={kernelName:jn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s,binaryOutput:i}=a,c=1===r.shape.length,u=kt(o.shape)>0,l=o.dtype,d=c?[r.shape[0]]:[r.shape[0],r.shape[1]],p=xE({backend:n,attrs:{shape:c?[s]:[r.shape[0],s],value:0,dtype:l}}),h=new mA(d,u,i),f=[{type:"int32",data:[s]}],m=u?[r,o]:[r];return n.runWebGPUProgram(h,m,l,f,p)}};class mO{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthToSpace_".concat(t),this.dataFormat=t}getUserCode(){return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ").concat(this.getHeightCoordString(),";\n          let w = ").concat(this.getWidthCoordString(),";\n          let d = ").concat(this.getDepthCoordString(),";\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ").concat(this.getOutputDepthSize(),";\n          let in_d = d + offset_d;\n\n          let rlt = ").concat(this.getInputSamplingString(),";\n          setOutputAtIndex(index, rlt);\n        }\n      }")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const gO={kernelName:Kn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:o,dataFormat:s}=a,i=r.shape[0],c=("NHWC"===s?r.shape[1]:r.shape[2])*o,u=("NHWC"===s?r.shape[2]:r.shape[3])*o,l=("NHWC"===s?r.shape[3]:r.shape[1])/(o*o),d=[{type:"int32",data:[o]}],p=new mO("NHWC"===s?[i,c,u,l]:[i,l,c,u],s);return n.runWebGPUProgram(p,[r],r.dtype,d)}};class yO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.addBias=a,this.activation=r,this.hasPreluActivation=o,this.filterHeight=t,this.filterWidth=n,this.shaderKey="depthwiseNCHW_".concat(this.activation,"_").concat(this.filterHeight,"_").concat(this.filterWidth)}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,a=this.workgroupSize[0]+this.filterWidth-1;return"\n      ".concat(sE(this.activation,this.hasPreluActivation,!1,4),"\n\n      var<workgroup> mm_Asub : array<array<f32, ").concat(a,">, ").concat(n,">;\n      var<workgroup> mm_Bsub : array<array<f32, ").concat(this.filterWidth,">, ").concat(this.filterHeight,">;\n      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {\n        var value = 0.0;\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, channel, row, col);\n        }\n        return value;\n      }\n\n      ").concat(g_()," {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;\n        let channelMul = uniforms.wShape[3];\n        let d1 = coords[1] / channelMul;\n        let q = coords[1] % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n\n        let localRow = i32(localId.y);\n        let localCol = i32(localId.x);\n\n        // Load one tile of X into local memory.\n        for (var inputRow = localRow; inputRow < ").concat(n,"; inputRow = inputRow + ").concat(this.workgroupSize[1],") {\n          for (var inputCol = localCol; inputCol < ").concat(a,"; inputCol = inputCol + ").concat(this.workgroupSize[0],") {\n            let rowOffset = inputRow - localRow;\n            let colOffset = inputCol - localCol;\n            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);\n          }\n        }\n\n        // Load one tile of W into local memory.\n        var wIndex = i32(localIndex);\n        ").concat(e<t?"if (wIndex < ".concat(e,")"):"for(; wIndex < ".concat(e,"; wIndex = wIndex + ").concat(t,")"),"\n\n        {\n          let wRow = wIndex / ").concat(this.filterWidth,";\n          let wCol = wIndex % ").concat(this.filterWidth,";\n          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);\n        }\n\n        workgroupBarrier();\n\n        var value = 0.0;\n        for (var wR = 0; wR < ").concat(this.filterHeight,"; wR = wR + 1) {\n          for (var wC = 0; wC < ").concat(this.filterWidth,"; wC = wC + 1) {\n            let xVal = mm_Asub[localRow + wR][localCol + wC];\n            let wVal = mm_Bsub[wR][wC];\n            value = fma(xVal, wVal, value);\n          }\n        }\n        ").concat(iE(this.addBias,this.activation),"\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    ")}}class bO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const r=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=E_(r),this.dispatch=N_(this.dispatchLayout,r,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),xt("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey="depthwiseVec4_".concat(n,"_").concat(this.convInfo.filterHeight,"_").concat(this.convInfo.filterWidth,"_").concat(this.convInfo.strideHeight,"_").concat(this.convInfo.strideWidth,"_").concat(this.workPerThread)}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return"\n      ".concat(sE(this.activation,this.hasPreluActivation,!0,4),"\n      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {\n        var value = vec4<f32>(0.0);\n        if (col >=0 && col < uniforms.inDims[1]) {\n          value = getX(batch, row, col, channel);\n        }\n        return value;\n      }\n\n      ").concat(g_("index")," {\n        let width0 = uniforms.outShape[3] / ").concat(this.outputComponent,";\n        let d1 = (index % width0) * ").concat(this.outputComponent,";\n        var index1 = index / width0;\n        let width1 = uniforms.virtualWidth / ").concat(this.workPerThread,";\n        let c = (index1 % width1) * ").concat(this.workPerThread,";\n        index1 = index1 / width1;\n        let r = index1 % uniforms.outShape[1];\n        let batch = index1 / uniforms.outShape[1];\n\n        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(").concat(t,", ").concat(n,") - uniforms.pads;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n        var xVals : array<vec4<f32>, ").concat(e,">;\n        var dotProd : array<vec4<f32>, ").concat(this.workPerThread,">;\n        for (var i = 0; i < ").concat(this.workPerThread,"; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n\n        // Use constant instead of uniform can give better performance.\n        for (var wR = 0; wR < ").concat(this.convInfo.filterHeight,"; wR = wR + 1) {\n          let xR = xRCorner + wR;\n          if (xR >=0 && xR < uniforms.inDims[0]) {\n            for (var i = 0; i < ").concat(e,"; i++) {\n              xVals[i] = readX(batch, xR, xCCorner + i, d1);\n            }\n            for (var wC = 0; wC < ").concat(this.convInfo.filterWidth,"; wC = wC + 1) {\n              let wValue = getW(wR, wC, d1, 0);\n              for (var i = 0; i < ").concat(this.workPerThread,"; i++) {\n                dotProd[i] = fma(xVals[i * ").concat(n," + wC], wValue, dotProd[i]);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d1);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            var value = dotProd[i];\n            ").concat(iE(this.addBias,this.activation),"\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n          }\n        }\n      }\n    ")}}class xO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,\n      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey="depthwise_".concat(this.activation,"_").concat(this.isChannelsLast)}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return"\n      ".concat(sE(this.activation,this.hasPreluActivation,!1,4),"\n\n      ").concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.").concat(this.isChannelsLast?"yz":"zw",") * uniforms.strides - uniforms.pads;\n          let d2 = coords[").concat(this.isChannelsLast?3:1,"];\n          let channelMul = uniforms.wShape[3];\n          let d1 = d2 / channelMul;\n          let q = d2 % channelMul;\n\n          let inputRowStart = xRCCorner.x;\n          let inputColStart = xRCCorner.y;\n          let inputRowEnd = inputRowStart + uniforms.filterHeight *\n              uniforms.dilations[0];\n          let inputColEnd = inputColStart + uniforms.filterWidth *\n              uniforms.dilations[1];\n\n          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get\n          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all\n          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.\n          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.\n          var value = 0.0;\n\n          // Extract if checking out of for loop for performance.\n          if (inputRowStart >= 0 && inputColStart >= 0 &&\n            inputRowEnd < uniforms.inDims[0] &&\n                inputColEnd < uniforms.inDims[1]) {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  let xVal = ").concat(e,";\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            } else {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                if (xR < 0 || xR >= uniforms.inDims[0]) {\n                  continue;\n                }\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  if (xC < 0 || xC >= uniforms.inDims[1]) {\n                    continue;\n                  }\n\n                  let xVal = ").concat(e,";\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            }\n            ").concat(iE(this.addBias,this.activation),"\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    ")}}const vO={kernelName:qn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dataFormat:c,dilations:u,dimRoundingMode:l}=a,d=$u(c);let p=u;null==p&&(p=[1,1]);const h=Vu(r.shape,o.shape,s,p,i,l,!0,d),f=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],m="channelsLast"===h.dataFormat;let g;return!m&&h.inHeight>16&&h.inWidth>16&&1===h.strideHeight&&1===h.strideWidth&&1===h.dilationWidth&&1===h.dilationHeight&&h.inChannels===h.outChannels?g=new yO(h.outShape,h.filterHeight,h.filterWidth):m&&h.outHeight>4&&h.outWidth>4&&h.strideWidth<=2&&h.inChannels===h.outChannels&&1===h.dilationHeight&&1===h.dilationWidth&&h.inChannels%4===0?(g=new bO(h),f.push({type:"int32",data:[g.virtualWidth]})):(g=new xO(h),f.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),n.runWebGPUProgram(g,[r,o],r.dtype,f)}};class wO{constructor(e){this.variableNames=["x","dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,\n      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return"\n      ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let dm = coords[3];\n        let d2 = d1 * uniforms.channelMul + dm;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yR = 0; yR < uniforms.outHeight; yR++) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC++) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              let dyValue = getDy(b, yR, yC, d2);\n              let xValue = getX(b, xR, xC, d1);\n              dotProd += xValue * dyValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}class kO{constructor(e){this.variableNames=["dy","W"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return"\n      ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[3];\n        let dyCorner = coords.yz - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n\n          let idyR = i32(dyR);\n          let wRPerm = uniforms.filterDims[0] - 1 - wR;\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n\n            let idyC = i32(dyC);\n            let wCPerm = uniforms.filterDims[1] - 1 - wC;\n\n            for (var dm = 0; dm < uniforms.channelMul; dm++) {\n              let d2 = d1 * uniforms.channelMul + dm;\n              let xValue = getDy(batch, idyR, idyC, d2);\n              let wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}const SO={kernelName:Xn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:u,filterShape:l}=a,d=Vu(r.shape,l,s,i,c,u,!0),p=new wO(d),h=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outChannels/d.inChannels]}];return n.runWebGPUProgram(p,[r,o],"float32",h)}};const CO={kernelName:Yn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:u,inputShape:l}=a,d=Vu(l,o.shape,s,i,c,u,!0),p=new kO(d),h=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.outChannels/d.inChannels]}];return n.runWebGPUProgram(p,[r,o],r.dtype,h)}};class IO{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);\n          setOutputAtIndex(index, value);\n        }\n      }\n    ")}}const NO={kernelName:Qn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],o=kt(a.shape),s=wE({inputs:{x:a},backend:n,attrs:{shape:[o]}}),i=new IO(o),c=n.runWebGPUProgram(i,[s],s.dtype),u=wE({inputs:{x:c},backend:n,attrs:{shape:r}});return n.disposeData(s.dataId),n.disposeData(c.dataId),u}};class _O{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return"\n       ".concat(g_("index")," {\n         if (index < uniforms.size) {\n           let neg_infinity = -3.4e38;\n           let coords = getOutputCoords();\n           let batch = coords.x;\n           let d1 = coords.w;\n           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;\n           let hBeg = outTopLeftCorner.x;\n           let wBeg = outTopLeftCorner.y;\n\n           var curVal = neg_infinity;\n           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {\n             let hIn = hBeg + h * uniforms.dilations[0];\n\n             if (hIn >= 0 && hIn < uniforms.xShape[1]) {\n               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {\n                 let wIn = wBeg + w * uniforms.dilations[1];\n\n                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {\n                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);\n                   if (val > curVal) {\n                     curVal = val;\n                   }\n                 }\n               }\n             }\n           }\n\n           setOutputAtIndex(index, curVal);\n         }\n       }\n     ")}}const TO={kernelName:Zn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a,u=Bu(r.shape,o.shape,s,i,"NHWC",c),l=[u.padInfo.top,u.padInfo.left],d=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...l]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],p=new _O(u);return n.runWebGPUProgram(p,[r,o],r.dtype,d)}};class EO{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=E_(e.outShape),this.dispatch=N_(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==t&&"int32"!==t)throw new Error("Dilation2DBackpropInput only supports float32 and int32\n          types, does not support ".concat(t," type."));this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return"\n       ".concat(g_("index")," {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var xRMax = 0;\n           var xCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     xRMax = xR;\n                     xCMax = xC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.xShape[3] *\n               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));\n           let value = getDy(b, r, c, d);\n           ").concat(l_("&result[flatIndexIn]","value",this.type),"\n         }\n       }\n     ")}}class RO{constructor(e,t,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=E_(e.outShape),this.dispatch=N_(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error("Dilation2DBackpropFilter only supports float32 and int32\n          types, does not support ".concat(n," type."));this.type=n,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return"\n       ".concat(g_("index")," {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var wRMax = 0;\n           var wCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     wRMax = wR;\n                     wCMax = wC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);\n           let value = getDy(b, r, c, d);\n           ").concat(l_("&result[flatIndexIn]","value",this.type),"\n         }\n       }\n     ")}}const AO={kernelName:Jn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,dy:s}=t,{strides:i,pad:c,dilations:u}=a,l=Bu(r.shape,o.shape,i,c,"NHWC",u),d=o.dtype,p=new RO(l,o.shape,d),h=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[kt(l.outShape)]}],f=xE({backend:n,attrs:{shape:o.shape,value:0,dtype:d}});return n.runWebGPUProgram(p,[r,o,s],d,h,f)}};const OO={kernelName:$n,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,dy:s}=t,{strides:i,pad:c,dilations:u}=a,l=Bu(r.shape,o.shape,i,c,"NHWC",u),d=r.dtype,p=new EO(l,d),h=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[kt(l.outShape)]}],f=xE({backend:n,attrs:{shape:l.inShape,value:0,dtype:d}});return n.runWebGPUProgram(p,[r,o,s],d,h,f)}};class FO{constructor(e,t,n){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=d_.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=n,this.shaderKey="draw_".concat(t,"_").concat(n)}getUserCode(){let e;const t="float32"===this.type?"value":"value / 255.0";e="\n      if (uniforms.numChannels == 1) {\n        rgba[0] = ".concat(t,";\n        rgba[1] = ").concat(t,";\n        rgba[2] = ").concat(t,";\n      } else {\n        rgba[d] = ").concat(t,";\n      }");return"\n       @group(0) @binding(0) var outImage : texture_storage_2d<".concat(this.textureFormat,", write>;\n       ").concat(g_("index")," {\n         if (index < uniforms.size) {\n           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);\n           for (var d = 0; d < uniforms.numChannels; d = d + 1) {\n             let value = f32(inBuf[index * uniforms.numChannels + d]);\n             ").concat(e,"\n           }\n           rgba.x = rgba.x * rgba.w;\n           rgba.y = rgba.y * rgba.w;\n           rgba.z = rgba.z * rgba.w;\n           let coords = getCoordsFromIndex(index);\n           textureStore(outImage, vec2<i32>(coords.yx), rgba);\n         }\n       }\n      ")}}const DO={kernelName:ea,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:o,options:s}=a,[i,c]=r.shape.slice(0,2),{imageOptions:u}=s||{},l=(null===u||void 0===u?void 0:u.alpha)||1,d=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",p=[i,c],h=new FO(p,r.dtype,d);o.width=c,o.height=i;const f="webgpu";let m,g=o.getContext(f);g||(m=new OffscreenCanvas(c,i),g=m.getContext(f));const y=3===r.shape.length?r.shape[2]:1;g.configure({device:n.device,format:d,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const b="int32",x=n.makeTensorInfo(p,b),v=n.tensorMap.get(x.dataId);v.resource=g.getCurrentTexture(),v.external=!0;const w=[{type:"uint32",data:[y]},{type:"float32",data:[l]}];if(n.runWebGPUProgram(h,[r],b,w,x),m){const e=o.getContext("2d");if(!e)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");e.drawImage(m,0,0)}return n.disposeData(x.dataId),r}},MO=FE({opType:P_.MUL,cpuKernelImpl:JE,supportsComplex:!0}),PO={kernelName:Qa,backendName:"webgpu",kernelFunc:MO};function LO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;return OR(r,o,s,"sum",n)}const zO={kernelName:Lr,backendName:"webgpu",kernelFunc:LO};const BO={kernelName:na,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,o=t,{allDims:s,summedDims:i,idDims:c}=Cm(r,o.length);Nm(s.length,c,o);const{path:u,steps:l}=_m(i,c),d=l.length;let p=null,h=s.length;const f=[];for(let m=0;m<d;++m){for(const e of l[m]){const{permutationIndices:t,expandDims:a}=Im(h,c[e]);let r;Tm(t)?r=o[e]:(r=TR({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),f.push(r));const s=r.shape.slice();for(let e=0;e<a.length;++e)s.splice(a[e],0,1);Ct(r.shape,s)||(r=wE({inputs:{x:r},backend:n,attrs:{shape:s}}),f.push(r)),null===p?p=r:(p=MO({inputs:{a:r,b:p},backend:n}),f.push(p))}m<d-1&&(u[m]>=0&&(p=LO({inputs:{x:p},backend:n,attrs:{axis:u[m]-(s.length-h),keepDims:!1}}),f.push(p)),h--)}for(const m of f)m!==p&&n.disposeData(m.dataId);return p}},WO=OE({opType:hT.ELU}),UO={kernelName:aa,backendName:"webgpu",kernelFunc:WO},VO={kernelName:ra,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,o=new NE(P_.ELU_DER,a.shape,r.shape);return n.runWebGPUProgram(o,[a,r],a.dtype)}},GO=FE({opType:P_.EQUAL,dtype:"bool",cpuKernelImpl:zE}),HO={kernelName:sa,backendName:"webgpu",kernelFunc:GO},jO=OE({opType:hT.ERF}),KO={kernelName:oa,backendName:"webgpu",kernelFunc:jO},qO=OE({opType:hT.EXP,cpuKernelImpl:BE,dtype:"float32"}),XO={kernelName:ia,backendName:"webgpu",kernelFunc:qO};function YO(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:o}=t,s=o.shape.length,i=o.shape.slice();let c=r;return r<0&&(xt(-(s+1)<=r,(()=>"Axis must be in the interval [".concat(-(s+1),", ").concat(s,"]"))),c=s+r+1),i.splice(c,0,1),wE({inputs:{x:o},backend:a,attrs:{shape:i}})}const QO={kernelName:ca,backendName:"webgpu",kernelFunc:YO},ZO=OE({opType:hT.EXPM1,cpuKernelImpl:WE}),$O={kernelName:ua,backendName:"webgpu",kernelFunc:ZO};class JO{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey="fft_".concat(e)}getUserCode(){const e="real"===this.component?"return real * expR - imag * expI;":"return real * expI + imag * expR;";return"\n    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {\n      ".concat(e,"\n    }\n\n    fn mulMatDFT(batch: i32, index: i32) -> f32 {\n      let indexRatio = f32(index) / f32(uniforms.realShape[1]);\n      let exponentMultiplierTimesIndexRatio =\n          uniforms.exponentMultiplier * indexRatio;\n\n      var result = 0.0;\n\n      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {\n        // x = (-2|2 * PI / N) * index * i;\n        let x = exponentMultiplierTimesIndexRatio * f32(i);\n        let expR = cos(x);\n        let expI = sin(x);\n        let real = getReal(batch, i);\n        let imag = getImag(batch, i);\n\n        result = result +\n            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;\n      }\n\n      return result;\n    }\n\n    ").concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));\n      }\n    }\n  ")}}function eF(e,t,n){const a=n.tensorMap.get(e.dataId),r=kt(e.shape),o=e.shape[e.shape.length-1],s=[],i=wE({inputs:{x:e},backend:n,attrs:{shape:[r/o,o]}});s.push(i);const c=i.shape,u=new JO("real",c),l=new JO("imag",c),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:c},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:c}],p=[{type:"float32",data:[t?2*Math.PI:-2*Math.PI]},{type:"float32",data:[t?c[1]:1]}],h=n.runWebGPUProgram(u,d,"float32",p);s.push(h);const f=n.runWebGPUProgram(l,d,"float32",p);s.push(f);const m=EE({inputs:{real:h,imag:f},backend:n});s.push(m);const g=wE({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return s.forEach((e=>n.disposeData(e.dataId))),g}const tF={kernelName:la,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return eF(a,!1,n)}};class nF{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    ")}}const aF={kernelName:pa,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,o=new nF(a.shape);return r.runWebGPUProgram(o,[a],a.dtype)}},rF=OE({opType:hT.FLOOR,cpuKernelImpl:UE}),oF={kernelName:ha,backendName:"webgpu",kernelFunc:rF},sF=FE({opType:P_.FLOOR_DIV,cpuKernelImpl:VE,dtype:"int32"}),iF={kernelName:fa,backendName:"webgpu",kernelFunc:sF};class cF{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.pixelsOpType=d_.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=n,this.shaderKey="fromPixels_".concat(this.importVideo)}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)",t=this.importVideo?"texture_external":"texture_2d<f32>";return"\n      @binding(1) @group(0) var src: ".concat(t,";\n      ").concat(g_("index")," {\n        let flatIndex = index * uniforms.numChannels;\n        if (flatIndex < uniforms.size) {\n          let coords = getCoordsFromIndex(flatIndex);\n          let values = ").concat(e,";\n          for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n            result[flatIndex + i] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  ")}}const uF={kernelName:po,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:o}=a;if(null==r)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const s="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,c="undefined"!==typeof HTMLCanvasElement&&r instanceof HTMLCanvasElement||"undefined"!==typeof OffscreenCanvas&&r instanceof OffscreenCanvas,u="undefined"!==typeof ImageBitmap&&r instanceof ImageBitmap,[l,d]=s?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[d,l,o],h=Jt().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&s,f=s||i;if(u||c||f){let e;if(h)e=n.device.importExternalTexture({source:r});else{if(f){const e=Jt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=lF&&e===dF||(dF=e,lF=document.createElement("canvas").getContext("2d",{willReadFrequently:dF})),lF.canvas.width=l,lF.canvas.height=d,lF.drawImage(r,0,0,l,d),r=lF.canvas}const t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,a="rgba8unorm",o=n.textureManager.acquireTexture(p[1],p[0],a,t);n.queue.copyExternalImageToTexture({source:r},{texture:o},[p[1],p[0]]),e=o}const t=kt(p),a=Wt(p),s=new cF(p,o,h),i=[{type:"uint32",data:[t]},{type:"uint32",data:[o]},{type:"uint32",data:[...a]}],c=n.makeTensorInfo([d,l],"int32");n.tensorMap.get(c.dataId).resource=e;const u=n.runWebGPUProgram(s,[c],"int32",i);return n.disposeData(c.dataId),u}const m=r.data;let g=m;if(null!=o&&4!==o){g=new Uint8Array(r.width*r.height*o);const e=m.length;let t=0;for(let n=0;n<e;n++)n%4<o&&(g[t++]=m[n])}const y=n.makeTensorInfo(p,"int32",new Int32Array(g));return n.uploadToGPU(y.dataId),y}};let lF,dF=Jt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");class pF{constructor(e,t,n,a,r){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],_c(e,t),_c(e,n),this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),null!=a&&(_c(e,a),this.variableNames.push("offset")),null!=r&&(_c(e,r),this.variableNames.push("scale")),this.offsetShape=a,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";null!=this.scaleShape&&(t="getScaleByOutputIndex(index)");return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ").concat(e,";\n          let scaleValue = ").concat(t,";\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  ")}}const hF={kernelName:ma,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r,scale:o,offset:s,mean:i,variance:c}=t,{varianceEpsilon:u}=n,l=a,d=[r,i,c];let p=null;null!=s&&(p=s.shape,d.push(s));let h=null;null!=o&&(h=o.shape,d.push(o));const f=new pF(r.shape,i.shape,c.shape,p,h),m=[{type:"float32",data:[u]}];return l.runWebGPUProgram(f,d,r.dtype,m)}};const fF={kernelName:mo,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=$u(l);return VA({x:r,filter:o,convInfo:Vu(r.shape,o.shape,c,d,u,p,!1,m),backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:f,activation:h})}};const mF={kernelName:go,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:u,dilations:l,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=a;let f=l;null==f&&(f=[1,1]),xt(Qu(c,f),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(f,"'")));const m=Vu(r.shape,o.shape,c,f,u,d,!0),g=[r,o],y=null!=s,b=null!=i;y&&g.push(s),b&&g.push(i);const x=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];let v;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&1===m.dilationHeight&&1===m.dilationWidth&&m.inChannels%4===0?(v=new bO(m,y,p,b),x.push({type:"int32",data:[v.virtualWidth]})):(v=new xO(m,y,p,b),x.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),"leakyrelu"===p&&(x.push({type:"float32",data:[h]}),v.uniforms+=" alpha : f32,"),n.runWebGPUProgram(v,g,"float32",x)}};class gF{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gathernd_".concat(e),this.sliceDim=e,this.uniforms="sliceDim : i32, strides : ".concat(f_(e),",")}getUserCode(){let e;e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides";return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ").concat(e,";\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      ")}}const yF={kernelName:ya,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,o=r.shape,s=o[o.length-1],i=kt(a.shape),[c,u,l,d]=ru(a,r),p=wE({inputs:{x:r},backend:n,attrs:{shape:[u,s]}}),h=wE({inputs:{x:a},backend:n,attrs:{shape:[kt(a.shape)/l,l]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),o=GE(e,t,a.dtype,u,s,l,d,a.shape,i);return n.makeTensorInfo(c,a.dtype,o.values)}const f=new gF(s,[u,l]),m=[{type:"int32",data:[s]},{type:"int32",data:d}],g=n.runWebGPUProgram(f,[h,p],h.dtype,m),y=wE({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),y}};class bF{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("indexZ"):n.push("".concat(t[a]));return n.join()}(this.aShape);return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(").concat(e,"));\n        }\n      }\n    ")}}function xF(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:o}=t,{axis:s,batchDims:i}=a,c=jm(r,o,Rt(s,r.shape)[0],i),u=kt(o.shape),l=[],d=wE({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=wE({inputs:{x:o},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});l.push(d),l.push(p);const h=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,o])){const e=n.tensorMap.get(p.dataId).values,t=nc(p.shape,p.dtype,e),a=n.tensorMap.get(d.dataId).values,r=nc(d.shape,d.dtype,a),o=HE(r,t,h);return l.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(c.outputShape,o.dtype,o.values)}const f=new bF(d.shape,h),m=n.runWebGPUProgram(f,[d,p],d.dtype);l.push(m);const g=wE({inputs:{x:m},backend:n,attrs:{shape:c.outputShape}});return l.forEach((e=>n.disposeData(e.dataId))),g}const vF={kernelName:ga,backendName:"webgpu",kernelFunc:xF},wF=FE({opType:P_.GREATER,cpuKernelImpl:KE,dtype:"bool"}),kF={kernelName:ba,backendName:"webgpu",kernelFunc:wF},SF=FE({opType:P_.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:jE}),CF={kernelName:xa,backendName:"webgpu",kernelFunc:SF};const IF={kernelName:wa,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return eF(a,!0,n)}},NF=OE({opType:hT.IS_FINITE,dtype:"bool"}),_F={kernelName:Sa,backendName:"webgpu",kernelFunc:NF},TF=OE({opType:hT.IS_INF,dtype:"bool"}),EF={kernelName:Ca,backendName:"webgpu",kernelFunc:TF},RF=OE({opType:hT.IS_NAN,dtype:"bool"}),AF={kernelName:Ia,backendName:"webgpu",kernelFunc:RF};const OF={kernelName:Na,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:o}=a,s=[{type:"float32",data:[o]}],i=new AE(r.shape,hT.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(i,[r],"float32",s)}},FF=FE({opType:P_.LESS,dtype:"bool",cpuKernelImpl:XE}),DF={kernelName:_a,backendName:"webgpu",kernelFunc:FF},MF=FE({opType:P_.LESS_EQUAL,dtype:"bool",cpuKernelImpl:qE}),PF={kernelName:Ta,backendName:"webgpu",kernelFunc:MF};class LF{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);\n        }\n      }\n    ")}}const zF={kernelName:Ea,backendName:"webgpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:o}=n,s=(r-a)/(o-1),i=new LF(o),c=[{type:"float32",data:[a]},{type:"float32",data:[s]}];return t.runWebGPUProgram(i,[],"float32",c)}},BF=OE({opType:hT.LOG,cpuKernelImpl:YE}),WF={kernelName:Ra,backendName:"webgpu",kernelFunc:BF},UF=OE({opType:hT.LOG1P}),VF={kernelName:Aa,backendName:"webgpu",kernelFunc:UF},GF=FE({opType:P_.LOGICAL_AND,dtype:"bool"}),HF={kernelName:Oa,backendName:"webgpu",kernelFunc:GF},jF=OE({opType:hT.LOGICAL_NOT}),KF={kernelName:Fa,backendName:"webgpu",kernelFunc:jF},qF=FE({opType:P_.LOGICAL_OR}),XF={kernelName:Da,backendName:"webgpu",kernelFunc:qF},YF="\n  var powValue = 0.0;\n  let basis = uniforms.bias + uniforms.alpha * sum;\n  if (uniforms.beta == 0.5) {\n    powValue = inverseSqrt(basis);\n  } else if (uniforms.beta == 1.0) {\n    powValue = 1.0 / basis;\n  } else {\n    powValue = exp(log(basis) * (-uniforms.beta));\n  }\n";class QF{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return"\n    ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n        let d = coords[3];\n\n        let x = getX(b, r, c, d);\n        var sum = 0.0;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let idx = d + i;\n          if (idx >= 0 && idx < uniforms.xShape[3]) {\n            let z = getX(b, r, c, idx);\n            sum = sum + z * z;\n          }\n        }\n        ").concat(YF,"\n\n        setOutputAtIndex(index, x * powValue);\n      }\n    }\n  ")}}class ZF{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,xt(t<=this.maxAllowRadius,(()=>"Radius must be less than or equal to ".concat(this.maxAllowRadius,", current radius is ").concat(t))),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=N_(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return"\n    var <workgroup>lrnSub: array<f32, ".concat(this.workgroupSize[0],">;\n    const elementsPerWorkgroup = ").concat(this.elementsPerWorkgroup,";\n    const maxAllowRadius = ").concat(this.maxAllowRadius,";\n\n    ").concat(g_()," {\n      let localDepth = i32(localId.x);\n      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;\n      let xDepth = workgroupDepth + localDepth - maxAllowRadius;\n      let b = i32(globalId.z) / uniforms.xShape[1];\n      let r = i32(globalId.z) - b * uniforms.xShape[1];\n      let c = i32(globalId.y);\n      let d = workgroupDepth + localDepth;\n\n      var x = 0.0;\n      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {\n        x = getX(b, r, c, xDepth);\n      }\n      lrnSub[localDepth] = x;\n      workgroupBarrier();\n\n      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {\n        var sum = 0.0;\n        let index = localDepth + maxAllowRadius;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let z = lrnSub[index + i];\n          sum = sum + z * z;\n        }\n        ").concat(YF,"\n\n        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);\n      }\n    } ")}}const $F={kernelName:Ma,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:o,bias:s,alpha:i,beta:c}=a;let u;u=o>16?new QF(r.shape):new ZF(r.shape,o);const l=[{type:"int32",data:[o]},{type:"float32",data:[s]},{type:"float32",data:[i]},{type:"float32",data:[c]}];return n.runWebGPUProgram(u,[r],r.dtype,l)}};class JF{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return"\n    ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n\n        let MIN_DEPTH_BEGIN = 0;\n        let MAX_DEPTH_END = uniforms.outShape[3];\n        var result = 0.0;\n        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {\n          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);\n          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);\n\n          var norm = 0.0;\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            } else {\n              break;\n            }\n          }\n\n          norm = uniforms.alpha * norm + uniforms.bias;\n\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              var dyi = -2.0 * uniforms.alpha * uniforms.beta\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * uniforms.beta);\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, result);\n      }\n    }\n  ")}}const eD={kernelName:Pa,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:o,dy:s}=t,{depthRadius:i,bias:c,alpha:u,beta:l}=a,d=new JF(r.shape),p=[{type:"int32",data:[i]},{type:"float32",data:[c]},{type:"float32",data:[u]},{type:"float32",data:[l]}];return n.runWebGPUProgram(d,[r,o,s],r.dtype,p)}},tD=FE({opType:P_.MAX,cpuKernelImpl:ZE}),nD={kernelName:za,backendName:"webgpu",kernelFunc:tD};const aD={kernelName:Ba,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;return tA(r,Wu(r.shape,o,s,1,i,c),"max",n)}};const rD={kernelName:Ua,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dataFormat:c,dimRoundingMode:u}=a,l=Uu(r.shape,o,s,[1,1,1],i,u,c),d=new QR(l,"max"),p=[{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.front,l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.inDepth,l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth]}];return n.runWebGPUProgram(d,[r],r.dtype,p)}};class oD{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return"\n      ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            let curPosValue = wR * uniforms.filterDims[1] + wC;\n            let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}class sD{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return"\n      ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;\n\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;\n              let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}const iD={kernelName:Va,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=a,d=Uu(s.shape,i,c,[1,1,1],u,l),p=new QR(d,"max",!0);let h=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];const f=n.runWebGPUProgram(p,[s],"int32",h),m=new sD(d);h=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const g=n.runWebGPUProgram(m,[r,f],s.dtype,h);return n.disposeData(f.dataId),g}};const cD={kernelName:Wa,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o,output:s}=t,i=o;O_([o,s],"maxPoolGrad");const{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=a,p=Wu(i.shape,c,u,1,l,d),h=new YR(p,"max",!0);let f=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]}];const m=n.runWebGPUProgram(h,[i],"int32",f),g=new oD(p);f=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]}];const y=n.runWebGPUProgram(g,[r,m],i.dtype,f);return n.disposeData(m.dataId),y}};const uD={kernelName:Ga,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{filterSize:r,strides:o,pad:s,includeBatchInIndex:i}=a,{x:c}=t;xt(4===c.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(c.shape.length,".")));const u=[1,1];xt(Qu(o,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(u,"'")));const l=Wu(c.shape,r,o,u,s),d=[{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]}];let p=new YR(l,"max",!1);const h=n.runWebGPUProgram(p,[c],c.dtype,d);return p=new YR(l,"max",!0,!0,i),[h,n.runWebGPUProgram(p,[c],"int32",d)]}};const lD={kernelName:ja,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;return OR(r,o,s,"min",n)}},dD=FE({opType:P_.MIN,cpuKernelImpl:$E}),pD={kernelName:Ka,backendName:"webgpu",kernelFunc:dD};class hD{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=" pad".concat(t," : vec2<i32>,")})),this.offset="reflect"===n?0:1,this.shaderKey="mirrorPad_".concat(n)}getUserCode(){const e=this.xShape.length,t=this.xShape.map(((e,t)=>"uniforms.pad".concat(t,"[0]"))).join(","),n=this.xShape.map(((t,n)=>"uniforms.pad".concat(n,"[0] + uniforms.xShape").concat(e>1?"[".concat(n,"]"):""))).join(","),a=1===e?"start":"start[i]",r=1===e?"end":"end[i]",o=1===e?"outC":"outC[i]",s=f_(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let start = ").concat(s,"(").concat(t,");\n          let end = ").concat(s,"(").concat(n,");\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ").concat(e,"; i = i + 1) {\n            if (").concat(o," < ").concat(a,") {\n              ").concat(o," = ").concat(a," * 2 - ").concat(o," - ").concat(this.offset,";\n            } else if(").concat(o," >= ").concat(r,") {\n              ").concat(o," = (").concat(r," - 1) * 2 - ").concat(o," + ").concat(this.offset,";\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(").concat(i,"));\n        }\n      }\n    ")}}const fD={kernelName:qa,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{paddings:o,mode:s}=n,i=a,c=o.map((e=>({type:"int32",data:[e[0],e[1]]}))),u=new hD(r.shape,o,s);return i.runWebGPUProgram(u,[r],r.dtype,c)}},mD=FE({opType:P_.MOD}),gD={kernelName:Xa,backendName:"webgpu",kernelFunc:mD};class yD{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return"\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {\n      let HASHSCALE1 = 443.8975;\n      let p = resultUV * seed;\n      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);\n      p3 = p3 + dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n\n        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),\n            f32(coords[0]) / f32(uniforms.outShape[0]));\n        let r = random(uniforms.seed, resUV);\n        var cdf = 0.0;\n        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {\n          cdf = cdf + getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutputAtIndexI32(index, i);\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);\n      }\n    }\n  ")}}class bD{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return"\n    var<workgroup> buf : array<f32, ".concat(this.workgroupSize[0],">;\n    var<workgroup> rowMaxShared : f32;\n    var<workgroup> rowSumShared : f32;\n    const blockSize = ").concat(this.workgroupSize[0],";\n    ").concat(g_("index")," {\n      let row = index / blockSize;\n      let tid = i32(localId.x);\n      let cols = uniforms.outShape[1];\n\n      var threadMax = -3.402823e+38f;\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = getLogits(row, col);\n        threadMax = max(threadMax, value);\n      }\n      if (tid < cols) {\n        buf[tid] = threadMax;\n      }\n      workgroupBarrier();\n\n      var reduceSize = min(cols, blockSize);\n      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n        reduceSize = currSize + (reduceSize & 1);\n        if (tid < currSize) {\n          buf[tid] = max(buf[tid], buf[tid + reduceSize]);\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowMaxShared = buf[0];\n      }\n      workgroupBarrier();\n\n      var threadSum = 0.0;\n      for (var col = tid; col < cols; col += blockSize) {\n        let subExp = exp(getLogits(row, col) - rowMaxShared);\n        threadSum += subExp;\n      }\n      buf[tid] = threadSum;\n      workgroupBarrier();\n\n      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n        if (tid < currSize) {\n          buf[tid] = buf[tid] + buf[tid + currSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowSumShared = buf[0];\n      }\n      workgroupBarrier();\n\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;\n        setOutputAtCoords(row, col, value);\n      }\n  }\n    ")}}function xD(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:o}=a,s=wE({inputs:{x:r},backend:n,attrs:{shape:[kt(r.shape)/r.shape[o],r.shape[o]]}}),i=new bD(s.shape),c=n.runWebGPUProgram(i,[s],r.dtype),u=wE({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeData(s.dataId),n.disposeData(c.dataId),u}const vD={kernelName:Wr,backendName:"webgpu",kernelFunc:xD};const wD={kernelName:Ya,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:o,seed:s,normalized:i}=a,c=i?r:xD({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=c.shape[0],l=c.shape[1],d=new yD(u,o),p=[{type:"float32",data:[s]},{type:"int32",data:[l]}],h=n.runWebGPUProgram(d,[c],"int32",p);return i||n.disposeData(c.dataId),h}};const kD={kernelName:Za,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.tensorMap.get(a.dataId),[t,r]=eR(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}const r=new AE(a.shape,hT.NEG);return n.runWebGPUProgram(r,[a],a.dtype)}};const SD={kernelName:Ja,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=a,u=n.readSync(r.dataId),l=n.readSync(o.dataId),{selectedIndices:d}=Jh(u,l,s,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}};const CD={kernelName:tr,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=a,l=n.readSync(r.dataId),d=n.readSync(o.dataId),p=s,h=i,f=c,m=u,{selectedIndices:g,selectedScores:y}=tf(l,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class ID{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return"\n      ".concat(g_("index")," {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,\n                                      f32(i32(round(getX(coords.x))) == coords.y)));\n        }\n      }\n    ")}}const ND={kernelName:ar,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:o,depth:s,onValue:i,offValue:c}=a,u=kt(r.shape),l=new ID(u,s),d=wE({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=[{type:"float32",data:[i]},{type:"float32",data:[c]}],h=n.runWebGPUProgram(l,[d],o,p);n.disposeData(d.dataId);const f=wE({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeData(h.dataId),f}};function _D(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=wA({inputs:{input:a},backend:n}),t=_D({inputs:{x:e},backend:n}),r=FA({inputs:{input:a},backend:n}),o=_D({inputs:{x:r},backend:n}),s=EE({inputs:{real:t,imag:o},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(r.dataId),n.disposeData(o.dataId),s}return xE({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const TD={kernelName:uo,backendName:"webgpu",kernelFunc:_D};const ED={kernelName:nr,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=wA({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),o=FA({inputs:{input:r},backend:a}),s=_D({inputs:{x:o},backend:a}),i=EE({inputs:{real:n,imag:s},backend:a});return a.disposeData(t.dataId),a.disposeData(n.dataId),a.disposeData(o.dataId),a.disposeData(s.dataId),i}return xE({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const RD={kernelName:rr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return YO({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const o=t[0].shape,s=t[0].dtype;t.forEach((e=>{vt(o,e.shape,"All tensors passed to stack must have matching shapes"),xt(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=PA({inputs:t.map((e=>{const t=YO({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeData(e.dataId))),c}};function AD(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.length,a=f_(n),r=e.map(((e,t)=>"uniforms.pad".concat(t,"[0]"))).join(","),o=e.map(((e,t)=>"uniforms.pad".concat(t,"[0] + uniforms.xShape").concat(n>1?"[".concat(t,"]"):""))).join(","),s=n>1?"".concat(a,"(").concat(r,")"):"".concat(r),i=n>1?"".concat(a,"(").concat(o,")"):"".concat(o),c=n>1?"any(paddedCoords < start)":"paddedCoords < start",u=n>1?"any(paddedCoords >= end)":"paddedCoords >= end",l=n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords";return"\n        let start = ".concat(s,";\n        let end = ").concat(i,";\n        if (").concat(c," || ").concat(u,") {\n          setOutputAtIndex(index, ").concat(t?0:"uniforms.constantValue",");\n        } else {\n          let coords = paddedCoords - start;\n          setOutputAtIndex(index, getX(").concat(l,"));\n        }\n  ")}class OD{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map(((e,t)=>{this.uniforms+=" pad".concat(t," : vec2<i32>,")})),this.xShape=e,this.shaderKey="pad"}getUserCode(){return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let paddedCoords = getCoordsFromIndex(index);\n          ").concat(AD(this.xShape),"\n        }\n      }\n    ")}}const FD={kernelName:or,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:o,constantValue:s}=a;if(o.every((e=>Ct(e,[0,0]))))return _E({inputs:{x:r},backend:n});if(0===kt(r.shape)){return xE({backend:n,attrs:{shape:o.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:s,dtype:r.dtype}})}const i=[{type:"float32",data:[s]}];o.map((e=>i.push({type:"int32",data:[e[0],e[1]]})));const c=new OD(r.shape,o);return n.runWebGPUProgram(c,[r],r.dtype,i)}},DD=FE({opType:P_.POW}),MD={kernelName:sr,backendName:"webgpu",kernelFunc:DD};const PD={kernelName:ir,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,o=new NE(P_.PRELU,a.shape,r.shape);return n.runWebGPUProgram(o,[a,r],"float32")}};const LD={kernelName:cr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;return OR(r,o,s,"prod",n)}},zD={kernelName:pr,backendName:"webgpu",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:o,dtype:s}=n,i=aR(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},BD=FE({opType:P_.DIV}),WD={kernelName:ta,backendName:"webgpu",kernelFunc:BD},UD=OE({opType:hT.RECIPROCAL}),VD={kernelName:fr,backendName:"webgpu",kernelFunc:UD},GD=OE({opType:hT.RELU}),HD={kernelName:mr,backendName:"webgpu",kernelFunc:GD},jD=OE({opType:hT.RELU6}),KD={kernelName:wr,backendName:"webgpu",kernelFunc:jD};class qD{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    ")}}const XD={kernelName:xr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,size:s,halfPixelCenters:i}=a,[c,u]=s,l=[{type:"float32",data:[o&&c>1?1:0,o&&u>1?1:0]},{type:"float32",data:[i?.5:0]}],d=new qD(r.shape,c,u);return n.runWebGPUProgram(d,[r],"float32",l)}};class YD{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,\n       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey="resizeBilinearBackprop_".concat(t)}getUserCode(){return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let dxR = f32(dyR) * uniforms.heightScale;\n              let topDxRIndex = i32(floor(dxR));\n              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));\n              let dxRLerp = dxR - f32(topDxRIndex);\n              let inverseDxRLerp = 1.0 - dxRLerp;\n\n              let dxC = f32(dyC) * uniforms.widthScale;\n              let leftDxCIndex = i32(floor(dxC));\n              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));\n              let dxCLerp = dxC - f32(leftDxCIndex);\n              let inverseDxCLerp = 1.0 - dxCLerp;\n\n              if (r == topDxRIndex && c == leftDxCIndex) {\n                // topLeft\n                accumulator +=\n                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n              }\n\n              if (r == topDxRIndex && c == rightDxCIndex) {\n                // topRight\n                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == leftDxCIndex) {\n                // bottomLeft\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == rightDxCIndex) {\n                // bottomRight\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    ")}}const QD={kernelName:vr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,[,i,c]=r.shape,[,u,l]=o.shape,d=[s&&u>1?i-1:i,s&&l>1?c-1:c],p=[s&&u>1?u-1:u,s&&l>1?l-1:l],h=d[0]/p[0],f=d[1]/p[1],m=1/h,g=1/f,y=2*Math.ceil(m)+2,b=2*Math.ceil(g)+2,x=new YD(r.shape,s),v=[{type:"int32",data:d},{type:"int32",data:p},{type:"float32",data:[h]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[b]}];return n.runWebGPUProgram(x,[o],o.dtype,v)}};class ZD{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=a,this.shaderKey="resizeNearest_".concat(a)}getUserCode(){let e;e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC";return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ").concat(e,";\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    ")}}const $D={kernelName:yr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:s,size:i}=a,[c,u]=i,l=[{type:"float32",data:[o&&c>1?1:0,o&&u>1?1:0]},{type:"float32",data:[o?.5:0]}],d=new ZD(r.shape,c,u,s);return n.runWebGPUProgram(d,[r],r.dtype,l)}};class JD{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,\n       winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey="resizeNearestNeigborBackprop_".concat(t)}getUserCode(){return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *\n                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));\n\n              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *\n                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));\n\n              let sourceNearestRow =\n                  i32(min(f32(uniforms.outShape[1] - 1),\n                  ").concat(this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)","));\n\n              let sourceNearestCol =\n                  i32(min(f32(uniforms.outShape[2] - 1),\n                  ").concat(this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)","));\n\n              if (r == sourceNearestRow && c == sourceNearestCol) {\n                accumulator += getDy(b, dyR, dyC, d);\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    ")}}const eM={kernelName:br,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,[,i,c]=r.shape,[,u,l]=o.shape,d=[s&&u>1?i-1:i,s&&l>1?c-1:c],p=[s&&u>1?u-1:u,s&&l>1?l-1:l],h=1/(d[0]/p[0]),f=1/(d[1]/p[1]),m=2*Math.ceil(h)+2,g=2*Math.ceil(f)+2,y=new JD(r.shape,s),b=[{type:"int32",data:d},{type:"int32",data:p},{type:"float32",data:[h]},{type:"float32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[g]}];return n.runWebGPUProgram(y,[o],o.dtype,b)}};class tM{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return"\n      ".concat("\n      // Using uniform variables as judging conditions, so the function has\n      // coherent execution within all threads.\n      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {\n        var reverseCoords = coords;\n        if (uniforms.axis[0] == 1) {\n          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;\n        }\n        if (uniforms.axis[1] == 1) {\n          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;\n        }\n        if (uniforms.axis[2] == 1) {\n          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;\n        }\n        if (uniforms.axis[3] == 1) {\n          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;\n        }\n\n        return reverseCoords;\n      }\n    ","\n      ").concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let reverseCoords = getReverseCoords(coords);\n          setOutputAtIndex(index, getX(reverseCoords[0],\n              reverseCoords[1], reverseCoords[2], reverseCoords[3]));\n        }\n      }\n    ")}}const nM={kernelName:kr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:o}=a,s=r.shape.length;if(0===s)return _E({inputs:{x:r},backend:n});const i=r.shape,c=[1,1,1,1];i.forEach(((e,t)=>{c[t+4-s]=e}));const u=Rt(o,r.shape),l=[0,0,0,0];u.forEach((e=>{l[e+4-s]=1}));const d=[{type:"int32",data:l}],p=wE({inputs:{x:r},backend:n,attrs:{shape:c}}),h=new tM(c),f=n.runWebGPUProgram(h,[p],p.dtype,d);n.disposeData(p.dataId);const m=wE({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeData(f.dataId),m}};class aM{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"===typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return"\n        ".concat(g_("index")," {\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ").concat(this.fillSnippet,"\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      ")}}const rM={kernelName:ho,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:o,fillValue:s,center:i}=n,c=a,u=new aM(r.shape,s),[l,d]=$f(i,r.shape[1],r.shape[2]),p=[{type:"float32",data:[l]},{type:"float32",data:[d]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];"number"===typeof s?p.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):p.push({type:"float32",data:s});return c.runWebGPUProgram(u,[r],r.dtype,p)}},oM=OE({opType:hT.ROUND}),sM={kernelName:Sr,backendName:"webgpu",kernelFunc:oM},iM=OE({opType:hT.RSQRT,cpuKernelImpl:rR}),cM={kernelName:Cr,backendName:"webgpu",kernelFunc:iM};class uM{constructor(e,t,n,a,r,o,s){let i=!(arguments.length>7&&void 0!==arguments[7])||arguments[7];this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=o,this.type=s,this.sumDupeIndices=i,this.dispatchLayout=E_(e),this.dispatch=N_(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey="scatter_".concat(n,"_").concat(a,"_").concat(this.sliceDimGreaterThanOne,"_").concat(s,"_").concat(i,"_").concat(r.length);const c=f_(r.length);this.uniforms="sliceDim : i32, strides: ".concat(c,", updatesSize: i32,"),this.updatesRank=a,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");const t="getIndices(".concat(e,")"),n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let a="",r="";1===this.dispatchLayout.x.length?(a="flattenedIndex",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.dispatchLayout.x.length&&(a="vec2<i32>(flattenedIndex, coords[1])",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        // N.B. |updates| could be a scalar tensor, conceptually representing a\n        // 2D tensor with all values equal to that. By design, its size must be\n        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|\n        // gives the other.\n        let sliceSize = uniforms.outShape[1];\n        let d0 = index / sliceSize;\n        let d1 = index - d0 * sliceSize;\n        return vec2<i32>(d0, d1);\n      }\n      ");const o=Array.from({length:this.updatesRank},((e,t)=>"coords[".concat(t,"]"))),s="getUpdates(".concat(o.join(", "),")");return"\n    ".concat(r,"\n      ").concat(g_("index")," {\n        if (index < uniforms.updatesSize) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(").concat(t,"));\n            flattenedIndex = flattenedIndex + indexInside * ").concat(n,";\n          }\n          let updateValue =\n              ").concat(S_(this.type),"(").concat(s,");\n          let flatIndex = getOutputIndexFromCoords(").concat(a,");\n\n          ").concat(this.sumDupeIndices?l_("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));","\n        }\n      }")}}const lM={kernelName:Ir,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:o}=t,{shape:s}=a,{sliceRank:i,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=iu(0,r,s),p=[d/u,u];if(0===d)return n.makeTensorInfo(s,r.dtype);const h=wE({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),f=wE({inputs:{x:o},backend:n,attrs:{shape:[c,u]}}),m=f.dtype,g=xE({backend:n,attrs:{shape:p,value:0,dtype:m}}),y=[{type:"int32",data:[i]},{type:"int32",data:l},{type:"int32",data:[kt(f.shape)]}],b=new uM(f.shape,i,h.shape.length,f.shape.length,l,p,m),x=n.runWebGPUProgram(b,[f,h],m,y,g),v=wE({inputs:{x:x},backend:n,attrs:{shape:s}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(x.dataId),v}};class dM{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey="search_sorted_".concat(t)}getUserCode(){const e="left"===this.side?"<":"<=";return"\n      fn findBound(batch: i32, value: f32) -> i32 {\n        var left = i32(0);\n        var right = uniforms.numInputs;\n        while (left < right) {\n          var mid = (left + right) / 2;\n          if (getSortedSequence(batch, mid) ".concat(e," value) {\n            left = mid + 1;\n          } else {\n            right = mid;\n          }\n        }\n        return right;\n      }\n\n      ").concat(g_("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let value = getValuesByOutputIndex(index);\n          setOutputAtIndexI32(index, findBound(coords[0], value));\n        }\n      }\n    ")}}const pM={kernelName:_r,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:o}=t,{side:s}=a,i=new dM([o.shape[0],o.shape[1]],s),c=[{type:"int32",data:[r.shape[1]]}];return n.runWebGPUProgram(i,[r,o],"int32",c)}};class hM{constructor(e,t,n){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error("Where for rank ".concat(this.rank," is not yet supported"));if(1===this.rank)t="resRC",e="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],r=[];for(let e=0;e<this.outputShape.length;e++)r.push("".concat(n[e])),e<this.cRank&&a.push("".concat(n[e]));e=a.join(),t=r.join()}return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(").concat(e,");\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(").concat(t,"));\n          } else {\n            setOutputAtIndex(index, getB(").concat(t,"));\n          }\n        }\n      }\n    ")}}const fM={kernelName:Tr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:o}=t,s=new hM(a.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(s,[a,r,o],bs(r.dtype,o.dtype))}},mM=OE({opType:hT.SELU}),gM={kernelName:Er,backendName:"webgpu",kernelFunc:mM},yM=OE({opType:hT.SIGMOID}),bM={kernelName:Dr,backendName:"webgpu",kernelFunc:yM},xM=OE({opType:hT.SIGN}),vM={kernelName:Fr,backendName:"webgpu",kernelFunc:xM},wM=OE({opType:hT.SIN}),kM={kernelName:Ar,backendName:"webgpu",kernelFunc:wM},SM=OE({opType:hT.SINH}),CM={kernelName:Or,backendName:"webgpu",kernelFunc:SM},IM=OE({opType:hT.SOFTPLUS}),NM={kernelName:Mr,backendName:"webgpu",kernelFunc:IM};class _M{constructor(e,t,n,a,r,o){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(a.length);for(let i=0;i<s.length;i++)s[i]=a[r[i]];this.outputShape=s,this.newDim=r,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+="reshapedPaddedXShape : ".concat(f_(a.length),", paddedXShapeStrides : ").concat(f_(o),", "),n.map(((e,t)=>{this.uniforms+=" pad".concat(t," : vec2<i32>,")})),this.shaderKey="spaceToBatchND_".concat(r)}getUserCode(){const e=f_(this.outputShape.length),t=_R(this.newDim);return"\n      ".concat(v_(this.paddedXShape,"PaddedX"),"\n      ").concat(g_("index")," {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let switchedIndex = getIndexFromCoords").concat(this.outputShape.length,"D(").concat(e,"(").concat(t,"), uniforms.reshapedPaddedXShape);\n          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);\n          ").concat(AD(this.xShape,!0),"\n        }\n      }\n    ")}}const TM={kernelName:zr,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,paddings:s}=a;xt(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));const i=o.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...s);for(let b=1+o.length;b<r.shape.length;++b)c.push([0,0]);const u=c.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=Jf(u,o,i,!1),d=em(l.length,o.length,!1),p=tm(u,o,i,!1),h=Wt(u),f=new _M(r.shape,u,c,l,d,h.length),m=[{type:"int32",data:l},{type:"int32",data:h}];c.map((e=>m.push({type:"int32",data:[e[0],e[1]]})));const g=n.runWebGPUProgram(f,[r],r.dtype,m),y=wE({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeData(g.dataId),y}};class EM{constructor(e,t,n){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=n,this.dispatchLayout=E_([t]),this.dispatch=N_(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return"\n    ".concat(g_("index")," {\n      if (index < uniforms.sparseSize) {\n        let indexInSegmentIds = index / uniforms.segmentSize;\n        let indexInSegment = index % uniforms.segmentSize;\n        let indexInInput = indices[indexInSegmentIds];\n        let segmentId = segmentIds[indexInSegmentIds];\n\n        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];\n        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;\n        ").concat(l_("&result[outIndex]","value",this.type),"\n      }\n    }\n  ")}}class RM{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=E_(t),this.dispatch=N_(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return"\n    ".concat(g_("index")," {\n      if (index < uniforms.segmentIdsShape) {\n        let segmentId = segmentIds[index];\n        ").concat(l_("&result[segmentId]","1","int32"),"\n      }\n    }\n  ")}}class AM{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=E_(e),this.dispatch=N_(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return"\n    ".concat(g_("index")," {\n      if (index < uniforms.size) {\n        let segmentId = index / uniforms.segmentSize;\n        let count = sameSegmentIdCount[segmentId];\n        if (count != 0) {\n          ").concat("float32"===this.type?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);","\n        }\n      }\n    }\n  ")}}function OM(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0;const o=kt(e.shape)/e.shape[0],s=e.dtype,i=kt(t.shape),c=r.readSync(n.dataId),u=i>0?c[i-1]+1:0;let l;const d=e.shape.slice();d[0]=u;const p=i*o,h=xE({backend:r,attrs:{shape:d,value:0,dtype:s}});l=new EM(d,p,s);let f=[{type:"int32",data:[o]},{type:"int32",data:[p]}];const m=r.runWebGPUProgram(l,[e,t,n],s,f,h);if(a)return m;const g=xE({backend:r,attrs:{shape:[u],value:0,dtype:"int32"}});l=new RM(u,n.shape);const y=r.runWebGPUProgram(l,[n],"int32",null,g),b=xE({backend:r,attrs:{shape:d,value:0,dtype:s}});l=new AM(d,s),f=[{type:"int32",data:[o]}];const x=r.runWebGPUProgram(l,[m,y],s,f,b);return r.disposeData(m.dataId),r.disposeData(y.dataId),x}const FM={kernelName:Gr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;return OM(a,r,o,!1,n)}};const DM={kernelName:Hr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;return OM(a,r,o,!0,n)}};class MM{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(e>=5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"(resRC % ".concat(t,"aShape)");const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e;r++)a.push("(".concat(n[r]," % ").concat(t,"aShape[").concat(r,"])"));return a.join()}(this.rank,"uniforms.");return"\n      ".concat(g_("index")," {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(").concat(e,"));\n        }\n      }\n    ")}}function PM(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:o}=a;if(n.shouldExecuteOnCPU([r])||"string"===r.dtype||r.shape.length>=5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>jo(e))):e,a=nc(r.shape,r.dtype,t),s=dR(a,o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new MM(r.shape,o);return n.runWebGPUProgram(s,[r],r.dtype)}const LM={kernelName:no,backendName:"webgpu",kernelFunc:PM};const zM={kernelName:jr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:o,defaultValue:s}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=iu(0,r,i),h=!1;if("string"===o.dtype){const e=n.bufferSync(r),t=n.bufferSync(o),a=jo(n.readSync(s.dataId)[0]),f=oR(e,t,i,p,l,u,c,d,a,h);return n.makeTensorInfo(i,f.dtype,f.values)}const f=[p/l,l],m=wE({inputs:{x:r},backend:n,attrs:{shape:[u,c]}}),g=o.shape.length?wE({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}):_E({inputs:{x:o},backend:n}),y=g.dtype,b=n.makeTensorInfo([],y,jt(1,y)),x=wE({inputs:{x:s},backend:n,attrs:{shape:Array(f.length).fill(1)}}),v=PM({inputs:{x:x},backend:n,attrs:{reps:f}}),w=[{type:"int32",data:[c]},{type:"int32",data:d},{type:"int32",data:[kt([u,l])]}];switch(u){case 0:break;case 1:{const e=new uM([u,l],c,m.shape.length,g.shape.length,d,f,y,h);n.runWebGPUProgram(e,[g,m],y,w,v)}break;default:{const e=new uM([u,l],c,m.shape.length,b.shape.length,d,f,y,h);n.runWebGPUProgram(e,[b,m],y,w,v)}{const e=new uM([u,l],c,m.shape.length,g.shape.length,d,f,y);n.runWebGPUProgram(e,[g,m],y,w,v)}}const k=wE({inputs:{x:v},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(x.dataId),n.disposeData(b.dataId),n.disposeData(v.dataId),k}};const BM={kernelName:Br,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:o,axis:s}=a,i=Rt(s,r.shape)[0],c=Rm(r,o,i),u=r.shape.length,l=new Array(u).fill(0),d=r.shape.slice();return c.map((e=>{const t=[...d];t[i]=e;const a=dA({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,a}))}},WM=OE({opType:hT.SQRT}),UM={kernelName:Pr,backendName:"webgpu",kernelFunc:WM},VM={kernelName:qr,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n,o=new AE(a.shape,hT.SQUARE);return r.runWebGPUProgram(o,[a],a.dtype)}},GM=FE({opType:P_.SQUARED_DIFFERENCE}),HM={kernelName:Kr,backendName:"webgpu",kernelFunc:GM};const jM={kernelName:lo,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,o=new AE(r.shape,hT.STEP,"stepAlpha : f32,"),s=[{type:"float32",data:[n.alpha]}];return a.runWebGPUProgram(o,[r],r.dtype,s)}};class KM{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=f_(this.outputShape.length);this.uniforms="begin : ".concat(t,",  strides : ").concat(t,", "),this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?"coords * uniforms.strides[".concat(n,"] + uniforms.begin[").concat(n,"]"):"coords[".concat(t-1,"] * uniforms.strides[").concat(n,"] + uniforms.begin[").concat(n,"]")))).join(",")}return"\n       ".concat(g_("index")," {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(").concat(e,"));\n         }\n       }\n     ")}}const qM={kernelName:Yr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,end:s,strides:i,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:p}=a,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Iu(r.shape,o,s,i,c,u,l,d,p);let w;if(m)w=wE({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){xt(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=pu(b,x,v),t=dA({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=wE({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeData(t.dataId)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=nc(r.shape,r.dtype,e),a=cR(h,t,v,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new KM(h),t=[{type:"int32",data:b},{type:"int32",data:v}],a=n.runWebGPUProgram(e,[r],r.dtype,t);w=wE({inputs:{x:a},backend:n,attrs:{shape:f}}),n.disposeData(a.dataId)}}return w}};const XM={kernelName:Qr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:o,leftPad:s,rightPad:i,padWidth:c,preserveShortSequences:u}=a,{data:l,dataSplits:d}=t,p=n.readSync(l.dataId),h=n.readSync(d.dataId),[f,m]=uR(p,h,r,o,s,i,c,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},YM=FE({opType:P_.SUB,cpuKernelImpl:lR,supportsComplex:!0}),QM={kernelName:Jr,backendName:"webgpu",kernelFunc:YM},ZM=OE({opType:hT.TAN}),$M={kernelName:eo,backendName:"webgpu",kernelFunc:ZM},JM=OE({opType:hT.TANH}),eP={kernelName:to,backendName:"webgpu",kernelFunc:JM};const tP={kernelName:Nr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:o,updates:s}=t,{}=a,{sliceRank:i,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=iu(0,o,r.shape),p=[d/u,u];if(0===d)return n.makeTensorInfo(r.shape,o.dtype);const h=[],f=wE({inputs:{x:o},backend:n,attrs:{shape:[c,i]}});h.push(f);const m=wE({inputs:{x:s},backend:n,attrs:{shape:[c,u]}});h.push(m);const g=wE({inputs:{x:r},backend:n,attrs:{shape:p}});h.push(g);const y=PM({inputs:{x:g},backend:n,attrs:{reps:Array(p.length).fill(1)}}),b=new uM([c,u],i,f.shape.length,m.shape.length,l,p,r.dtype,!1),x=[{type:"int32",data:[i]},{type:"int32",data:l},{type:"int32",data:[kt([c,u])]}],v=n.runWebGPUProgram(b,[m,f],g.dtype,x,y);h.push(v);const w=wE({inputs:{x:v},backend:n,attrs:{shape:r.shape}});return h.forEach((e=>n.disposeData(e.dataId))),w}};class nP{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return"\n        ".concat(g_("index")," {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      ")}}class aP{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return"\n        ".concat(g_("index")," {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      ")}}function rP(e,t){null!==t&&e.disposeData(t.dataId)}function oP(e){let t=1;for(;t<e;)t*=2;return t}const sP={kernelName:ao,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:o,sorted:s}=a,i=r.shape,c=i[i.length-1];if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),[t,a]=pR(e,i,r.dtype,o,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===o)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(1===c)return[r,xE({attrs:{shape:i,dtype:"int32",value:0},backend:n})];const u=kt(i)/c,l=wE({inputs:{x:r},attrs:{shape:[u,c]},backend:n}),d=oP(o),p=oP(c);let h=null;const f=()=>null===h?[l,l]:[l,h],m=(e,t,a)=>{const r=f(),o=new nP(a),s=[{type:"int32",data:[c]},{type:"int32",data:[null===h?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],i=h;h=n.runWebGPUProgram(o,r,"int32",s),rP(n,i)};for(let v=1;v<d;v*=2){const e=2*v;for(let t=v;t>=1;t/=2)m(e,t,[u,p])}for(let v=p;v>d;v/=2){const e=f(),t=new aP([u,v/2]),a=[{type:"int32",data:[c]},{type:"int32",data:[null===h?1:0]},{type:"int32",data:[d]}],r=h;h=n.runWebGPUProgram(t,e,"int32",a),rP(n,r);const o=d/2,s=2*o;for(let n=o;n>=1;n/=2)m(s,n,h.shape)}let g=h;h=dA({inputs:{x:h},backend:n,attrs:{begin:0,size:[u,o]}}),rP(n,g);let y=xF({inputs:{x:l,indices:h},backend:n,attrs:{axis:1,batchDims:1}});rP(n,l);const b=i.slice(0,-1);b.push(o),g=h,h=wE({inputs:{x:h},attrs:{shape:b},backend:n}),rP(n,g);const x=y;return y=wE({inputs:{x:y},attrs:{shape:b},backend:n}),rP(n,x),[y,h]}};class iP{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return"\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          ".concat(g_("index")," {\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        ")}}const cP={kernelName:ro,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:o}=t,{interpolation:s,fillMode:i,fillValue:c,outputShape:u}=a,[l,d,p,h]=r.shape,[f,m]=null!=u?u:[d,p],g=new iP([l,f,m,h]),y="nearest"===s?1:2;let b;switch(i){case"constant":default:b=1;break;case"reflect":b=2;break;case"wrap":b=3;break;case"nearest":b=4}const x=[{type:"int32",data:[y]},{type:"int32",data:[b]},{type:"float32",data:[c]}];return n.runWebGPUProgram(g,[r,o],"float32",x)}};const uP={kernelName:io,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:o}=a;o<0&&(o+=r.shape.length);const s=r,i=s.shape.length,c=r.shape[o],u=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==o&&(u[l++]=s.shape[m]);const d=[],p=new Array(i).fill(0),h=s.shape.slice();h[o]=1;const f=new Array(c);for(let m=0;m<f.length;m++){p[o]=m;const e=dA({inputs:{x:s},backend:n,attrs:{begin:p,size:h}}),t=wE({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeData(e.dataId))),f}};class lP{constructor(e,t,n){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=E_(e),this.dispatch=N_(this.dispatchLayout,e,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error("UnsortedSegmentSum only supports float32 and int32\n              types, does not support ".concat(n," type."));this.type=n,this.shaderKey="unsortedSegmentSum"}getUserCode(){return"\n    ".concat(g_("index")," {\n      if (index < uniforms.xSize) {\n        let coords = getXCoordsFromIndex(index);\n        let b = coords[0];\n        let inCol = coords[1];\n\n        let segmentId = i32(getSegmentIds(inCol));\n        if (segmentId >= 0) {\n          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;\n          let value = getX(b, inCol);\n\n          ").concat(l_("&result[flatIndex]","value",this.type),"\n        }\n      }\n    }\n  ")}}const dP={kernelName:co,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:o}=t,{numSegments:s}=a,i=r.shape.length,c=[];let u=0;const l=Jl([u],i);let d=r;null!=l&&(d=TR({inputs:{x:r},backend:n,attrs:{perm:l}}),c.push(d),u=td(1,i)[0]);const p=Hm(d.shape,u,s),h=kt([d.shape[u]]),f=wE({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});c.push(f);const m=r.dtype,g=[f.shape[0],s],y=xE({backend:n,attrs:{shape:g,value:0,dtype:m}}),b=new lP(f.shape,g,m),x=[{type:"int32",data:[s]},{type:"int32",data:[kt(f.shape)]}],v=n.runWebGPUProgram(b,[f,o],m,x,y),w=wE({inputs:{x:v},backend:n,attrs:{shape:p}});c.push(v);let k=w;if(null!=l){c.push(w);const e=ed(l);k=TR({inputs:{x:k},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeData(e.dataId))),k}},pP=[CE,gR,bR,vR,kR,CR,FR,DR,PR,LR,BR,UR,GR,jR,qR,nA,aA,sA,iA,cA,hA,gA,bA,SA,IA,TA,RE,AA,LA,GA,XA,QA,$A,JA,eO,nO,rO,sO,pO,hO,fO,gO,SO,CO,vO,NO,TO,AO,OO,DO,BO,UO,VO,HO,KO,XO,QO,$O,tF,vE,aF,uF,oF,iF,hF,fF,mF,yF,vF,kF,CF,TE,IF,DA,_F,EF,AF,OF,DF,PF,zF,VF,WF,HF,KF,XF,$F,eD,$R,nD,aD,cD,rD,iD,uD,eA,lD,pD,fD,gD,wD,PO,kD,SD,CD,vA,ND,ED,RD,FD,MD,PD,LD,zD,kA,WD,VD,HD,KD,kE,XD,QD,$D,eM,nM,rM,sM,cM,lM,pM,fM,gM,bM,vM,kM,CM,pA,jM,qM,XM,vD,NM,TM,FM,DM,zM,BM,UM,VM,HM,QM,zO,$M,eP,tP,LM,sP,cP,ER,uP,dP,TD];for(const n of pP)Co(n);var hP,fP;let mP;!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(hP||(hP={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(fP||(fP={}));const gP={kernelName:fo,backendName:"wasm",setupFunc:function(e){mP=e.wasm.cwrap(fo,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o,bias:s,preluActivationWeights:i}=t;if("float32"!==r.dtype||"float32"!==o.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=a,p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(o.dataId).id;let f=0;if(null!=s){const e=n.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error("_FusedMatMul only supports rank-1 bias but got "+"rank ".concat(e.shape.length,"."));f=e.id}const m=null==i?0:n.dataIdMap.get(i.dataId).id,g=fP[l];if(null==g)throw new Error("".concat(l," activation not yet supported for FusedConv2D ")+"in the wasm backend.");const y=c?r.shape[2]:r.shape[1],b=u?o.shape[1]:o.shape[2],x=_c(r.shape.slice(0,-2),o.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],r.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(r.shape).buffer),S=new Uint8Array(new Int32Array(o.shape).buffer);return mP(p,k,r.shape.length,h,S,o.shape.length,c,u,g,f,m,d||0,w),v}};function yP(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:a,inputs:{x:r}}=e,o=a.dataIdMap.get(r.dataId).id,s=a.makeOutput(r.shape,t||r.dtype),i=a.dataIdMap.get(s.dataId).id;return 0===kt(s.shape)||n(o,hP[r.dtype],i),s}}}const bP=yP(rn),xP=yP(on),vP=yP(sn);function wP(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:r}=e,{a:o,b:s}=r,i=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(s.dataId).id,u=null!=n?n:o.dtype,l=_c(o.shape,s.shape),d=t.makeOutput(l,u);if(0===kt(l))return d;const p=new Uint8Array(new Int32Array(o.shape).buffer),h=new Uint8Array(new Int32Array(s.shape).buffer),f=t.dataIdMap.get(d.dataId).id;return a(i,p,o.shape.length,c,h,s.shape.length,hP[o.dtype],f),d}}}const kP=wP(cn);let SP;const CP={kernelName:un,backendName:"wasm",setupFunc:function(e){SP=e.wasm.cwrap(un,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===kt(a.shape))return a;const r=t.map((e=>n.dataIdMap.get(e.dataId).id)),o=new Uint8Array(new Int32Array(r).buffer),s=n.dataIdMap.get(a.dataId).id;return SP(o,r.length,hP[a.dtype],s),a}};function IP(e){const{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return Hs(n.readSync(t.dataId),t.shape,t.dtype);const a=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(r),a}const NP={kernelName:va,backendName:"wasm",kernelFunc:IP};let _P;function TP(e){const{inputs:t,backend:n,attrs:a}=e,[r,o]=function(e,t){const n=[],a=[];for(let r=0;r<e.length;++r)1!==e[r]&&n.push(e[r]),1!==e[t[r]]&&a.push(t[r]);for(let r=0;r<a.length;++r){let e=-1;for(let t=0;t<a.length;++t)a[t]>=r&&(-1===e||a[e]>a[t])&&(e=t);a[e]=r}return[n,a]}(t.x.shape,a.perm);let s=!0;for(let f=0;f<o.length;f++)o[f]!==f&&(s=!1);const i=function(e,t){const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];return n}(t.x.shape,a.perm),c={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(s){const e=IP({inputs:t,backend:n});return e.shape=i,e}const u=n.makeOutput(i,c.dtype),l=n.dataIdMap.get(c.dataId).id,d=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(o).buffer),h=new Uint8Array(new Int32Array(c.shape).buffer);return _P(l,h,c.shape.length,hP[c.dtype],d,p,o.length),u}const EP={kernelName:oo,backendName:"wasm",kernelFunc:TP,setupFunc:function(e){_P=e.wasm.cwrap(oo,null,["number","array","number","number","number","array","number"])}};function RP(e,t,n){const a=e.shape,r=e.shape.length,o=Rt(t,a);let s=o;const i=Jl(s,r);let c=null,u=!1;if(null!=i){const t=new Array(r);for(let e=0;e<t.length;e++)t[e]=a[i[e]];s=td(s.length,r),c=TP({inputs:{x:e},attrs:{perm:i},backend:n});const o=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(c.dataId).id!==o&&(u=!0)}return{transposed:c,originalAxes:o,axes:s,inputWasTransposed:u}}let AP;const OP={kernelName:ln,backendName:"wasm",setupFunc:function(e){AP=e.wasm.cwrap(ln,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:o}=a,{x:s}=n;let i=t.dataIdMap.get(s.dataId).id,c=s;const{transposed:u,axes:l,originalAxes:d,inputWasTransposed:p}=RP(s,r,t);if(p){c=u,i=t.dataIdMap.get(u.dataId).id}$l("all",l,c.shape.length);const[h,f]=Ql(c.shape,l),m=kt(f),g=t.makeOutput(h,s.dtype);if(0!==kt(c.shape)){const e=t.dataIdMap.get(g.dataId).id;AP(i,m,e)}if(p&&t.disposeData(u.dataId),o){const e=Zl(g.shape,d);g.shape=e}return g}};let FP;const DP={kernelName:dn,backendName:"wasm",setupFunc:function(e){FP=e.wasm.cwrap(dn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:o}=a,{x:s}=n;let i=t.dataIdMap.get(s.dataId).id,c=s;const{transposed:u,axes:l,originalAxes:d,inputWasTransposed:p}=RP(s,r,t);if(p){c=u,i=t.dataIdMap.get(u.dataId).id}$l("any",l,c.shape.length);const[h,f]=Ql(c.shape,l),m=kt(f),g=t.makeOutput(h,s.dtype);if(0!==kt(c.shape)){const e=t.dataIdMap.get(g.dataId).id;FP(i,m,e)}if(p&&t.disposeData(u.dataId),o){const e=Zl(g.shape,d);g.shape=e}return g}};function MP(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function(e){const{backend:n,inputs:a,attrs:r}=e,{axis:o}=r,{x:s}=a,i=n.dataIdMap.get(s.dataId).id;let c=i,u=s;const{transposed:l,axes:d,inputWasTransposed:p}=RP(s,o,n);if(p){const e=n.dataIdMap.get(l.dataId).id;e!==i&&(u=l,c=e)}const h=u.shape.slice(0,-1),f=n.makeOutput(h,"int32"),m=n.dataIdMap.get(f.dataId).id,g=kt(f.shape),y=u.shape[d[0]];return t(c,hP[u.dtype],g,y,m),p&&n.disposeData(l.dataId),f}}}const PP=MP(pn),LP=MP(hn),zP=yP(fn),BP=yP(mn),WP=yP(gn),UP=wP(bn),VP=yP(yn);let GP;const HP={kernelName:xn,backendName:"wasm",setupFunc:function(e){GP=e.wasm.cwrap(xn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,r=t.x,o=a.dataIdMap.get(r.dataId).id,{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=n,l=Wu(r.shape,s,i,1,c,u),d=l.filterHeight,p=l.filterWidth,h=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,y=l.strideHeight,b=l.strideWidth,x=l.inChannels;if("channelsLast"!==l.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+"".concat(l.dataFormat,"'. Please use 'channelsLast'."));if(1!==l.dilationWidth||1!==l.dilationHeight)throw new Error("was backend only supports average pooling with dilation = [1, 1], "+"got [".concat(l.dilationHeight,", ").concat(l.dilationWidth,"]."));const v=a.makeOutput(l.outShape,"float32"),w=a.dataIdMap.get(v.dataId).id;return GP(o,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,y,b,x,w),v}};let jP;const KP={kernelName:wn,backendName:"wasm",setupFunc:function(e){jP=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c,dataFormat:u}=a,l=Uu(r.shape,o,s,1,i,c,u),d=n.makeOutput(l.outShape,r.dtype);return jP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}};let qP;const XP={kernelName:kn,backendName:"wasm",setupFunc:function(e){qP=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=a,l=Uu(o.shape,s,i,1,c,u),d=n.makeOutput(o.shape,o.dtype);return qP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left,l.filterDepth,l.filterHeight,l.filterWidth),d}};let YP;const QP={kernelName:vn,backendName:"wasm",setupFunc:function(e){YP=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,{filterSize:s,strides:i,pad:c}=a,u=Wu(o.shape,s,i,1,c),l=n.makeOutput(o.shape,o.dtype);return YP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(l.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),l}};function ZP(e){const{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,o=kt(a.shape),s=Et(r,o);return xt(o===kt(s),(()=>"new shape: ".concat(s,", old shape: ").concat(a.shape,". New shape and old ")+"shape must have the same number of elements.")),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:s,dtype:a.dtype}}const $P={kernelName:gr,backendName:"wasm",kernelFunc:ZP};let JP;const eL={kernelName:Sn,backendName:"wasm",setupFunc:function(e){JP=e.wasm.cwrap(Sn,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o}=t,{transposeA:s,transposeB:i}=a;if("float32"!==r.dtype||"float32"!==o.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const c=r.shape.length,u=o.shape.length,l=s?r.shape[c-2]:r.shape[c-1],d=i?o.shape[u-1]:o.shape[u-2],p=s?r.shape[c-1]:r.shape[c-2],h=i?o.shape[u-2]:o.shape[u-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=kt(f),y=kt(m),b=_c(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,h]);xt(l===d,(()=>"Error in matMul: inner shapes (".concat(l,") and (")+"".concat(d,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(o.shape," and transposeA=").concat(s)+" and transposeB=".concat(i," must match.")));const x=i?[y,h,d]:[y,d,h],v=ZP({inputs:{x:r},backend:n,attrs:{shape:s?[g,l,p]:[g,p,l]}}),w=ZP({inputs:{x:o},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(v.dataId).id,S=n.dataIdMap.get(w.dataId).id,C=s?v.shape[2]:v.shape[1],I=i?w.shape[1]:w.shape[2],N=Math.max(g,y),_=n.makeOutput([N,C,I],v.dtype),T=n.dataIdMap.get(_.dataId).id,E=new Uint8Array(new Int32Array(v.shape).buffer),R=new Uint8Array(new Int32Array(w.shape).buffer);return JP(k,E,v.shape.length,S,R,w.shape.length,s,i,T),n.disposeData(v.dataId),n.disposeData(w.dataId),_.shape=b,_}};function tL(e){const{inputs:{x:t},attrs:{begin:n,size:a},backend:r}=e,[o,s]=Cu(t,n,a),i=ku(t.shape,o,s),c=r.readSync(t.dataId),u=r.makeOutput(s,t.dtype),l=Wt(t.shape),d=r.dataIdMap.get(u.dataId);if(i){const e=Su(o,l);if("string"===t.dtype)d.stringBytes=c.slice(e,e+kt(s));else{r.typedArrayFromHeap(u).set(c.subarray(e,e+kt(s)))}return u}if("string"===t.dtype){const e=kb(c,o,s,t.shape,t.dtype);return d.stringBytes=e,u}const p=r.typedArrayFromHeap(u),h=t.shape.length;if(2===h)!function(e,t,n,a,r){let o=0;const s=a[0],i=a[1],c=s+r[0];for(let u=s;u<c;u++){const a=u*t+i;n.set(e.subarray(a,a+r[1]),o),o+=r[1]}}(c,l[0],p,o,s);else if(3===h)!function(e,t,n,a,r,o){let s=0;const i=r[0],c=r[1],u=r[2],l=i+o[0],d=c+o[1];for(let p=i;p<l;p++)for(let r=c;r<d;r++){const i=p*t+r*n+u;a.set(e.subarray(i,i+o[2]),s),s+=o[2]}}(c,l[0],l[1],p,o,s);else if(4===h)!function(e,t,n,a,r,o,s){let i=0;const c=o[0],u=o[1],l=o[2],d=c+s[0],p=u+s[1],h=l+s[2],f=o[3];for(let m=c;m<d;m++)for(let o=u;o<p;o++)for(let c=l;c<h;c++){const u=m*t+o*n+c*a+f;r.set(e.subarray(u,u+s[3]),i),i+=s[3]}}(c,l[0],l[1],l[2],p,o,s);else{const e=kb(c,o,s,t.shape,t.dtype);p.set(e)}return u}const nL={kernelName:Rr,backendName:"wasm",kernelFunc:tL};const aL={kernelName:Cn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,crops:s}=a,i=o.reduce(((e,t)=>e*t)),c=Jf(r.shape,o,i),u=em(c.length,o.length),l=tm(r.shape,o,i),d=nm(s,o.length),p=am(l,s,o.length),h=ZP({inputs:{x:r},backend:n,attrs:{shape:c}}),f=TP({inputs:{x:h},backend:n,attrs:{perm:u}}),m=ZP({inputs:{x:f},backend:n,attrs:{shape:l}}),g=tL({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}};let rL;const oL={kernelName:In,backendName:"wasm",setupFunc:function(e){rL=e.wasm.cwrap(In,null,["number","number","boolean","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r,weights:o}=n,{size:s}=a,i=0!==o.shape.reduce(((e,t)=>e*t),1),c=1===r.shape.length?[s]:[r.shape[0],s],u=t.makeOutput(c,o.dtype);function l(e){return t.dataIdMap.get(e.dataId).id}return rL(l(r),s,i,l(o),hP[o.dtype],l(u)),u}},sL=wP(Nn);const iL={kernelName:_n,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,o=n.typedArrayFromHeap(a),s=n.typedArrayFromHeap(r),i=_c(Array.from(o),Array.from(s));return n.makeOutput([i.length],"int32",void 0,new Int32Array(i))}};function cL(e){const{inputs:{x:t},attrs:{dtype:n},backend:a}=e,r=a.makeOutput(t.shape,n),o=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(o),r}const uL={kernelName:Tn,backendName:"wasm",kernelFunc:cL},lL=yP(En);let dL;const pL={kernelName:Rn,backendName:"wasm",setupFunc:function(e){dL=e.wasm.cwrap(Rn,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:o,clipValueMax:s}=a,i=n.dataIdMap.get(r.dataId).id,c=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(c.dataId).id;return dL(i,o,s,u),c}};function hL(e){const{inputs:t,backend:n}=e,a=Rt(e.attrs.axis,t[0].shape)[0];Gf(t.map((e=>e.shape)),a);let r=Hf(t.map((e=>e.shape)),a);const o=t.filter((e=>kt(e.shape)>0));if(1===o.length)return IP({inputs:{x:o[0]},backend:n});const s=n.makeOutput(r,t[0].dtype);if(0===kt(r))return s;if("string"===o[0].dtype){const e=o.map((e=>{const t=kt(e.shape.slice(a));return ZP({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),i=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));r=Hf(e.map((e=>e.shape)),1);const c=1===e[0].shape[0],u=zy(i,r,t[0].dtype,c),l=Hf(o.map((e=>e.shape)),a);s.shape=l;return n.dataIdMap.get(s.dataId).stringBytes=qm(u),e.forEach((e=>n.disposeData(e.dataId))),s}const i=kt(o[0].shape.slice(0,a));let c=0;const u=o.map((e=>{const t=kt(e.shape.slice(a));return c+=t,t})),l=o.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(s);for(let p=0;p<i;p++){let e=p*c;for(let t=0;t<l.length;t++){const n=u[t],a=p*n,r=l[t].subarray(a,a+n);d.set(r,e),e+=n}}return s}const fL={kernelName:Fn,backendName:"wasm",kernelFunc:hL};let mL;const gL={kernelName:Dn,backendName:"wasm",setupFunc:function(e){mL=e.wasm.cwrap(Dn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:o}=t,s=a.dataIdMap.get(r.dataId).id,i=a.dataIdMap.get(o.dataId).id,{strides:c,dilations:u,pad:l,dimRoundingMode:d,dataFormat:p}=n,h=$u(p),f=Vu(r.shape,o.shape,c,u,l,d,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,S=f.strideHeight,C=f.strideWidth,I=f.inChannels,N=f.outChannels,_="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error("wasm backend Conv2D does not support dataFormat:'"+"".concat(f.dataFormat,"'. Please use 'channelsLast'."));const T=a.makeOutput(f.outShape,"float32"),E=a.dataIdMap.get(T.dataId).id;return mL(s,r.shape[0],r.shape[1],r.shape[2],i,m,g,y,b,x,v,_,w,k,S,C,I,N,E),T}};let yL;const bL={kernelName:Pn,backendName:"wasm",setupFunc:function(e){yL=e.wasm.cwrap(Pn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{dy:r,filter:o}=n,{strides:s,pad:i,dataFormat:c,dimRoundingMode:u,inputShape:l}=a,d=$u(c),p=Vu(l,o.shape,s,1,i,u,!1,d),{batchSize:h,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:S}=p,C=f-1-p.padInfo.top,I=m-1-p.padInfo.left,N="channelsLast"===p.dataFormat,_=Wt(p.inShape),T=Wt(r.shape),[E,R,A]=Wt(o.shape),O=_[0],F=N?_[1]:_[2],D=N?_[2]:1,M=N?1:_[1],P=T[0],L=N?T[1]:T[2],z=N?T[2]:1,B=N?1:T[1],W=t.makeOutput(p.inShape,"float32"),U=t.dataIdMap.get(W.dataId).id,V=t.dataIdMap.get(r.dataId).id,G=t.dataIdMap.get(o.dataId).id;return yL(V,G,h,f,m,y,b,g,v,w,x,k,S,C,I,E,R,A,O,F,D,M,P,L,z,B,U),W}};let xL;const vL={kernelName:Ln,backendName:"wasm",setupFunc:function(e){xL=e.wasm.cwrap(Ln,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a;if("float32"!==r.dtype)throw new Error("Tensor x must have dtype float32, got ".concat(r.dtype));if("float32"!==o.dtype)throw new Error("Tensor filter must have dtype float32, got ".concat(o.dtype));const u=Gu(r.shape,o.shape,s,c,i),l=n.makeOutput(u.outShape,r.dtype);return xL(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(l.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),l}};let wL;const kL={kernelName:zn,backendName:"wasm",setupFunc:function(e){wL=e.wasm.cwrap(zn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,filterShape:c}=a;if("float32"!==r.dtype)throw new Error("Tensor dy must have dtype float32, got ".concat(r.dtype));if("float32"!==o.dtype)throw new Error("Tensor filter must have dtype float32, got ".concat(o.dtype));const u=Gu(r.shape,c,s,1,i),l=n.makeOutput(u.filterShape,o.dtype);return wL(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(l.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),l}};let SL;const CL={kernelName:Bn,backendName:"wasm",setupFunc:function(e){SL=e.wasm.cwrap(Bn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{pad:s,strides:i,inputShape:c}=a;if("float32"!==r.dtype)throw new Error("Tensor dy must have dtype float32, got ".concat(r.dtype));if("float32"!==o.dtype)throw new Error("Tensor filter must have dtype float32, got ".concat(o.dtype));const u=Gu(c,o.shape,i,1,s),l=n.makeOutput(u.inShape,r.dtype);return SL(n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(l.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),l}},IL=yP(Wn),NL=yP(Un);var _L;let TL;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(_L||(_L={}));const EL={kernelName:Hn,backendName:"wasm",setupFunc:function(e){TL=e.wasm.cwrap(Hn,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{method:r,extrapolationValue:o,cropSize:s}=a,{image:i,boxes:c,boxInd:u}=n,l=c.shape[0],[d,p]=s,h=[l,d,p,i.shape[3]];let f,m=t.dataIdMap.get(i.dataId);"float32"!==i.dtype&&(f=cL({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(c.dataId).id,b=t.dataIdMap.get(u.dataId).id,x=t.makeOutput(h,"float32"),v=t.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(i.shape).buffer);return TL(g,y,b,l,w,d,p,_L[r],o,v),null!=f&&t.disposeData(f.dataId),x}};let RL;const AL={kernelName:Vn,backendName:"wasm",setupFunc:function(e){RL=e.wasm.cwrap(Vn,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a,c=r.shape.length;xt("float32"===r.dtype||"int32"===r.dtype,(()=>"cumprod does not support ".concat(r.dtype," tensors in the WASM backend")));const u=Jl([o],c);let l=r;null!==u&&(l=TP({inputs:{x:r},attrs:{perm:u},backend:n}));const d=td(1,c)[0];$l("cumprod",[d],c);const p=n.makeOutput(l.shape,l.dtype),h=l.shape[d],f=n.dataIdMap.get(l.dataId).id,m=n.dataIdMap.get(p.dataId).id;RL(f,s?1:0,i?1:0,h,m,hP[r.dtype]);let g=p;if(null!==u){g=TP({inputs:{x:p},attrs:{perm:ed(u)},backend:n}),n.disposeData(l.dataId),n.disposeData(p.dataId)}return g}};let OL;const FL={kernelName:Gn,backendName:"wasm",setupFunc:function(e){OL=e.wasm.cwrap(Gn,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a,c=r.shape.length;xt("float32"===r.dtype||"int32"===r.dtype,(()=>"cumsum does not support ".concat(r.dtype," tensors in the WASM backend")));const u=Jl([o],c);let l=r;null!==u&&(l=TP({inputs:{x:r},attrs:{perm:u},backend:n}));const d=td(1,c)[0];$l("cumsum",[d],c);const p=n.makeOutput(l.shape,l.dtype),h=l.shape[d],f=n.dataIdMap.get(l.dataId).id,m=n.dataIdMap.get(p.dataId).id;OL(f,s?1:0,i?1:0,h,m,hP[r.dtype]);let g=p;if(null!==u){g=TP({inputs:{x:p},attrs:{perm:ed(u)},backend:n}),n.disposeData(l.dataId),n.disposeData(p.dataId)}return g}};let DL;const ML={kernelName:jn,backendName:"wasm",setupFunc:function(e){DL=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r,weights:o}=n,{size:s,binaryOutput:i}=a,c=0!==o.shape.reduce(((e,t)=>e*t),1),u=1===r.shape.length?[s]:[r.shape[0],s],l=t.makeOutput(u,o.dtype);function d(e){return t.dataIdMap.get(e.dataId).id}return DL(d(r),new Uint8Array(new Int32Array(r.shape).buffer),r.shape.length,s,c,d(o),hP[o.dtype],i,d(l)),l}};let PL;const LL={kernelName:Kn,backendName:"wasm",setupFunc:function(e){PL=e.wasm.cwrap(Kn,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{blockSize:o,dataFormat:s}=a,i=r.shape[0],c=("NHWC"===s?r.shape[1]:r.shape[2])*o,u=("NHWC"===s?r.shape[2]:r.shape[3])*o,l=("NHWC"===s?r.shape[3]:r.shape[1])/(o*o),d="NHWC"===s?[i,c,u,l]:[i,l,c,u],p=t.makeOutput(d,"float32"),h=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(Wt(r.shape)).buffer),m=new Uint8Array(new Int32Array(d).buffer),g=new Uint8Array(new Int32Array(Wt(d)).buffer),y=t.dataIdMap.get(p.dataId).id;return PL(h,o,"NHWC"===s?1:0,f,r.shape.length-1,m,g,d.length,y),p}};let zL;const BL={kernelName:qn,backendName:"wasm",setupFunc:function(e){zL=e.wasm.cwrap(qn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:o}=t,s=a.dataIdMap.get(r.dataId).id,i=a.dataIdMap.get(o.dataId).id,{strides:c,dilations:u,pad:l,dimRoundingMode:d}=n,p=null==u?[1,1]:u,h=Vu(r.shape,o.shape,c,p,l,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,b=h.padInfo.bottom,x=h.padInfo.left,v=h.dilationHeight,w=h.dilationWidth,k=h.strideHeight,S=h.strideWidth,C=h.inChannels,I=h.outChannels,N="SAME"===h.padInfo.type?1:0;if("channelsLast"!==h.dataFormat)throw new Error("wasm backend DepthwiseConv2dNative does not support dataFormat:'"+"".concat(h.dataFormat,"'. Please use 'channelsLast'."));const _=a.makeOutput(h.outShape,"float32"),T=a.dataIdMap.get(_.dataId).id;return zL(s,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,y,b,x,N,v,w,k,S,C,I,T),_}};let WL;const UL={kernelName:Qn,backendName:"wasm",setupFunc:function(e){WL=e.wasm.cwrap("Diag",null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=kt(a.shape),o=n.makeOutput([...a.shape,...a.shape],a.dtype);return WL(n.dataIdMap.get(a.dataId).id,hP[a.dtype],r,n.dataIdMap.get(o.dataId).id),o}};let VL;const GL={kernelName:Zn,backendName:"wasm",setupFunc:function(e){VL=e.wasm.cwrap(Zn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a;if(r.dtype!==o.dtype)throw new Error("Dilation2D error: x must have the same dtype as filter. Got ".concat(r.dtype," and ").concat(o.dtype));const u=Bu(r.shape,o.shape,s,i,"NHWC",c),l=n.makeOutput(u.outShape,r.dtype);return VL(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(l.dataId).id,hP[r.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),l}};let HL;const jL={kernelName:Jn,backendName:"wasm",setupFunc:function(e){HL=e.wasm.cwrap(Jn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,dy:s}=t,{strides:i,pad:c,dilations:u}=a;if(r.dtype!==o.dtype||r.dtype!==s.dtype)throw new Error("Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ".concat(r.dtype,", ").concat(o.dtype,", and ").concat(s.dtype));const l=Bu(r.shape,o.shape,i,c,"NHWC",u),d=n.makeOutput(o.shape,o.dtype);return HL(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,hP[r.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),d}};let KL;const qL={kernelName:$n,backendName:"wasm",setupFunc:function(e){KL=e.wasm.cwrap($n,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,dy:s}=t,{strides:i,pad:c,dilations:u}=a;if(r.dtype!==o.dtype||r.dtype!==s.dtype)throw new Error("Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ".concat(r.dtype,", ").concat(o.dtype,", and ").concat(s.dtype));const l=Bu(r.shape,o.shape,i,c,"NHWC",u),d=n.makeOutput(r.shape,r.dtype);return KL(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,hP[r.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),d}},XL=yP(aa);let YL;const QL={kernelName:ra,backendName:"wasm",setupFunc:function(e){YL=e.wasm.cwrap(ra,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t,o=n.makeOutput(r.shape,"float32"),s=e=>n.dataIdMap.get(e.dataId).id;return YL(s(r),s(a),s(o)),o}},ZL=wP(sa,0,"bool"),$L=yP(oa),JL=yP(ia,"float32");function ez(e){const{inputs:t,attrs:n,backend:a}=e,{input:r}=t,{dim:o}=n,s=r.shape.length,i=r.shape.slice();let c=o;return o<0&&(xt(-(s+1)<=o,(()=>"Axis must be in the interval [".concat(-(s+1),", ").concat(s,"]"))),c=s+o+1),i.splice(c,0,1),ZP({inputs:{x:r},backend:a,attrs:{shape:i}})}const tz={kernelName:ca,backendName:"wasm",kernelFunc:ez},nz=yP(ua,"float32");function az(e){const{attrs:{shape:t,value:n},backend:a}=e;let{attrs:{dtype:r}}=e;r=r||Lt(n);const o=a.makeOutput(t,r);return a.typedArrayFromHeap(o).fill(n),o}const rz={kernelName:da,backendName:"wasm",kernelFunc:az};let oz;const sz={kernelName:pa,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:a}=t,r=n.makeOutput(a.shape,a.dtype),o=n.dataIdMap.get(a.dataId).id,s=n.dataIdMap.get(r.dataId).id,[i,c,u,l]=a.shape;return oz(o,i,c,u,l,s),r},setupFunc:function(e){oz=e.wasm.cwrap(pa,null,["number","number","number","number","number","number"])}},iz=yP(ha),cz=wP(fa);let uz;const lz={kernelName:ma,backendName:"wasm",setupFunc:function(e){uz=e.wasm.cwrap(ma,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:r}=a,{x:o,mean:s,variance:i,offset:c,scale:u}=n,l=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=null!=c?t.dataIdMap.get(c.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(o.shape,o.dtype);if(0===kt(o.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return uz(l,d,p,h,f,r,g),m}};let dz;const pz={kernelName:mo,backendName:"wasm",setupFunc:function(e){dz=e.wasm.cwrap(mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:u,dilations:l,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=Vu(r.shape,o.shape,c,l,u,p),g=fP[h];if(null==g)throw new Error("".concat(h," activation not yet supported for FusedConv2D ")+"in the wasm backend.");const y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(o.dataId).id,x=m.outChannels;let v=0;if(null!=s){const e=a.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error("FusedConv2D only supports rank-1 bias but got "+"rank ".concat(e.shape.length,"."));if(e.shape[0]!==x)throw new Error("FusedConv2D bias shape (".concat(e.shape,") does not ")+"match the number of output channels (".concat(x,")"));v=e.id}const w=m.filterHeight,k=m.filterWidth,S=m.padInfo.top,C=m.padInfo.right,I=m.padInfo.bottom,N=m.padInfo.left,_=m.dilationHeight,T=m.dilationWidth,E=m.strideHeight,R=m.strideWidth,A=m.inChannels,O="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==d)throw new Error("wasm backend FusedConv2D does not support dataFormat:'"+"".concat(d,"'. Please use 'NHWC'."));const P=a.makeOutput(m.outShape,"float32"),L=a.dataIdMap.get(P.dataId).id,z=null==i?0:a.dataIdMap.get(i.dataId).id;return dz(y,F,D,M,b,w,k,v,S,C,I,N,O,_,T,E,R,A,x,g,z,f||0,L),P}};let hz;const fz={kernelName:go,backendName:"wasm",setupFunc:function(e){hz=e.wasm.cwrap(go,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:u,dilations:l,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=Vu(r.shape,o.shape,c,l,u,p,!0),g=fP[h];if(null==g)throw new Error("".concat(h," activation not yet supported for FusedDepthwiseConv2D ")+"in the wasm backend.");const y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(o.dataId).id,x=m.outChannels;let v=0;if(null!=s){const e=a.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error("FusedDepthwiseConv2D only supports rank-1 bias but got "+"rank ".concat(e.shape.length,"."));if(e.shape[0]!==x)throw new Error("FusedDepthwiseConv2D bias shape (".concat(e.shape,") does not ")+"match the number of output channels (".concat(x,")"));v=e.id}const w=m.filterHeight,k=m.filterWidth,S=m.padInfo.top,C=m.padInfo.right,I=m.padInfo.bottom,N=m.padInfo.left,_=m.dilationHeight,T=m.dilationWidth,E=m.strideHeight,R=m.strideWidth,A=m.inChannels,O="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==d)throw new Error("wasm backend FusedDepthwiseConv2D does not support dataFormat:'"+"".concat(d,"'. Please use 'NHWC'."));const P=a.makeOutput(m.outShape,"float32"),L=a.dataIdMap.get(P.dataId).id,z=null==i?0:a.dataIdMap.get(i.dataId).id;return hz(y,F,D,M,b,w,k,v,S,C,I,N,O,_,T,E,R,A,x,g,z,f||0,L),P}};let mz;const gz={kernelName:ya,backendName:"wasm",setupFunc:function(e){mz=e.wasm.cwrap(ya,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:a,indices:r}=n,[o,s,i,c]=ru(a,r),u=t.makeOutput(o,a.dtype);if(0===s)return u;const l=r.shape,d=l[l.length-1],p=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(c).buffer),m=t.dataIdMap.get(u.dataId).id;return mz(p,hP[a.dtype],h,s,d,i,f,m),u}};let yz;const bz={kernelName:ga,backendName:"wasm",setupFunc:function(e){yz=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r,indices:o}=n,{axis:s,batchDims:i}=a,c=Rt(s,r.shape)[0],u=t.readSync(o.dataId),l=r.shape[c];for(let S=0;S<u.length;++S){const e=u[S];xt(e<=l-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(l-1,"]")))}const d=jm(r,o,c,i),p=ZP({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=kt(o.shape),f=ZP({inputs:{x:o},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(0===kt(r.shape))return g;const y=p.shape.length-1,b=t.dataIdMap.get(p.dataId).id,x=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(Wt(p.shape)).buffer),k=new Uint8Array(new Int32Array(Wt(m)).buffer);return yz(b,hP[r.dtype],w,y,x,d.batchSize,k,v),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}},xz=wP(ba,0,"bool"),vz=wP(xa,0,"bool"),wz=yP(Sa,"bool"),kz=yP(Ca,"bool"),Sz=yP(Ia,"bool");let Cz;const Iz={kernelName:Na,backendName:"wasm",setupFunc:function(e){Cz=e.wasm.cwrap(Na,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:a}=e,r=a.dataIdMap.get(t.dataId).id,o=a.makeOutput(t.shape,"float32");if(0!==kt(t.shape)){const e=a.dataIdMap.get(o.dataId).id;Cz(r,hP[t.dtype],n,e)}return o}},Nz=wP(_a,0,"bool"),_z=wP(Ta,0,"bool");let Tz;const Ez={kernelName:Ea,backendName:"wasm",setupFunc:function(e){Tz=e.wasm.cwrap(Ea,null,["number","number","number","number"])},kernelFunc:function(e){const{attrs:t,backend:n}=e,{start:a,stop:r,num:o}=t,s=Math.floor(o),i=n.makeOutput([s],"float32");return Tz(n.dataIdMap.get(i.dataId).id,a,r,s),i}},Rz=yP(Ra),Az=yP(Aa),Oz=wP(Oa,0,"bool"),Fz=yP(Fa),Dz=wP(Da,0,"bool"),Mz=wP("LogicalXor",0,"bool");let Pz;const Lz={kernelName:Ma,backendName:"wasm",setupFunc:function(e){Pz=e.wasm.cwrap(Ma,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:o,bias:s,alpha:i,beta:c}=a;if("float32"!==r.dtype)throw new Error("LRN error: x must have dtype float32");const u=n.makeOutput(r.shape,r.dtype);return Pz(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(u.dataId).id,r.shape[3],o,s,i,c),u}};let zz;const Bz={kernelName:Pa,backendName:"wasm",setupFunc:function(e){zz=e.wasm.cwrap(Pa,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:o,dy:s}=t,{depthRadius:i,bias:c,alpha:u,beta:l}=a;if("float32"!==r.dtype||"float32"!==o.dtype||"float32"!==s.dtype)throw new Error("LRNGrad error: x, y, and dy must have dtype float32");const d=n.makeOutput(r.shape,r.dtype);return zz(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,s.shape[3],i,c,u,l),d}};let Wz;const Uz={kernelName:La,backendName:"wasm",setupFunc:function(e){Wz=e.wasm.cwrap(La,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{reductionIndices:r,keepDims:o}=a,{x:s}=n;let i=t.dataIdMap.get(s.dataId).id,c=s;const{transposed:u,axes:l,originalAxes:d,inputWasTransposed:p}=RP(s,r,t);if(p){c=u,i=t.dataIdMap.get(u.dataId).id}$l("max",l,c.shape.length);const[h,f]=Ql(c.shape,l),m=kt(f),g=t.makeOutput(h,s.dtype);if(0!==kt(c.shape)){const e=t.dataIdMap.get(g.dataId).id;Wz(i,hP[s.dtype],m,e)}if(p&&t.disposeData(u.dataId),o){const e=Zl(g.shape,d);g.shape=e}return g}},Vz=wP(za);let Gz;const Hz={kernelName:Ba,backendName:"wasm",setupFunc:function(e){Gz=e.wasm.cwrap(Ba,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,r=t.x,o=a.dataIdMap.get(r.dataId).id;xt("float32"===r.dtype,(()=>"Error in MaxPool: only float32 input is supported. Got ".concat(r.dtype,".")));const{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=n,l=Wu(r.shape,s,i,1,c,u),d=l.filterHeight,p=l.filterWidth,h=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,y=l.dilationHeight,b=l.dilationWidth,x=l.strideHeight,v=l.strideWidth,w=l.inChannels,k=l.outChannels;if("channelsLast"!==l.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+"".concat(l.dataFormat,"'. Please use 'channelsLast'."));const S=a.makeOutput(l.outShape,"float32"),C=a.dataIdMap.get(S.dataId).id;return Gz(o,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,y,b,x,v,w,k,C),S}};let jz;const Kz={kernelName:Ua,backendName:"wasm",setupFunc:function(e){jz=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c,dataFormat:u}=a,l=Uu(r.shape,o,s,1,i,c,u),d=n.makeOutput(l.outShape,r.dtype);return jz(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}};let qz;const Xz={kernelName:Va,backendName:"wasm",setupFunc:function(e){qz=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=a,l=Uu(o.shape,s,i,1,c,u),d=n.makeOutput(o.shape,o.dtype);return qz(n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}};let Yz;const Qz={kernelName:Wa,backendName:"wasm",setupFunc:function(e){Yz=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=a,l=Wu(o.shape,s,i,1,c,u),d=n.makeOutput(o.shape,o.dtype);return Yz(n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),d}};let Zz;const $z={kernelName:Ga,backendName:"wasm",setupFunc:function(e){Zz=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,includeBatchInIndex:c}=a;xt(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const u=[1,1];xt(Qu(s,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(u,"'")));const l=Wu(r.shape,o,s,[1,1],i),d=n.makeOutput(l.outShape,r.dtype),p=n.makeOutput(l.outShape,"int32");return Zz(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,n.dataIdMap.get(p.dataId).id,hP[r.dtype],c,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),[d,p]}};let Jz;const eB={kernelName:Ha,backendName:"wasm",setupFunc:function(e){Jz=e.wasm.cwrap(Ha,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:o}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let c=i,u=s;const{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=RP(s,r,t);let f=d;if(h){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,c=e,f=td(f.length,u.shape.length))}$l("mean",f,u.shape.length);const[m,g]=Ql(u.shape,f),y=kt(g);let b=u;"float32"!==u.dtype&&(b=cL({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),c=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(m,"float32");if(0!==kt(u.shape)){const e=t.dataIdMap.get(x.dataId).id;Jz(c,y,e)}if(h&&t.disposeData(l.dataId),o){const e=Zl(x.shape,p);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}};let tB;const nB={kernelName:ja,backendName:"wasm",setupFunc:function(e){tB=e.wasm.cwrap(ja,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:o}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let c=i,u=s;const{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=RP(s,r,t);if(h){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,c=e)}$l("min",d,u.shape.length);const[f,m]=Ql(u.shape,d),g=kt(m),y=t.makeOutput(f,u.dtype);if(0!==kt(u.shape)){const e=t.dataIdMap.get(y.dataId).id;tB(c,hP[s.dtype],g,e)}if(h&&t.disposeData(l.dataId),o){const e=Zl(y.shape,p);y.shape=e}return y}},aB=wP(Ka);var rB;let oB;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(rB||(rB={}));const sB={kernelName:qa,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,mode:r}}=e,o=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),s=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(o,t.dtype),c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),l=a.map((e=>e[0])),d=a.map((e=>e[1])),p=new Uint8Array(new Int32Array(l).buffer),h=new Uint8Array(new Int32Array(d).buffer);return oB(s,u,t.shape.length,hP[t.dtype],p,h,rB[r],c),i},setupFunc:function(e){oB=e.wasm.cwrap(qa,null,["number","array","number","number","array","array","number","number"])}};let iB;function cB(e){const{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,r=t.dataIdMap.get(n.dataId).id,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(o.dataId).id,i=n.shape[a],c=kt(n.shape)/i;return 0===kt(o.shape)||iB(r,s,i,c),o}const uB={kernelName:Wr,backendName:"wasm",setupFunc:function(e){iB=e.wasm.cwrap(Wr,null,["number","number","number","number"])},kernelFunc:cB};let lB;const dB={kernelName:Ya,backendName:"wasm",setupFunc:function(e){lB=e.wasm.cwrap(Ya,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:o,seed:s,normalized:i}=a;if("float32"!==r.dtype)throw new Error("Tensor logits must have dtype float32, got ".concat(r.dtype));const c=i?r:cB({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),[u,l]=c.shape,d=n.makeOutput([u,o],"int32");return lB(n.dataIdMap.get(c.dataId).id,u,l,o,s,n.dataIdMap.get(d.dataId).id),i||n.disposeData(c.dataId),d}},pB=wP(Xa),hB=wP(Qa),fB=yP(Za);function mB(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),a=n[0],r=n[1],o=n[2],s=n[3];return e.wasm._free(t),{pSelectedIndices:a,selectedSize:r,pSelectedScores:o,pValidOutputs:s}}let gB;const yB={kernelName:Ja,backendName:"wasm",setupFunc:function(e){gB=e.wasm.cwrap(Ja,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:o,scoreThreshold:s}=a,{boxes:i,scores:c}=n,u=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(c.dataId).id,d=gB(u,l,o,r,s),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=mB(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}};let bB;const xB={kernelName:er,backendName:"wasm",setupFunc:function(e){bB=e.wasm.cwrap(er,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:o,scoreThreshold:s,padToMaxOutputSize:i}=a,{boxes:c,scores:u}=n,l=t.dataIdMap.get(c.dataId).id,d=t.dataIdMap.get(u.dataId).id,p=bB(l,d,o,r,s,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=mB(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",h),t.makeOutput([],"int32",g)]}};let vB;const wB={kernelName:tr,backendName:"wasm",setupFunc:function(e){vB=e.wasm.cwrap(tr,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:o,scoreThreshold:s,softNmsSigma:i}=a,{boxes:c,scores:u}=n,l=t.dataIdMap.get(c.dataId).id,d=t.dataIdMap.get(u.dataId).id,p=vB(l,d,o,r,s,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=mB(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",h),t.makeOutput([f],"float32",m)]}},kB=wP($a,0,"bool");let SB;const CB={kernelName:ar,backendName:"wasm",setupFunc:function(e){SB=e.wasm.cwrap(ar,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:o,depth:s,onValue:i,offValue:c}=a,u=n.makeOutput([...r.shape,s],o),l=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(r.dataId).id;return SB(d,s,i,c,l),u}};const IB={kernelName:nr,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(1),a}};const NB={kernelName:rr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return ez({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const o=t[0].shape,s=t[0].dtype;t.forEach((e=>{vt(o,e.shape,"All tensors passed to stack must have matching shapes"),xt(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=hL({inputs:t.map((e=>{const t=ez({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeData(e.dataId))),c}};let _B;const TB={kernelName:or,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:r}}=e,o=a.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===kt(t.shape))return az({backend:n,attrs:{shape:o,value:r,dtype:t.dtype}});const s=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(o,t.dtype),c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),l=a.map((e=>e[0])),d=a.map((e=>e[1])),p=new Uint8Array(new Int32Array(l).buffer),h=new Uint8Array(new Int32Array(d).buffer);return _B(s,u,t.shape.length,hP[t.dtype],p,h,r,c),i},setupFunc:function(e){_B=e.wasm.cwrap(or,null,["number","array","number","number","array","array","number","number"])}},EB=wP(sr);let RB;const AB={kernelName:ir,backendName:"wasm",setupFunc:function(e){RB=e.wasm.cwrap(ir,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,o=n.dataIdMap.get(a.dataId).id,s=n.dataIdMap.get(r.dataId).id;let i=o;const c=a;let u=c;"float32"!==c.dtype&&(u=cL({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(u.dataId).id);const l=n.makeOutput(a.shape,"float32"),d=n.dataIdMap.get(l.dataId).id;return RB(i,s,d),"float32"!==c.dtype&&n.disposeData(u.dataId),l}};let OB;const FB={kernelName:cr,backendName:"wasm",setupFunc:function(e){OB=e.wasm.cwrap(cr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:o}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let c=i,u=s;const{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=RP(s,r,t);let f=d;if(h){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,c=e,f=td(f.length,u.shape.length))}$l("prod",f,u.shape.length);const[m,g]=Ql(u.shape,f),y=kt(g),b=t.makeOutput(m,u.dtype);if(0!==kt(u.shape)){const e=t.dataIdMap.get(b.dataId).id;OB(c,y,hP[b.dtype],e)}if(h&&t.disposeData(l.dataId),o){const e=Zl(b.shape,p);b.shape=e}return b}},DB={kernelName:pr,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:o,dtype:s}=n,i=bb(a,r,o,s),c=t.makeOutput([i.length],s);return t.typedArrayFromHeap(c).set(i),c}},MB=wP(ta),PB=yP(fr),LB=yP(mr),zB=yP(wr);let BB;const WB={kernelName:xr,backendName:"wasm",setupFunc:function(e){BB=e.wasm.cwrap(xr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:o,halfPixelCenters:s,size:i}=a,[c,u]=i,[l,d,p,h]=r.shape,f=[l,c,u,h];let m,g=t.dataIdMap.get(r.dataId);"float32"!==g.dtype&&(m=cL({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,b=t.makeOutput(f,"float32");if(0===kt(r.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return BB(y,l,d,p,h,c,u,o?1:0,s?1:0,x),null!=m&&t.disposeData(m.dataId),b}};let UB;const VB={kernelName:vr,backendName:"wasm",setupFunc:function(e){UB=e.wasm.cwrap(vr,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,i=n.makeOutput(r.shape,"float32");let c,u=n.dataIdMap.get(r.dataId);return"float32"!==u.dtype&&(c=cL({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),u=n.dataIdMap.get(c.dataId)),UB(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(o.shape).buffer),s),null!=c&&n.disposeData(c.dataId),i}};let GB;const HB={kernelName:yr,backendName:"wasm",setupFunc:function(e){GB=e.wasm.cwrap(yr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:o,halfPixelCenters:s,size:i}=a,[c,u]=i,[l,d,p,h]=r.shape,f=[l,c,u,h],m=t.makeOutput(f,"float32");if(0===kt(r.shape))return m;let g,y=t.dataIdMap.get(r.dataId);"float32"!==y.dtype&&(g=cL({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));const b=y.id,x=t.dataIdMap.get(m.dataId).id;return GB(b,l,d,p,h,c,u,o?1:0,s?1:0,x),null!=g&&t.disposeData(g.dataId),m}};let jB;const KB={kernelName:br,backendName:"wasm",setupFunc:function(e){jB=e.wasm.cwrap(br,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,i=n.makeOutput(r.shape,"float32");let c,u=n.dataIdMap.get(r.dataId);return"float32"!==u.dtype&&(c=cL({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),u=n.dataIdMap.get(c.dataId)),jB(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(o.dataId).id,n.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(o.shape).buffer),s),null!=c&&n.disposeData(c.dataId),i}};let qB;const XB={kernelName:kr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:o}=a,s=Rt(o,r.shape);if(0===r.shape.length)return IP({inputs:{x:r},backend:n});const i=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);qB(c,l,s.length,d,r.shape.length,u);const p=ZP({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),p},setupFunc:function(e){qB=e.wasm.cwrap(kr,null,["number","array","number","array","number","number"])}};let YB;const QB={kernelName:ho,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{radians:o,fillValue:s,center:i}=a,c=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(c.dataId).id,[d,p,h,f]=r.shape,[m,g]=$f(i,p,h),y="number"===typeof s?[s,s,s,0===s?0:255]:[...s,255],b=new Uint8Array(new Int32Array(y).buffer);return YB(u,d,p,h,f,o,m,g,b,y.length,l),c},setupFunc:function(e){YB=e.wasm.cwrap(ho,null,["number","number","number","number","number","number","number","number","array","number","number"])}},ZB=yP(Sr),$B=yP(Cr);let JB;const eW={kernelName:Ir,backendName:"wasm",setupFunc:function(e){JB=e.wasm.cwrap(Ir,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{indices:r,updates:o}=n,{shape:s}=a,i=t.makeOutput(s,o.dtype);if(0===kt(s))return i;const{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=iu(0,r,s),h=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(o.dataId).id,m=new Uint8Array(new Int32Array(d).buffer),g=t.dataIdMap.get(i.dataId).id;return JB(h,f,hP[o.dtype],c,u,l,m,p,g),i}};let tW;const nW={kernelName:_r,backendName:"wasm",setupFunc:function(e){tW=e.wasm.cwrap(_r,null,["number","number","number","number","number","number","bool","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:o}=t,{side:s}=a;if(r.dtype!==o.dtype)throw new Error("SearchSorted error: sorted_sequence must have the same dtype as values. Got ".concat(r.dtype," and ").concat(o.dtype));const i=n.makeOutput(o.shape,"int32");function c(e){return n.dataIdMap.get(e.dataId).id}return tW(c(r),c(o),r.shape[0],r.shape[1],o.shape[1],hP[r.dtype],"left"===s,c(i)),i}};let aW;const rW={kernelName:Tr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:o}=t,s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(o.dataId).id,u=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(u.dataId).id,d=a.shape.length,p=r.shape.length,h=0===d||d>1||1===p?1:kt(r.shape.slice(1));return aW(s,i,c,h,l),u},setupFunc:function(e){aW=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},oW=yP(Er);let sW;const iW={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){sW=e.wasm.cwrap(Dr,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(r.dataId).id;return 0===kt(r.shape)||sW(a,o),r}},cW=yP(Fr),uW=yP(Ar),lW=yP(Or),dW=yP(Mr);const pW={kernelName:zr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,paddings:s}=a,i=kt(o),c=[[0,0]];c.push(...s);for(let g=1+o.length;g<r.shape.length;++g)c.push([0,0]);const u=TB.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),l=Jf(u.shape,o,i,!1),d=em(l.length,o.length,!1),p=tm(u.shape,o,i,!1),h=ZP({inputs:{x:u},backend:n,attrs:{shape:l}}),f=TP({inputs:{x:h},backend:n,attrs:{perm:d}}),m=ZP({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeData(u.dataId),n.disposeData(h.dataId),n.disposeData(f.dataId),m}};let hW;const fW={kernelName:Ur,backendName:"wasm",setupFunc:function(e){hW=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:a,values:r,denseShape:o,defaultValue:s}=n,i=a.shape[0],c=a.shape[1],u=t.readSync(o.dataId)[0],l=[i+u,c],d=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(s.dataId).id,f=t.makeOutput(l,a.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(l.slice(0,1),r.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([u],"bool"),x=t.dataIdMap.get(b.dataId).id,v=t.makeOutput([i],a.dtype),w=t.dataIdMap.get(v.dataId).id,k=t.makeOutput([4],"int32"),S=t.dataIdMap.get(k.dataId).id,C=hW(d,p,hP[r.dtype],i,u,c,h,m,y,x,w,S),I=t.readSync(k.dataId);let N;switch(I[0]){case 1:N=Am(I[1]);break;case 2:N=Om(I[1],I[2]);break;case 3:N=Fm(I[1],I[2],I[3]);break;default:N=""}if(t.disposeData(k.dataId),N)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(v.dataId),new Error(N);let _=f,T=g;return C!==l[0]&&(_=tL({inputs:{x:f},attrs:{begin:0,size:[C,c]},backend:t}),T=tL({inputs:{x:g},attrs:{begin:0,size:C},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[_,T,b,v]}};let mW;const gW={kernelName:Vr,backendName:"wasm",setupFunc:function(e){mW=e.wasm.cwrap(Vr,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:a,inputShape:r,newShape:o}=n;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==o.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(o.shape));const s=t.dataIdMap.get(a.dataId).id,i=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(o.dataId).id,u=a.shape[0],l=kt(o.shape),d=t.makeOutput([u,l],a.dtype),p=t.dataIdMap.get(d.dataId).id,h=t.makeOutput([l],o.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;mW(s,i,c,u,p,f,g);const y=t.readSync(m.dataId);let b;switch(y[0]){case 0:b=Dm(y[1],y[2]);break;case 1:b=Mm(y[1],y[2]);break;case 2:b="reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero";break;case 3:b=Lm(Array.from(t.readSync(r.dataId)),Array.from(t.readSync(h.dataId)));break;case 4:b=zm(Array.from(t.readSync(r.dataId)),Array.from(t.readSync(h.dataId)));break;default:b=""}if(t.disposeData(m.dataId),b)throw t.disposeData(d.dataId),t.disposeData(h.dataId),new Error(b);return[d,h]}};let yW;function bW(e){yW=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function xW(e,t){const{backend:n,inputs:a}=e,{data:r,indices:o,segmentIds:s}=a,i=o.shape[0],c=n.readSync(s.dataId,i-1,i)[0],u=i>0?c+1:0;if(u<0)throw new Error("segment ids must be >= 0");const l=r.shape.slice();l[0]=u;const d=n.dataIdMap.get(r.dataId).id,p=n.dataIdMap.get(o.dataId).id,h=n.dataIdMap.get(s.dataId).id,f=n.makeOutput(l,r.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;yW(d,hP[r.dtype],r.shape[0],p,h,m,y,t,0);const b=n.readSync(g.dataId);let x;switch(b[0]){case 0:x="segment ids must be >= 0";break;case 1:x="segment ids are not increasing";break;case 2:x=Um(b[1],b[2]);break;case 3:x=Vm(b[1],b[2],b[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(f.dataId),new Error(x);return f}const vW={kernelName:Gr,backendName:"wasm",setupFunc:bW,kernelFunc:function(e){return xW(e,!0)}};const wW={kernelName:Hr,backendName:"wasm",setupFunc:bW,kernelFunc:function(e){return xW(e,!1)}};let kW;const SW={kernelName:jr,backendName:"wasm",setupFunc:function(e){kW=e.wasm.cwrap(jr,null,["number","number","number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{sparseIndices:r,sparseValues:o,defaultValue:s}=n,{outputShape:i}=a,c=t.makeOutput(i,s.dtype);if(0===kt(i))return c;const{sliceRank:u,numUpdates:l,sliceSize:d,strides:p,outputSize:h}=iu(0,r,i),f=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(o.dataId).id,g=t.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),b=t.dataIdMap.get(c.dataId).id;return kW(f,m,o.shape.length,g,hP[s.dtype],u,l,d,y,h,b),c}};const CW={kernelName:Br,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{numOrSizeSplits:o,axis:s}=n,i=Rt(s,r.shape)[0],c=Rm(r,o,i),u=new Array(r.shape.length).fill(0),l=r.shape.slice();return c.map((e=>{const t=[...l];t[i]=e;const n=tL({inputs:{x:r},attrs:{begin:u,size:t},backend:a});return u[i]+=e,n}))}},IW=yP(Pr),NW=yP(qr),_W=wP(Kr);let TW;const EW={kernelName:lo,backendName:"wasm",setupFunc:function(e){TW=e.wasm.cwrap(lo,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{alpha:r}=a,{x:o}=n,s=t.dataIdMap.get(o.dataId).id,i=t.makeOutput(o.shape,o.dtype),c=t.dataIdMap.get(i.dataId).id;return TW(s,r,hP[o.dtype],c),i}};let RW;const AW={kernelName:Yr,backendName:"wasm",setupFunc:function(e){RW=e.wasm.cwrap(Yr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{begin:o,end:s,strides:i,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:p}=a,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Iu(r.shape,o,s,i,c,u,l,d,p);let w;if(m)w=ZP({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){xt(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=pu(b,x,v),n=tL({inputs:{x:r},backend:t,attrs:{begin:b,size:e}});w=ZP({inputs:{x:n},backend:t,attrs:{shape:f}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(h,"float32"),n=t.dataIdMap.get(r.dataId).id,a=new Uint8Array(new Int32Array(Wt(r.shape)).buffer),o=new Uint8Array(new Int32Array(b).buffer),s=new Uint8Array(new Int32Array(x).buffer),i=new Uint8Array(new Int32Array(v).buffer),c=new Uint8Array(new Int32Array(h).buffer),u=new Uint8Array(new Int32Array(Wt(h)).buffer),l=t.dataIdMap.get(e.dataId).id;RW(n,a,r.shape.length,o,s,i,c,u,h.length,l),w=ZP({inputs:{x:e},backend:t,attrs:{shape:f}}),t.disposeData(e.dataId)}return w}};const OW={kernelName:Qr,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{data:r,dataSplits:o}=n,{separator:s,nGramWidths:i,leftPad:c,rightPad:u,padWidth:l,preserveShortSequences:d}=a,p=t.readSync(r.dataId),h=t.readSync(o.dataId),[f,m]=Rb(p,h,s,i,c,u,l,d),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;const y=t.makeOutput(o.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}};const FW={kernelName:Zr,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{input:r,delimiter:o}=n,{skipEmpty:s}=a,i=t.readSync(r.dataId),c=t.readSync(o.dataId),[u,l,d]=Ob(i,c[0],s),p=l.length,h=t.makeOutput([p,2],"int32");t.typedArrayFromHeap(h).set(u);const f=t.makeOutput([p],"string");t.dataIdMap.get(f.dataId).stringBytes=l;const m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(d),[h,f,m]}};const DW={kernelName:$r,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{input:r}=n,{numBuckets:o}=a,s=Fb(t.readSync(r.dataId),o),i=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(i).set(s),i}},MW=wP(Jr);let PW;const LW={kernelName:Lr,backendName:"wasm",setupFunc:function(e){PW=e.wasm.cwrap(Lr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:o}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let c=i,u=s;const{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=RP(s,r,t);let f=d;if(h){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,c=e,f=td(f.length,u.shape.length))}$l("sum",f,u.shape.length);const[m,g]=Ql(u.shape,f),y=kt(g),b=t.makeOutput(m,u.dtype);if(0!==kt(u.shape)){const e=t.dataIdMap.get(b.dataId).id;PW(c,y,hP[b.dtype],e)}if(h&&t.disposeData(l.dataId),o){const e=Zl(b.shape,p);b.shape=e}return b}},zW=yP(eo),BW=yP(to);let WW;const UW={kernelName:Nr,backendName:"wasm",setupFunc:function(e){WW=e.wasm.cwrap(Nr,null,["number","number","number","number","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{tensor:r,indices:o,updates:s}=n,{}=a,i=t.makeOutput(r.shape,r.dtype);if(0===kt(r.shape))return i;const{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=iu(0,o,r.shape),h=t.dataIdMap.get(o.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(d).buffer),y=t.dataIdMap.get(i.dataId).id;return WW(h,f,hP[s.dtype],c,u,l,g,p,y,m),i}};let VW;const GW={kernelName:no,backendName:"wasm",setupFunc:function(e){VW=e.wasm.cwrap(no,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,o=n.dataIdMap.get(r.dataId).id,{reps:s}=a,i=new Array(r.shape.length);for(let p=0;p<i.length;p++)i[p]=r.shape[p]*s[p];const c=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),l=n.makeOutput(i,r.dtype),d=n.dataIdMap.get(l.dataId).id;return VW(o,c,r.shape.length,u,i.length,hP[l.dtype],d),l}};let HW;const jW={kernelName:ao,backendName:"wasm",setupFunc:function(e){HW=e.wasm.cwrap(ao,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{k:o,sorted:s}=a,i=n.dataIdMap.get(r.dataId).id,c=new Uint8Array(new Int32Array(r.shape).buffer),u=r.shape.slice();u[u.length-1]=o;const l=n.makeOutput(u,r.dtype),d=n.dataIdMap.get(l.dataId).id,p=n.makeOutput(u,"int32"),h=n.dataIdMap.get(p.dataId).id;return HW(i,c,r.shape.length,hP[r.dtype],o,s,d,h),[l,p]}};let KW;const qW={kernelName:ro,backendName:"wasm",setupFunc:function(e){KW=e.wasm.cwrap(ro,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{image:r,transforms:o}=n,{interpolation:s,fillMode:i,fillValue:c,outputShape:u}=a,[l,d,p,h]=r.shape,[f,m]=null!=u?u:[d,p],g=[l,f,m,h],y=new Uint8Array(new Int32Array(Wt(r.shape)).buffer),b=new Uint8Array(new Int32Array(Wt(g)).buffer),x=t.makeOutput(g,r.dtype),v=t.dataIdMap.get(x.dataId).id,w=t.dataIdMap.get(r.dataId).id,k=t.dataIdMap.get(o.dataId).id,S="nearest"===s?1:2;let C;switch(i){case"constant":default:C=1;break;case"reflect":C=2;break;case"wrap":C=3;break;case"nearest":C=4}return KW(w,k,o.shape[0]>1,l,f,m,h,p,d,y,r.shape.length-1,b,g.length-1,S,C,c,v),x}};const XW={kernelName:so,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:o}=t,{outputValues:s,outputShape:i,indices:c}=Wb(a.readSync(o.dataId),r,o.shape,o.dtype);return[a.makeOutput(i,o.dtype,void 0,s),a.makeOutput([c.length],"int32",void 0,c)]}};const YW={kernelName:io,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:o}=a;o<0&&(o+=r.shape.length);const s=r.shape[o],i=r.shape.length,c=new Array(i-1);let u=0;for(let h=0;h<i;h++)h!==o&&(c[u++]=r.shape[h]);const l=new Array(s),d=new Array(i).fill(0),p=r.shape.slice();p[o]=1;for(let h=0;h<l.length;h++)d[o]=h,l[h]=tL({inputs:{x:r},attrs:{begin:d,size:p},backend:n});return l.map((e=>{let{dataId:t,dtype:n}=e;return{dataId:t,dtype:n,shape:c}}))}};const QW={kernelName:uo,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(0),a}},ZW=[gP,bP,xP,vP,kP,CP,OP,DP,PP,LP,zP,BP,WP,UP,VP,HP,QP,KP,XP,eL,aL,oL,sL,iL,uL,lL,pL,fL,gL,bL,vL,kL,CL,IL,NL,EL,AL,FL,ML,LL,BL,UL,GL,jL,qL,XL,QL,ZL,$L,JL,tz,nz,rz,sz,iz,cz,lz,pz,fz,gz,bz,xz,vz,NP,wz,kz,Sz,Iz,Nz,_z,Ez,Az,Rz,Oz,Fz,Dz,Mz,Lz,Bz,Uz,Vz,Hz,Kz,Xz,Qz,$z,eB,nB,aB,sB,dB,pB,hB,fB,yB,xB,wB,kB,CB,IB,NB,TB,EB,AB,FB,DB,MB,PB,LB,zB,$P,WB,VB,HB,KB,XB,QB,ZB,$B,eW,nW,rW,oW,iW,cW,uW,lW,nL,uB,dW,pW,fW,gW,vW,wW,SW,CW,IW,NW,_W,EW,AW,OW,FW,DW,MW,LW,zW,BW,UW,GW,jW,qW,EP,XW,YW,QW];for(const n of ZW)Co(n);const $W=Jt();$W.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(_j){return!1}})),$W.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if($W.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(_j){return!1}}));var JW=n(764),eU=n.n(JW),tU=n(562),nU=n(372),aU=n.n(nU);const rU=eU()||JW,oU=aU()||nU;class sU extends ht{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(mU),gU=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new pt(this,qs())}write(e,t,n){const a={id:this.dataIdNextNumber++};return this.move(a,e,t,n,1),a}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=Go();e();return{kernelMs:Go()-t}}move(e,t,n,a,r){const o=this.dataIdNextNumber++;if("string"===a){const s=t;return void this.dataIdMap.set(e,{id:o,stringBytes:s,shape:n,dtype:a,memoryOffset:null,refCount:r})}const s=kt(n),i=s*Mt(a),c=this.wasm._malloc(i)>>>0;this.dataIdMap.set(e,{id:o,memoryOffset:c,shape:n,dtype:a,refCount:r}),this.wasm.tfjs.registerTensor(o,s,c),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),c)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:a,dtype:r,shape:o,stringBytes:s}=this.dataIdMap.get(e);if("string"===r)return null!=t&&0!==t||!(null==n||n>=s.length)?s.slice(t,n):s;t=t||0,n=n||kt(o);const i=Mt(r);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error("Unknown dtype ".concat(t))}}(this.wasm.HEAPU8.slice(a+t*i,a+n*i).buffer,r)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){if(this.dataIdMap.has(e)){return this.dataIdMap.get(e).refCount}return 0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,a){let r;if(null==n)r=this.write(null!==a&&void 0!==a?a:null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const o=kt(e);this.wasm.tfjs.registerTensor(a,o,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap(e){let{shape:t,dtype:n,dataId:a}=e;const r=this.wasm.HEAPU8.buffer,{memoryOffset:o}=this.dataIdMap.get(a),s=kt(t);switch(n){case"float32":return new Float32Array(r,o,s);case"int32":return new Int32Array(r,o,s);case"bool":return new Uint8Array(r,o,s);default:throw new Error("Unknown dtype ".concat(n))}}}function iU(e){return(t,n)=>(function(e,t){return Jt().platform.fetch(e,t)}(e,{credentials:"same-origin"}).then((a=>{a.ok||t.env.a("failed to load wasm binary file at '".concat(e,"'")),a.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}function cU(e,t,n){if(null!=lU)return lU;let a="tfjs-backend-wasm.wasm";return e&&t?a="tfjs-backend-wasm-threaded-simd.wasm":e&&(a="tfjs-backend-wasm-simd.wasm"),null!=pU&&null!=pU[a]?pU[a]:n+a}const uU=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let lU=null,dU=null,pU={},hU=!1,fU=!1;let mU=-1,gU=null;$s("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([Jt().getAsync("WASM_HAS_SIMD_SUPPORT"),Jt().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,a)=>{const r={locateFile:(n,a)=>{if(n.endsWith(".worker.js")){const e=tU.$.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?cU(e,t,null!=dU?dU:a):a+n}};fU&&(r.instantiateWasm=iU(cU(e,t,null!=dU?dU:"")));let o,s=!1;r.onAbort=()=>{s||hU||(hU=!0,a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==lU?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+rU.toString()],{type:"text/javascript"}),o=rU(r)):o=oU(r),o.then((e=>{s=!0,hU=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(a)}))}();return new sU(e)}),2);var yU=n(879);var bU,xU;Jt().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(bU||(bU={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(xU||(xU={}));const vU={};function wU(e){return vU[e]}function kU(e,t,n,a,r){const o=t.inputParams[e];if(o&&void 0!==o.inputIndexStart){const e=o.inputIndexStart,s=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?e+1:o.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===o.type)return SU(t.inputNames[i],n,a,r);if("tensors"===o.type){const o=t.inputs.slice(e,s);return t.inputNames.slice(e,s).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=o[t])||void 0===n?void 0:n.op)})).map((e=>SU(e,n,a,r)))}const c=SU(t.inputNames[i],n,a,r),u=c.dataSync();return"number"===o.type?u[0]:Vt(c.shape,u)}const s=t.attrParams[e];return s&&s.value}function SU(e,t,n,a){const[r,o]=_U(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const s=n.currentContextIds.find((e=>!!t[NU(r,e)]));return void 0!==s?t[NU(r,s)][o]:void 0}function CU(e,t,n){return t[NU(e,n.currentContextId)]}function IU(e,t){const[n,a,r]=_U(e,t);return[NU(n,t&&t.currentContextId),a,r]}function NU(e,t){return t?"".concat(e,"-").concat(t):e}function _U(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function TU(e,t,n){let a=kU("pad",e,t,n);if("explicit"===a){a=kU("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function EU(e){return e.kept?e:rc(e)}const RU=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],AU=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],OU=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],FU=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],DU=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],MU=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],PU=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],LU=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],zU=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],BU=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],WU=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],UU=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],VU=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],GU=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],HU=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],jU=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],KU=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],qU=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],XU=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class YU{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[i,c,u,l,d,p,h,f,m,g,y,b,x,v,w,k,S,C,I].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],o=[],s=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||o.push(e[t.name]),e)),{});let i=[];const c=[];let u={},l={};null!=t&&(u=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const d=Object.keys(s);d.forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=IU(e),o=s[a];if(null!=o.outputs){const e=o.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))})),0===Object.keys(l).length?d.forEach((e=>{const t=s[e];0===t.children.length&&c.push(t)})):Object.keys(l).forEach((e=>{const[t]=IU(e),n=s[t];null!=n&&(n.signatureKey=l[e],c.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=IU(e),n=s[t];n&&(n.signatureKey=u[e],i.push(n))})):i=a;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:s,inputs:i,outputs:c,weights:r,placeholders:a,signature:t,functions:p};return o.length>0&&(h.initNodes=o),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=wU(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=ZU(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ZU(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=iV(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=iV(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=JU(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=JU(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=sV(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=sV(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=$U(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=$U(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=uV(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=uV(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=oV(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oV(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=cV(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=cV(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=nV(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=nV(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=aV(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=aV(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=tV(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=tV(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],o=[];e.signature.inputArg.forEach((e=>{const[t]=IU(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:eV(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,o]=IU(e),s=a[r];if(null!=s.outputs){const e=s.outputs.indexOf(o);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))}));const s=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=IU(s[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,o.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:o,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function QU(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Jt().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ZU(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?QU(r.s,a):n}function $U(e,t,n){const a=e[t];return a?a.b:n}function JU(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function eV(e){switch("string"===typeof e&&(e=bU[e]),e){case bU.DT_FLOAT:case bU.DT_HALF:return"float32";case bU.DT_INT32:case bU.DT_INT64:case bU.DT_INT8:case bU.DT_UINT8:return"int32";case bU.DT_BOOL:return"bool";case bU.DT_DOUBLE:return"float32";case bU.DT_STRING:return"string";case bU.DT_COMPLEX64:case bU.DT_COMPLEX128:return"complex64";default:return null}}function tV(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function nV(e,t,n){const a=e[t];return a&&a.type?eV(a.type):n}function aV(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>eV(e))):n}function rV(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function oV(e,t,n){const a=e[t];return a&&a.shape?rV(a.shape):n}function sV(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function iV(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>QU(e,a))):n}function cV(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>rV(e))):n}function uV(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class lV{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return SU(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return SU(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return JU(this.node.rawAttrs,e,t);if(null!=n.s)return ZU(this.node.rawAttrs,e,t);if(null!=n.b)return $U(this.node.rawAttrs,e,t);if(null!=n.shape)return oV(this.node.rawAttrs,e,t);if(null!=n.type)return nV(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return sV(this.node.rawAttrs,e,t);if(null!=n.list.s)return iV(this.node.rawAttrs,e,t);if(null!=n.list.shape)return cV(this.node.rawAttrs,e,t);if(null!=n.list.b)return uV(this.node.rawAttrs,e,t);if(null!=n.list.type)return aV(this.node.rawAttrs,e,t)}return t}}function dV(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){xt(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],o=t[a];xt(r<0||o<0||r===o,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function pV(e){return"number"!==typeof e&&!e.some((e=>e<0))}function hV(e,t,n){let a=fV(e,n);const r=!pV(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=fV(e.shape,a)})),!pV(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function fV(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],o=t[a];if(r>=0&&o>=0&&r!==o)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:o}return n}class mV{constructor(e,t,n,a,r,o,s){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=o,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=fc(0),Qs(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),dV(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,Qs(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Hs([],[0].concat(this.elementShape));const n=this.readMany(e);return dV(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),th(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return Hs([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return dV(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),al(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,mh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,o=[];Xs((()=>{t=el(t,[1,n,r]);for(let n=0;n<e.length;++n){const s=[0,0===n?0:a[n-1],0],i=[1,e[n],r];o[n]=el(sl(t,s,i),this.elementShape)}return o}));const s=[];for(let i=0;i<e.length;i++)s[i]=i;this.writeMany(s,o)}}class gV{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));dV(t,e.shape,"TensorList shape mismatch: "),Qs(e)})),this.idTensor=fc(0),this.maxNumElements=a,Qs(this.idTensor)}copy(){return new gV([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));dV(e,this.elementShape,"TensorList shape mismatch: ");const a=hV(this.elementShape,this.tensors,e);return Xs((()=>{const e=this.tensors.map((e=>el(e,a)));return th(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=hV(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,dV(a.shape,e,"TensorList shape mismatch: "),el(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(dV(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Qs(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new gV([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));dV(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=hV(this.elementShape,this.tensors,t);return el(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));dV(this.elementShape,t.shape,"TensorList shape mismatch: "),Qs(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));dV(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=hV(this.elementShape,this.tensors,n);return 0===e.length?Hs([],[0].concat(a)):Xs((()=>{const t=e.map((e=>el(this.tensors[e],a)));return th(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));dV(this.elementShape,t,"TensorList shape mismatch: ");const n=hV(this.elementShape,this.tensors,t);return 0===this.size()?Hs([],[0].concat(n)):Xs((()=>{const e=this.tensors.map((e=>el(e,n)));return al(e,0)}))}}const yV=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=kU("thenBranch",e,t,n),r=kU("elseBranch",e,t,n),o=kU("cond",e,t,n),s=kU("args",e,t,n);return(await o.data())[0]?n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=kU("body",e,t,n),r=kU("cond",e,t,n),o=kU("args",e,t,n),s=await n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),i=o.map((e=>e.id));let c=await s[0].data();s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let u=o;for(;c[0];){const e=u;u=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const o=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);c=await o[0].data(),o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[EU(kU("pred",e,t,n))];case"Switch":{const a=kU("pred",e,t,n);let r=kU("data",e,t,n);return r.kept||(r=EU(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==SU(e,t,n)));if(a){return[EU(SU(a,t,n))]}return}case"Enter":{const a=kU("frameName",e,t,n),r=kU("tensor",e,t,n);return n.enterFrame(a),[EU(r)]}case"Exit":{const a=kU("tensor",e,t,n);return n.exitFrame(),[EU(a)]}case"NextIteration":{const a=kU("tensor",e,t,n);return n.nextIteration(),[EU(a)]}case"TensorArrayV3":{const a=kU("size",e,t,n),r=kU("dtype",e,t,n),o=kU("elementShape",e,t,n),s=kU("dynamicSize",e,t,n),i=kU("clearAfterRead",e,t,n),c=kU("identicalElementShapes",e,t,n),u=kU("name",e,t,n),l=new mV(u,r,a,o,c,s,i);return n.addTensorArray(l),[l.idTensor,fc(1)]}case"TensorArrayWriteV3":{const a=kU("tensorArrayId",e,t,n),r=kU("index",e,t,n),o=kU("tensor",e,t,n),s=n.getTensorArray(a.id);return s.write(r,o),[s.idTensor]}case"TensorArrayReadV3":{const a=kU("tensorArrayId",e,t,n),r=kU("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=kU("tensorArrayId",e,t,n),r=kU("indices",e,t,n),o=kU("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,o)]}case"TensorArrayScatterV3":{const a=kU("tensorArrayId",e,t,n),r=kU("indices",e,t,n),o=kU("tensor",e,t,n),s=n.getTensorArray(a.id);return s.scatter(r,o),[s.idTensor]}case"TensorArrayConcatV3":{const a=kU("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),o=kU("dtype",e,t,n);return[r.concat(o)]}case"TensorArraySplitV3":{const a=kU("tensorArrayId",e,t,n),r=kU("tensor",e,t,n),o=kU("lengths",e,t,n),s=n.getTensorArray(a.id);return s.split(o,r),[s.idTensor]}case"TensorArraySizeV3":{const a=kU("tensorArrayId",e,t,n);return[fc(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=kU("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=kU("tensorListId",e,t,n),r=kU("index",e,t,n),o=kU("tensor",e,t,n),s=n.getTensorList(a.id);return s.setItem(r,o),[s.idTensor]}case"TensorListGetItem":{const a=kU("tensorListId",e,t,n),r=kU("index",e,t,n),o=kU("elementShape",e,t,n),s=kU("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,o,s)]}case"TensorListScatterV2":case"TensorListScatter":{const a=kU("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const o=new gV([],n,e.dtype,a),s=mh(e,0);return t.forEach(((e,t)=>{o.setItem(e,s[t])})),o}(kU("tensor",e,t,n),a,kU("elementShape",e,t,n),kU("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=kU("elementShape",e,t,n),r=kU("elementDType",e,t,n);let o;o="TensorListReserve"===e.op?"numElements":"maxNumElements";const s=kU(o,e,t,n),i=function(e,t,n,a){return new gV([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:s);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=kU("tensorListId",e,t,n),r=kU("indices",e,t,n),o=kU("elementShape",e,t,n),s=kU("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,s,o)]}case"TensorListStack":{const a=kU("tensorListId",e,t,n),r=kU("elementShape",e,t,n),o=kU("elementDType",e,t,n),s=kU("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,o,s)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));dV(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=mh(e);return new gV(r,t,a)}(kU("tensor",e,t,n),kU("elementShape",e,t,n),kU("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=kU("tensorListId",e,t,n),r=n.getTensorList(a.id),o=kU("dtype",e,t,n),s=kU("elementShape",e,t,n);return[r.concat(o,s)]}case"TensorListPushBack":{const a=kU("tensorListId",e,t,n),r=kU("tensor",e,t,n),o=n.getTensorList(a.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const a=kU("tensorListId",e,t,n),r=kU("elementShape",e,t,n),o=kU("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,o)]}case"TensorListSplit":{const a=kU("tensor",e,t,n),r=kU("elementShape",e,t,n),o=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const o=fV(e.shape.slice(1),n),s=0===a?0:e.size/a,i=Xs((()=>{const n=[];e=el(e,[1,a,s]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,t[a],s];n[a]=el(sl(e,i,c),o)}return e.dispose(),n})),c=new gV([],n,e.dtype,t.length);for(let u=0;u<i.length;u++)c.setItem(u,i[u]);return c}(a,kU("lengths",e,t,n),r);return n.addTensorList(o),[o.idTensor]}case"TensorListLength":{const a=kU("tensorListId",e,t,n);return[fc(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{const a=kU("tensorListId",e,t,n),r=kU("size",e,t,n),o=n.getTensorList(a.id).resize(r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function bV(e,t,n){const[a,r]=kU("fusedOps",e,t,n),o="biasadd"===a,s=!o,i="prelu"===r,c="fusedbatchnorm"===a,u=kU("numArgs",e,t,n);if(o){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=kU("strides",e,t,n),d=TU(e,t,n),p=kU("dataFormat",e,t,n).toUpperCase(),h=kU("dilations",e,t,n);let[f,m]=kU("args",e,t,n);s&&(m=f,f=void 0);return{stride:l,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:kU("leakyreluAlpha",e,t,n)}}function xV(e,t,n){return{boxes:kU("boxes",e,t,n),scores:kU("scores",e,t,n),maxOutputSize:kU("maxOutputSize",e,t,n),iouThreshold:kU("iouThreshold",e,t,n),scoreThreshold:kU("scoreThreshold",e,t,n),softNmsSigma:kU("softNmsSigma",e,t,n)}}class vV{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=fc(0),this.tensorMap=new Map,Qs(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return fc(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Xs((()=>{const e=mh(t),a=n.length,r=e.length;xt(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];Qs(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Xs((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],o=this.findWithDefault(r,t);e.push(o)}return th(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function wV(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xs;const o=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(kU("a",e,t,n),kU("b",e,t,n))];case"AddN":return[a.addN(kU("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(kU("a",e,t,n),kU("b",e,t,n))];case"Mul":return[a.mul(kU("a",e,t,n),kU("b",e,t,n))];case"RealDiv":case"Div":return[a.div(kU("a",e,t,n),kU("b",e,t,n))];case"DivNoNan":return[a.divNoNan(kU("a",e,t,n),kU("b",e,t,n))];case"FloorDiv":return[a.floorDiv(kU("a",e,t,n),kU("b",e,t,n))];case"Sub":return[a.sub(kU("a",e,t,n),kU("b",e,t,n))];case"Minimum":return[a.minimum(kU("a",e,t,n),kU("b",e,t,n))];case"Maximum":return[a.maximum(kU("a",e,t,n),kU("b",e,t,n))];case"Pow":return[a.pow(kU("a",e,t,n),kU("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(kU("a",e,t,n),kU("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(kU("x",e,t,n))];case"Acos":return[a.acos(kU("x",e,t,n))];case"Acosh":return[a.acosh(kU("x",e,t,n))];case"Asin":return[a.asin(kU("x",e,t,n))];case"Asinh":return[a.asinh(kU("x",e,t,n))];case"Atan":return[a.atan(kU("x",e,t,n))];case"Atan2":return[a.atan2(kU("x",e,t,n),kU("y",e,t,n))];case"Atanh":return[a.atanh(kU("x",e,t,n))];case"Ceil":return[a.ceil(kU("x",e,t,n))];case"Complex":return[a.complex(kU("real",e,t,n),kU("imag",e,t,n))];case"Cos":return[a.cos(kU("x",e,t,n))];case"Cosh":return[a.cosh(kU("x",e,t,n))];case"Elu":return[a.elu(kU("x",e,t,n))];case"Erf":return[a.erf(kU("x",e,t,n))];case"Exp":return[a.exp(kU("x",e,t,n))];case"Expm1":return[a.expm1(kU("x",e,t,n))];case"Floor":return[a.floor(kU("x",e,t,n))];case"Log":return[a.log(kU("x",e,t,n))];case"Log1p":return[a.log1p(kU("x",e,t,n))];case"Imag":return[a.imag(kU("x",e,t,n))];case"Neg":return[a.neg(kU("x",e,t,n))];case"Reciprocal":return[a.reciprocal(kU("x",e,t,n))];case"Real":return[a.real(kU("x",e,t,n))];case"Relu":return[a.relu(kU("x",e,t,n))];case"Round":return[a.round(kU("x",e,t,n))];case"Selu":return[a.selu(kU("x",e,t,n))];case"Sigmoid":return[a.sigmoid(kU("x",e,t,n))];case"Sin":return[a.sin(kU("x",e,t,n))];case"Sign":return[a.sign(kU("x",e,t,n))];case"Sinh":return[a.sinh(kU("x",e,t,n))];case"Softplus":return[a.softplus(kU("x",e,t,n))];case"Sqrt":return[a.sqrt(kU("x",e,t,n))];case"Square":return[a.square(kU("x",e,t,n))];case"Tanh":return[a.tanh(kU("x",e,t,n))];case"Tan":return[a.tan(kU("x",e,t,n))];case"ClipByValue":return[a.clipByValue(kU("x",e,t,n),kU("clipValueMin",e,t,n),kU("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(kU("x",e,t,n))];case"Rsqrt":return[a.rsqrt(SU(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(kU("x",e,t,n),kU("alpha",e,t,n))];case"Prelu":return[a.prelu(kU("x",e,t,n),kU("alpha",e,t,n))];case"IsNan":return[a.isNaN(SU(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(SU(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(SU(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"control":return yV(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Conv1D":{const r=kU("stride",e,t,n),o=kU("pad",e,t,n),s=kU("dataFormat",e,t,n).toUpperCase(),i=kU("dilation",e,t,n);return[a.conv1d(kU("x",e,t,n),kU("filter",e,t,n),r,o,s,i)]}case"Conv2D":{const r=kU("strides",e,t,n),o=TU(e,t,n),s=kU("dataFormat",e,t,n).toUpperCase(),i=kU("dilations",e,t,n);return[a.conv2d(kU("x",e,t,n),kU("filter",e,t,n),[r[1],r[2]],o,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:s,dilations:i,biasArg:c,preluArg:u,activationFunc:l,leakyreluAlpha:d}=bV(e,t,n);return[a.fused.conv2d({x:kU("x",e,t,n),filter:kU("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:c,activation:l,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:s,dilations:i,biasArg:c,preluArg:u,activationFunc:l,leakyreluAlpha:d}=bV(e,t,n);return[a.fused.depthwiseConv2d({x:kU("x",e,t,n),filter:kU("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:c,activation:l,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=kU("outputShape",e,t,n),o=kU("strides",e,t,n),s=TU(e,t,n);return[a.conv2dTranspose(kU("x",e,t,n),kU("filter",e,t,n),r,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=kU("strides",e,t,n),o=TU(e,t,n),s=kU("dilations",e,t,n),i=kU("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(kU("input",e,t,n),kU("filter",e,t,n),[r[1],r[2]],o,i,[s[1],s[2]])]}case"Conv3D":{const r=kU("strides",e,t,n),o=kU("pad",e,t,n),s=kU("dataFormat",e,t,n).toUpperCase(),i=kU("dilations",e,t,n);return[a.conv3d(kU("x",e,t,n),kU("filter",e,t,n),[r[1],r[2],r[3]],o,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=kU("strides",e,t,n),o=kU("pad",e,t,n),s=kU("kernelSize",e,t,n);return[a.avgPool(kU("x",e,t,n),[s[1],s[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=kU("strides",e,t,n),o=kU("pad",e,t,n),s=kU("kernelSize",e,t,n);return[a.maxPool(kU("x",e,t,n),[s[1],s[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=kU("strides",e,t,n),o=kU("pad",e,t,n),s=kU("kernelSize",e,t,n),i=kU("includeBatchInIndex",e,t,n),{result:c,indexes:u}=a.maxPoolWithArgmax(kU("x",e,t,n),[s[1],s[2]],[r[1],r[2]],o,i);return[c,u]}case"AvgPool3D":{const r=kU("strides",e,t,n),o=kU("pad",e,t,n),s=kU("kernelSize",e,t,n);return[a.avgPool3d(kU("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=kU("strides",e,t,n),o=kU("pad",e,t,n),s=kU("kernelSize",e,t,n);return[a.maxPool3d(kU("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=kU("strides",e,t,n),o=kU("pad",e,t,n),s=kU("dilations",e,t,n),i=r[1],c=r[2],u=s[1],l=s[2];return[a.dilation2d(kU("x",e,t,n),kU("filter",e,t,n),[i,c],o,[u,l],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Fill":{const r=kU("shape",e,t,n),o=kU("dtype",e,t,n),s=kU("value",e,t,n);return[a.fill(r,s,o)]}case"LinSpace":{const r=kU("start",e,t,n),o=kU("stop",e,t,n),s=kU("num",e,t,n);return[a.linspace(r,o,s)]}case"Multinomial":{const r=kU("logits",e,t,n),o=kU("numSamples",e,t,n),s=kU("seed",e,t,n);return[a.multinomial(r,o,s)]}case"OneHot":{const r=kU("indices",e,t,n),o=kU("depth",e,t,n),s=kU("onValue",e,t,n),i=kU("offValue",e,t,n),c=kU("dtype",e,t,n);return[a.oneHot(r,o,s,i,c)]}case"Ones":return[a.ones(kU("shape",e,t,n),kU("dtype",e,t,n))];case"OnesLike":return[a.onesLike(kU("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(kU("shape",e,t,n),kU("dtype",e,t,n),kU("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(kU("shape",e,t,n),kU("minval",e,t,n),kU("maxval",e,t,n),kU("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(kU("shape",e,t,n),kU("minval",e,t,n),kU("maxval",e,t,n),kU("seed",e,t,n))];case"Range":{const r=kU("start",e,t,n),o=kU("stop",e,t,n),s=kU("step",e,t,n);return[a.range(r,o,s,kU("dtype",e,t,n))]}case"TruncatedNormal":{const r=kU("shape",e,t,n),o=kU("mean",e,t,n),s=kU("stdDev",e,t,n),i=kU("seed",e,t,n);return[a.truncatedNormal(r,o,s,kU("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(kU("shape",e,t,n),kU("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(kU("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:N;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=xV(e,t,n),l=await r.image.nonMaxSuppressionWithScoreAsync(a,o,s,i,c,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=xV(e,t,n),u=kU("padToMaxOutputSize",e,t,n),l=await r.image.nonMaxSuppressionPaddedAsync(a,o,s,i,c,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=xV(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,o,s,i,c)]}case"Where":{const a=r.cast(kU("condition",e,t,n),"bool"),o=[await r.whereAsync(a)];return a.dispose(),o}case"ListDiff":return r.setdiff1dAsync(kU("x",e,t,n),kU("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"LowerBound":{const r=kU("sortedSequence",e,t,n),o=kU("values",e,t,n);return[a.lowerBound(r,o)]}case"TopKV2":{const r=kU("x",e,t,n),o=kU("k",e,t,n),s=kU("sorted",e,t,n),i=a.topk(r,o,s);return[i.values,i.indices]}case"UpperBound":{const r=kU("sortedSequence",e,t,n),o=kU("values",e,t,n);return[a.upperBound(r,o)]}case"Unique":{const r=kU("x",e,t,n),o=a.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=kU("x",e,t,n),o=kU("axis",e,t,n),s=a.unique(r,o);return[s.values,s.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"ResizeBilinear":{const r=kU("images",e,t,n),o=kU("size",e,t,n),s=kU("alignCorners",e,t,n),i=kU("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[o[0],o[1]],s,i)]}case"ResizeNearestNeighbor":{const r=kU("images",e,t,n),o=kU("size",e,t,n),s=kU("alignCorners",e,t,n),i=kU("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[o[0],o[1]],s,i)]}case"CropAndResize":{const r=kU("image",e,t,n),o=kU("boxes",e,t,n),s=kU("boxInd",e,t,n),i=kU("cropSize",e,t,n),c=kU("method",e,t,n),u=kU("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,o,s,i,c,u)]}case"ImageProjectiveTransformV3":{const r=kU("images",e,t,n),o=kU("transforms",e,t,n),s=kU("outputShape",e,t,n),i=kU("fillValue",e,t,n),c=kU("interpolation",e,t,n),u=kU("fillMode",e,t,n);return[a.image.transform(r,o,c.toLowerCase(),u.toLowerCase(),i,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=kU("default",e,t,n);return[SU(e.name,t,n)||r];case"Placeholder":return[SU(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[EU(kU("x",e,t,n))];case"IdentityN":return kU("x",e,t,n).map((e=>EU(e)));case"Shape":return[a.tensor1d(kU("x",e,t,n).shape,"int32")];case"ShapeN":return kU("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(kU("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(kU("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const o=kU("x",e,t,n),s=kU("data",e,t,n),i=kU("message",e,t,n),c=kU("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,c));return[o];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Equal":return[a.equal(kU("a",e,t,n),kU("b",e,t,n))];case"NotEqual":return[a.notEqual(kU("a",e,t,n),kU("b",e,t,n))];case"Greater":return[a.greater(kU("a",e,t,n),kU("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(kU("a",e,t,n),kU("b",e,t,n))];case"Less":return[a.less(kU("a",e,t,n),kU("b",e,t,n))];case"LessEqual":return[a.lessEqual(kU("a",e,t,n),kU("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(kU("a",e,t,n),kU("b",e,t,n))];case"LogicalNot":return[a.logicalNot(kU("a",e,t,n))];case"LogicalOr":return[a.logicalOr(kU("a",e,t,n),kU("b",e,t,n))];case"Select":case"SelectV2":return[a.where(kU("condition",e,t,n),kU("a",e,t,n),kU("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(kU("a",e,t,n),kU("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(kU("a",e,t,n),kU("b",e,t,n),kU("transposeA",e,t,n),kU("transposeB",e,t,n))];case"Einsum":return[a.einsum(kU("equation",e,t,n),...kU("tensors",e,t,n))];case"Transpose":return[a.transpose(kU("x",e,t,n),kU("perm",e,t,n))];case"_FusedMatMul":const[r,o]=kU("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===o,c=kU("numArgs",e,t,n),u=kU("leakyreluAlpha",e,t,n);if(s){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,d]=kU("args",e,t,n);return[a.fused.matMul({a:kU("a",e,t,n),b:kU("b",e,t,n),transposeA:kU("transposeA",e,t,n),transposeB:kU("transposeB",e,t,n),bias:l,activation:o,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[a.linalg.bandPart(kU("a",e,t,n),kU("numLower",e,t,n),kU("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(kU("x",e,t,n),kU("axis",e,t,n),kU("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(kU("x",e,t,n),kU("mean",e,t,n),kU("variance",e,t,n),kU("offset",e,t,n),kU("scale",e,t,n),kU("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(kU("x",e,t,n),kU("radius",e,t,n),kU("bias",e,t,n),kU("alpha",e,t,n),kU("beta",e,t,n))];case"Softmax":return[a.softmax(kU("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(kU("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=a.raggedGather(kU("paramsNestedSplits",e,t,n),kU("paramsDenseValues",e,t,n),kU("indices",e,t,n),kU("outputRaggedRank",e,t,n));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=a.raggedRange(kU("starts",e,t,n),kU("limits",e,t,n),kU("splits",e,t,n));return[r,o]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(kU("shape",e,t,n),kU("values",e,t,n),kU("defaultValue",e,t,n),kU("rowPartitionTensors",e,t,n),kU("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Max":{const r=kU("axis",e,t,n),o=kU("keepDims",e,t,n);return[a.max(kU("x",e,t,n),r,o)]}case"Mean":{const r=kU("axis",e,t,n),o=kU("keepDims",e,t,n);return[a.mean(kU("x",e,t,n),r,o)]}case"Min":{const r=kU("axis",e,t,n),o=kU("keepDims",e,t,n);return[a.min(kU("x",e,t,n),r,o)]}case"Sum":{const r=kU("axis",e,t,n),o=kU("keepDims",e,t,n);return[a.sum(kU("x",e,t,n),r,o)]}case"All":{const r=kU("axis",e,t,n),o=kU("keepDims",e,t,n);return[a.all(kU("x",e,t,n),r,o)]}case"Any":{const r=kU("axis",e,t,n),o=kU("keepDims",e,t,n);return[a.any(kU("x",e,t,n),r,o)]}case"ArgMax":{const r=kU("axis",e,t,n);return[a.argMax(kU("x",e,t,n),r)]}case"ArgMin":{const r=kU("axis",e,t,n);return[a.argMin(kU("x",e,t,n),r)]}case"Prod":{const r=kU("axis",e,t,n),o=kU("keepDims",e,t,n);return[a.prod(kU("x",e,t,n),r,o)]}case"Cumprod":{const r=kU("axis",e,t,n),o=kU("exclusive",e,t,n),s=kU("reverse",e,t,n);return[a.cumprod(kU("x",e,t,n),r,o,s)]}case"Cumsum":{const r=kU("axis",e,t,n),o=kU("exclusive",e,t,n),s=kU("reverse",e,t,n);return[a.cumsum(kU("x",e,t,n),r,o,s)]}case"Bincount":const r=kU("x",e,t,n),o=kU("weights",e,t,n),s=kU("size",e,t,n);return[a.bincount(r,o,s)];case"DenseBincount":{const r=kU("x",e,t,n),o=kU("weights",e,t,n),s=kU("size",e,t,n),i=kU("binaryOutput",e,t,n);return[a.denseBincount(r,o,s,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"ConcatV2":case"Concat":{const r=kU("n",e,t,n),o=kU("axis",e,t,n);let s=kU("tensors",e,t,n);return s=s.slice(0,r),[a.concat(s,o)]}case"Gather":{const r=kU("x",e,t,n),o=kU("indices",e,t,n);return[a.gather(r,a.cast(o,"int32"),0)]}case"GatherV2":{const r=kU("axis",e,t,n),o=kU("batchDims",e,t,n),s=kU("x",e,t,n),i=kU("indices",e,t,n);return[a.gather(s,a.cast(i,"int32"),r,o)]}case"Reverse":{const r=kU("dims",e,t,n),o=[];for(let e=0;e<r.length;e++)r[e]&&o.push(e);const s=kU("x",e,t,n);return[a.reverse(s,o)]}case"ReverseV2":{const r=kU("axis",e,t,n),o=kU("x",e,t,n);return[a.reverse(o,r)]}case"Slice":{const r=kU("begin",e,t,n),o=kU("size",e,t,n);return[a.slice(kU("x",e,t,n),r,o)]}case"StridedSlice":{const r=kU("begin",e,t,n),o=kU("end",e,t,n),s=kU("strides",e,t,n),i=kU("beginMask",e,t,n),c=kU("endMask",e,t,n),u=kU("ellipsisMask",e,t,n),l=kU("newAxisMask",e,t,n),d=kU("shrinkAxisMask",e,t,n),p=kU("x",e,t,n);return[a.stridedSlice(p,r,o,s,i,c,u,l,d)]}case"Pack":return Xs((()=>{const r=kU("axis",e,t,n),o=kU("tensors",e,t,n),s=o[0].shape,i=a.squeeze(o[0]).shape,c=o.map((e=>{const t=Ct(e.shape,s);if(!t&&!Ct(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,s)}));return[a.stack(c,r)]}));case"Unpack":{const r=kU("axis",e,t,n),o=kU("tensor",e,t,n);return a.unstack(o,r)}case"Tile":{const r=kU("reps",e,t,n);return[a.tile(kU("x",e,t,n),r)]}case"Split":case"SplitV":{const r=kU("axis",e,t,n),o=kU("numOrSizeSplits",e,t,n),s=kU("x",e,t,n);return a.split(s,o,r)}case"ScatterNd":{const r=kU("indices",e,t,n),o=kU("values",e,t,n),s=kU("shape",e,t,n);return[a.scatterND(r,o,s)]}case"GatherNd":{const r=kU("x",e,t,n),o=kU("indices",e,t,n);return[a.gatherND(r,o)]}case"SparseToDense":{const r=kU("sparseIndices",e,t,n),o=kU("outputShape",e,t,n),s=kU("sparseValues",e,t,n),i=kU("defaultValue",e,t,n);return[a.sparseToDense(r,s,o,s.dtype===i.dtype?i:a.cast(i,s.dtype))]}case"TensorScatterUpdate":{const r=kU("indices",e,t,n),o=kU("values",e,t,n),s=kU("tensor",e,t,n);return[a.tensorScatterUpdate(s,r,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:s,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(kU("indices",e,t,n),kU("values",e,t,n),kU("denseShape",e,t,n),kU("defaultValue",e,t,n));return[r,o,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=a.sparse.sparseReshape(kU("inputIndices",e,t,n),kU("inputShape",e,t,n),kU("newShape",e,t,n));return[r,o]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(kU("data",e,t,n),kU("indices",e,t,n),kU("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(kU("data",e,t,n),kU("indices",e,t,n),kU("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"FFT":return[a.fft(kU("x",e,t,n))];case"IFFT":return[a.ifft(kU("x",e,t,n))];case"RFFT":return[a.rfft(kU("x",e,t,n))];case"IRFFT":return[a.irfft(kU("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(kU("input",e,t,n),kU("pattern",e,t,n),kU("rewrite",e,t,n),kU("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=a.string.stringNGrams(kU("data",e,t,n),kU("dataSplits",e,t,n),kU("separator",e,t,n),kU("nGramWidths",e,t,n),kU("leftPad",e,t,n),kU("rightPad",e,t,n),kU("padWidth",e,t,n),kU("preserveShortSequences",e,t,n));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:s}=a.string.stringSplit(kU("input",e,t,n),kU("delimiter",e,t,n),kU("skipEmpty",e,t,n));return[r,o,s]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(kU("input",e,t,n),kU("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Cast":return[a.cast(kU("x",e,t,n),kU("dtype",e,t,n))];case"ExpandDims":{const r=kU("axis",e,t,n);return[a.expandDims(kU("x",e,t,n),r)]}case"Squeeze":{const r=kU("axis",e,t,n);return[a.squeeze(kU("x",e,t,n),r)]}case"Reshape":return[a.reshape(kU("x",e,t,n),kU("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(kU("x",e,t,n),kU("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(kU("x",e,t,n),kU("padding",e,t,n),kU("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(kU("x",e,t,n),kU("padding",e,t,n),kU("constantValue",e,t,n))];case"SpaceToBatchND":{const r=kU("blockShape",e,t,n),o=kU("paddings",e,t,n);return[a.spaceToBatchND(kU("x",e,t,n),r,o)]}case"BatchToSpaceND":{const r=kU("blockShape",e,t,n),o=kU("crops",e,t,n);return[a.batchToSpaceND(kU("x",e,t,n),r,o)]}case"DepthToSpace":{const r=kU("blockSize",e,t,n),o=kU("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(kU("x",e,t,n),r,o)]}case"BroadcastTo":return[a.broadcastTo(kU("x",e,t,n),kU("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(kU("s0",e,t,n),kU("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=kU("keyDType",e,t,n),o=kU("valueDType",e,t,n),s=new vV(r,o);return a.addHashTable(e.name,s),[s.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=kU("tableHandle",e,t,n,a),o=kU("keys",e,t,n),s=kU("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(o,s)]}case"LookupTableFind":case"LookupTableFindV2":{const r=kU("tableHandle",e,t,n,a),o=kU("keys",e,t,n),s=kU("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(o,s)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=kU("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const o=wU(e.op);if(o&&o.customExecutor)return o.customExecutor(new lV(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return Yt(o)?o.then((e=>[].concat(e))):[].concat(o)}class kV{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function SV(e,t,n,a){const r=new Set,o=[];let s=null,i=null;const c=new Set,u=new Set(Object.keys(e).map((e=>_U(e)[0])));a=a||[];const l=new Set(a.map((e=>_U(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(EV(e)||RV(e)||AV(e))&&null==s&&(s=e,i=s.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(u.has(e.name)||l.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{c.has(e.name)||(c.add(e.name),d.push(e))})):o.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:o,dynamicNode:s,syncInputs:i}}function CV(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>_U(e)[0])).map((t=>e.nodes[t])),o=e.initNodes||[],s=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const c=i([...r,...e.weights,...o]).filter(s),u=i([...c,...Object.values(e.nodes)]).filter(s),l=new Map(u.map((e=>[e.name,e]))),d={};for(const m of u){d[m.name]=d[m.name]||0;for(const e of m.children)s(e)||(d[e.name]=Number.POSITIVE_INFINITY),d[e.name]=(d[e.name]||0)+1}const p=Object.entries(d).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),h=[...p];for(;p.length>0;){const e=p.pop(),t=l.get(e);for(const n of t.children.filter(s))0===--d[n.name]&&(h.push(n.name),p.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const o of t.children)n.has(o.name)&&!r.has(o.name)&&(r.add(o.name),a.push(o.name))}const o=e.filter((e=>r.has(e.name)));return o}(h.map((e=>l.get(e))),c);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),o=new Set(e.map((e=>e.name))),s=e=>o.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(s)){if(!n.has(e.name))throw new IV("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new IV("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new IV("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new IV("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,c),f}class IV extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const NV=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),_V=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),TV=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function EV(e){return NV.has(e.op)}function RV(e){return _V.has(e.op)}function AV(e){return TV.has(e.op)}class OV{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new OV(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=SV(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:o}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(o,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const s=CV(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>EV(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},o=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),s=new Map;for(let i=0;i<e.length;++i){const t=o[i];if(t===n)continue;const a=e[i],r=e[t];s.has(r.name)||s.set(r.name,[]),s.get(r.name).push(a)}return s}(s);return{orderedNodes:s,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return Qs(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[_U(e)[0]])),r=t.map((e=>_U(e)[0])),o=new Set(r);let s=r.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(a,s);let c=this.compiledMap.get(i);null==c&&(c=this.compile(e,s),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=Jt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(_j){this.keepIntermediateTensors=!1,console.warn(_j.message)}const u={},l={};return Xs((()=>{const n=new kV(this.weightMap,u,l,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,o]=_U(t,n),s=[];s[o]=e[t],a[r]=s,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(s))}));const r=this.getFrozenTensorIds(a),{orderedNodes:s,nodeLiveUntilMap:i}=c;for(const e of s){if(a[e.name])continue;const t=wV(e,a,n,this._resourceManager);if(Yt(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,o,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>SU(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,o,s){if(!EV(t)&&!o.has(e)){for(const a of n[e])null!=a&&(s[a.id]=(s[a.id]||0)+t.children.length);for(const e of t.inputs){if(EV(e))continue;const t=CU(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,o){function s(e){return EV(e)||r.has(e.name)}if(!EV(e)&&null!=o)for(const i of o){if(s(i))continue;const e=CU(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Jt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(_j){this.keepIntermediateTensors=!1,console.warn(_j.message)}const o=new kV(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const s=await this.executeWithControlFlow(e,o,t,n),i=t.map((e=>SU(e,s,o))),c=i.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),l=new Set([...c,...u,...this.weightIds]);return Object.values(s).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||l.has(e.id)||e.dispose()}))})),null==this.parent&&o.dispose(l),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),o=r.map((e=>this.graph.nodes[_U(e)[0]])),s=n.map((e=>_U(e)[0])),i=new Set(s);let c=s.map((e=>this.graph.nodes[e]));0===c.length&&(c=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:d,syncInputs:p}=SV(e,c,this.weightMap,this._initNodes),h=[...o,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=_U(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;h.length>0;){const e=this.processStack(o,h,t,f,y,g,i,m,u);await Promise.all(e)}null!=d||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter((e=>!EV(e)&&!SU(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=d&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(p,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(l,"]. ").concat(e))}return f}processStack(e,t,n,a,r,o,s,i,c){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let l="";if("Enter"===e.node.op&&kU("isConstant",e.node,a,n)&&([l]=IU(e.node.name,n)),null==a[e.node.name]){const d=wV(e.node,a,n,this._resourceManager);l||([l]=IU(e.node.name,n));const p=n.currentContext;Yt(d)?u.push(d.then((u=>(a[l]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[l]=this.cloneTensorList(u)),n.currentContext=p,this.checkTensorForDisposal(l,e.node,a,n,o,s,i),this.processChildNodes(e.node,t,n,a,r,c),u)))):(a[l]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[l]=this.cloneTensorList(d)),this.checkTensorForDisposal(l,e.node,a,n,o,s,i),this.processChildNodes(e.node,t,n,a,r,c))}else this.processChildNodes(e.node,t,n,a,r,c)}return u}processChildNodes(e,t,n,a,r,o){e.children.forEach((e=>{const[s]=IU(e.name,n);!r[s]&&o.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!SU(e,a,n)))&&(r[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!SU(e,a,n)))&&(r[s]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=_U(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;xt(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&xt(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const o=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=o?a[o.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=_U(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=_U(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class FV{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const DV="?tfjs-format=file",MV="model.json";class PV{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=a,null==n&&(this.loadOptions={}),this.resourceManager=new FV}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Yt(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await ii(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new OV(YU.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=YU.Instance.transformGraph(e.modelInitializer);this.initializer=new OV(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof us?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof us)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,o,s;const i=null===(s=null===(o=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===o?void 0:o[n])||void 0===s?void 0:s.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ys(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function LV(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"===typeof t&&(t=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(MV).concat(DV)}(t));const r=new PV(t,n,a);return await r.load(),r}var zV=function(e,t){return(zV=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)};function BV(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}zV(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var WV=function(){return(WV=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};function UV(e,t,n,a){return new(n||(n=Promise))((function(r,o){function s(e){try{c(a.next(e))}catch(e){o(e)}}function i(e){try{c(a.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,i)}c((a=a.apply(e,t||[])).next())}))}function VV(e,t){var n,a,r,o,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,a&&(r=2&o[0]?a.return:o[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,o[1])).done)return r;switch(a=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,a=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((r=(r=s.trys).length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){s.label=o[1];break}if(6===o[0]&&s.label<r[1]){s.label=r[1],r=o;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(o);break}r[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],a=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}function GV(e,t,n){if(n||2===arguments.length)for(var a,r=0,o=t.length;r<o;r++)!a&&r in t||(a||(a=Array.prototype.slice.call(t,0,r)),a[r]=t[r]);return e.concat(a||Array.prototype.slice.call(t))}var HV=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],jV=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],KV={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},qV={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},XV=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],YV=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function QV(e){return e instanceof SVGAnimatedLength?e.baseVal.value:e}function ZV(e){return UV(this,void 0,void 0,(function(){var t,n;return VV(this,(function(a){switch(a.label){case 0:return t=document.createElement("canvas"),e instanceof us?[4,nu(e,t)]:[3,2];case 1:return a.sent(),[3,3];case 2:t.width=QV(e.width),t.height=QV(e.height),n=t.getContext("2d"),e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0),a.label=3;case 3:return[2,t]}}))}))}function $V(e){return UV(this,void 0,void 0,(function(){var t,n,a,r,o,s;return VV(this,(function(i){switch(i.label){case 0:return e instanceof us?(t=e.shape.slice(0,2),n=t[0],a=t[1],r=ImageData.bind,[4,nu(e)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,i.sent(),a,n]))];case 2:return o=document.createElement("canvas"),s=o.getContext("2d"),o.width=QV(e.width),o.height=QV(e.height),s.drawImage(e,0,0),[2,s.getImageData(0,0,o.width,o.height)]}}))}))}function JV(e){return UV(this,void 0,void 0,(function(){var t;return VV(this,(function(n){switch(n.label){case 0:return e instanceof SVGImageElement||e instanceof OffscreenCanvas?[4,ZV(e)]:[3,2];case 1:return t=n.sent(),[3,3];case 2:t=e,n.label=3;case 3:return[2,au(t,4)]}}))}))}function eG(e){if(e<0||e>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(e));if(!Number.isInteger(e))throw new Error("Mask value must be an integer but got ".concat(e))}var tG={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},nG=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return UV(this,void 0,void 0,(function(){return VV(this,(function(e){return[2,this.mask]}))}))},e.prototype.toImageData=function(){return UV(this,void 0,void 0,(function(){return VV(this,(function(e){return[2,$V(this.mask)]}))}))},e.prototype.toTensor=function(){return UV(this,void 0,void 0,(function(){return VV(this,(function(e){return[2,JV(this.mask)]}))}))},e.prototype.getUnderlyingType=function(){return"canvasimagesource"},e}();function aG(e){return eG(e),"person"}var rG=function(){function e(e){var t,n=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new yU.Pose({locateFile:function(t,n){if(e.solutionPath){var a=e.solutionPath.replace(/\/+$/,"");return"".concat(a,"/").concat(t)}return"".concat(n,"/").concat(t)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults((function(e){if(n.height=e.image.height,n.width=e.image.width,null==e.poseLandmarks)n.poses=[];else{var t=n.translateOutput(e.poseLandmarks,e.poseWorldLandmarks);e.segmentationMask&&(t.segmentation={maskValueToLabel:aG,mask:new nG(e.segmentationMask)}),n.poses=[t]}}))}return e.prototype.translateOutput=function(e,t){var n=this,a={keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,z:e.z,score:e.visibility,name:jV[t]}}))};return null!=t&&(a.keypoints3D=t.map((function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:jV[t]}}))),a},e.prototype.estimatePoses=function(e,t,n){return UV(this,void 0,void 0,(function(){var a,r;return VV(this,(function(o){switch(o.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof us?(r=ImageData.bind,[4,nu(e)]):[3,2];case 1:return a=new(r.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:a=e,o.label=3;case 3:return e=a,[4,this.poseSolution.send({image:e},n)];case 4:return o.sent(),[2,this.poses]}}))}))},e.prototype.dispose=function(){this.poseSolution.close()},e.prototype.reset=function(){this.poseSolution.reset()},e.prototype.initialize=function(){return this.poseSolution.initialize()},e}();function oG(e){return UV(this,void 0,void 0,(function(){var t,n;return VV(this,(function(a){switch(a.label){case 0:return t=function(e){if(null==e)return WV({},tG);var t=WV({},e);return t.runtime="mediapipe",null==t.enableSegmentation&&(t.enableSegmentation=tG.enableSegmentation),null==t.enableSmoothing&&(t.enableSmoothing=tG.enableSmoothing),null==t.smoothSegmentation&&(t.smoothSegmentation=tG.smoothSegmentation),null==t.modelType&&(t.modelType=tG.modelType),t}(e),[4,(n=new rG(t)).initialize()];case 1:return a.sent(),[2,n]}}))}))}function sG(e){return e instanceof us?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function iG(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function cG(e){return e instanceof us?e:au(e)}function uG(e,t,n){return lG(n,"inputResolution"),[1/n.width*e[0][0]*t.width,1/n.height*e[0][1]*t.width,e[0][3]*t.width,1/n.width*e[1][0]*t.height,1/n.height*e[1][1]*t.height,e[1][3]*t.height,0,0]}function lG(e,t){xt(0!==e.width,(function(){return"".concat(t," width cannot be 0.")})),xt(0!==e.height,(function(){return"".concat(t," height cannot be 0.")}))}function dG(e,t,n){var a=n.rotationVectorStartKeypointIndex,r=n.rotationVectorEndKeypointIndex,o=e.locationData,s=o.relativeKeypoints[a].x*t.width,i=o.relativeKeypoints[a].y*t.height,c=o.relativeKeypoints[r].x*t.width,u=o.relativeKeypoints[r].y*t.height,l=2*Math.sqrt((c-s)*(c-s)+(u-i)*(u-i)),d=function(e,t,n){var a,r=e.locationData,o=n.rotationVectorStartKeypointIndex,s=n.rotationVectorEndKeypointIndex;a=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var i=r.relativeKeypoints[o].x*t.width,c=r.relativeKeypoints[o].y*t.height,u=r.relativeKeypoints[s].x*t.width,l=r.relativeKeypoints[s].y*t.height;return iG(a-Math.atan2(-(l-c),u-i))}(e,t,n);return{xCenter:s/t.width,yCenter:i/t.height,width:l/t.width,height:l/t.height,rotation:d}}function pG(e){if(16!==e.length)throw new Error("Array length must be 16 but got ".concat(e.length));return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}function hG(e,t,n,a,r,o,s){return e[t][r]*(e[n][o]*e[a][s]-e[n][s]*e[a][o])}function fG(e,t,n){var a=(t+1)%4,r=(t+2)%4,o=(t+3)%4,s=(n+1)%4,i=(n+2)%4,c=(n+3)%4;return hG(e,a,r,o,s,i,c)+hG(e,r,o,a,s,i,c)+hG(e,o,a,r,s,i,c)}function mG(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var a=[],r=0,o=e;r<o.length;r++){var s=o[r],i=s.x-.5,c=s.y-.5,u=n.ignoreRotation?0:t.rotation,l=Math.cos(u)*i-Math.sin(u)*c,d=Math.sin(u)*i+Math.cos(u)*c;l=l*t.width+t.xCenter,d=d*t.height+t.yCenter;var p=s.z*t.width,h=WV({},s);h.x=l,h.y=d,h.z=p,a.push(h)}return a}function gG(e,t){var n=function(e,t,n,a){var r=(a-n)/255;return{scale:r,offset:n-0*r}}(0,0,t[0],t[1]);return Xs((function(){return sc(uc(e,n.scale),n.offset)}))}function yG(e,t,n){var a,r,o,s,i,c,u,l,d,p,h,f,m=t.outputTensorSize,g=t.keepAspectRatio,y=t.borderMode,b=t.outputTensorFloatRange,x=sG(e),v=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(x,n),w=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var a=t.height,r=t.width;lG(t,"targetSize"),lG(e,"roi");var o,s,i=a/r,c=e.height/e.width,u=0,l=0;return i>c?(o=e.width,s=e.width*i,l=(1-c/i)/2):(o=e.height/i,s=e.height,u=(1-i/c)/2),e.width=o,e.height=s,{top:l,left:u,right:u,bottom:l}}(v,m,g),k=(a=v,r=x.width,o=x.height,s=a.width,i=a.height,c=Math.cos(a.rotation),u=Math.sin(a.rotation),l=a.xCenter,d=a.yCenter,p=1/r,h=1/o,(f=new Array(16))[0]=s*c*1*p,f[1]=-i*u*p,f[2]=0,f[3]=(-.5*s*c*1+.5*i*u+l)*p,f[4]=s*u*1*h,f[5]=i*c*h,f[6]=0,f[7]=(-.5*i*c-.5*s*u*1+d)*h,f[8]=0,f[9]=0,f[10]=s*p,f[11]=0,f[12]=0,f[13]=0,f[14]=0,f[15]=1,pG(f));return{imageTensor:Xs((function(){var t=cG(e),n=sh(uG(k,x,m),[1,8]),a="zero"===y?"constant":"nearest",r=Lf.transform(ud(ac(t,"float32")),n,"bilinear",a,0,[m.height,m.width]);return null!=b?gG(r,b):r})),padding:w,transformationMatrix:k}}function bG(e,t,n,a){return 1===a?.5*(e+t):e+(t-e)*n/(a-1)}function xG(e){return null!=e&&null!=e.currentTime}function vG(e){for(var t={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,a=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,s=0;s<e.length;++s){var i=e[s];n=Math.min(n,i.x),a=Math.max(a,i.x),r=Math.min(r,i.y),o=Math.max(o,i.y),t.locationData.relativeKeypoints.push({x:i.x,y:i.y})}return t.locationData.relativeBoundingBox={xMin:n,yMin:r,xMax:a,yMax:o,width:a-n,height:o-r},t}function wG(e,t,n,a){return UV(this,void 0,void 0,(function(){var a,r,o,s,i;return VV(this,(function(c){switch(c.label){case 0:return e.sort((function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)})),a=sh(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),r=oh(e.map((function(e){return e.score[0]}))),[4,Lf.nonMaxSuppressionAsync(a,r,t,n)];case 1:return[4,(o=c.sent()).array()];case 2:return s=c.sent(),i=e.filter((function(e,t){return s.indexOf(t)>-1})),Ys([a,r,o]),[2,i]}}))}))}function kG(e,t){return e.map((function(e){var n=WV(WV({},e),{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n}))}function SG(e,t,n){return UV(this,void 0,void 0,(function(){var a,r,o,s,i,c,u,l,d,p,h,f,m,g,y,b,x,v,w,k,S,C,I,N;return VV(this,(function(_){switch(_.label){case 0:if(a=eh(t,[0]),r=a.shape,o=r[0],s=r[1],i=r[2],e.length!==i)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(e.length,", heatmap length: ").concat(i));return c=[],[4,a.buffer()];case 1:for(u=_.sent(),l=0;l<e.length;l++)if(d=e[l],p=WV({},d),c.push(p),h=Math.trunc(p.x*s),f=Math.trunc(p.y*o),!(h<0||h>=s||f<0||h>=o)){for(m=Math.trunc((n.kernelSize-1)/2),g=Math.max(0,h-m),y=Math.min(s,h+m+1),b=Math.max(0,f-m),x=Math.min(o,f+m+1),v=0,w=0,k=0,S=0,C=b;C<x;++C)for(I=g;I<y;++I)N=u.get(C,I,l),v+=N,S=Math.max(S,N),w+=I*N,k+=C*N;S>=n.minConfidenceToRefine&&v>0&&(p.x=w/s/v,p.y=k/o/v)}return a.dispose(),[2,c]}}))}))}function CG(e,t){var n=t.left,a=t.top,r=t.left+t.right,o=t.top+t.bottom;return e.map((function(e){return WV(WV({},e),{x:(e.x-n)/(1-r),y:(e.y-a)/(1-o),z:e.z/(1-r)})}))}function IG(e,t,n){return UV(this,void 0,void 0,(function(){var a,r,o,s,i;return VV(this,(function(c){switch(c.label){case 0:return a=e[0],r=e[1],o=function(e,t,n){return Xs((function(){var a,r,o,s;n.reverseOutputOrder?(r=eh(sl(e,[0,n.boxCoordOffset+0],[-1,1])),a=eh(sl(e,[0,n.boxCoordOffset+1],[-1,1])),s=eh(sl(e,[0,n.boxCoordOffset+2],[-1,1])),o=eh(sl(e,[0,n.boxCoordOffset+3],[-1,1]))):(a=eh(sl(e,[0,n.boxCoordOffset+0],[-1,1])),r=eh(sl(e,[0,n.boxCoordOffset+1],[-1,1])),o=eh(sl(e,[0,n.boxCoordOffset+2],[-1,1])),s=eh(sl(e,[0,n.boxCoordOffset+3],[-1,1]))),r=sc(uc(cc(r,n.xScale),t.w),t.x),a=sc(uc(cc(a,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(o=uc(cd(cc(o,n.hScale)),t.h),s=uc(cd(cc(s,n.wScale)),t.w)):(o=uc(cc(o,n.hScale),t.h),s=uc(cc(s,n.wScale),t.h));var i=Sc(a,cc(o,2)),c=Sc(r,cc(s,2)),u=sc(a,cc(o,2)),l=sc(r,cc(s,2)),d=al([el(i,[n.numBoxes,1]),el(c,[n.numBoxes,1]),el(u,[n.numBoxes,1]),el(l,[n.numBoxes,1])],1);if(n.numKeypoints)for(var p=0;p<n.numKeypoints;++p){var h=n.keypointCoordOffset+p*n.numValuesPerKeypoint,f=void 0,m=void 0;n.reverseOutputOrder?(f=eh(sl(e,[0,h],[-1,1])),m=eh(sl(e,[0,h+1],[-1,1]))):(m=eh(sl(e,[0,h],[-1,1])),f=eh(sl(e,[0,h+1],[-1,1])));var g=sc(uc(cc(f,n.xScale),t.w),t.x),y=sc(uc(cc(m,n.yScale),t.h),t.y);d=al([d,el(g,[n.numBoxes,1]),el(y,[n.numBoxes,1])],1)}return d}))}(r,t,n),s=Xs((function(){var e=a;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=xl(a,-n.scoreClippingThresh,n.scoreClippingThresh)),e=ol(e)):e})),[4,NG(o,s,n)];case 1:return i=c.sent(),Ys([o,s]),[2,i]}}))}))}function NG(e,t,n){return UV(this,void 0,void 0,(function(){var a,r,o,s,i,c,u,l,d,p,h,f;return VV(this,(function(m){switch(m.label){case 0:return a=[],[4,e.data()];case 1:return r=m.sent(),[4,t.data()];case 2:for(o=m.sent(),s=0;s<n.numBoxes;++s)if(!(null!=n.minScoreThresh&&o[s]<n.minScoreThresh||(i=s*n.numCoords,c=_G(r[i+0],r[i+1],r[i+2],r[i+3],o[s],n.flipVertically,s),(u=c.locationData.relativeBoundingBox).width<0||u.height<0))){if(n.numKeypoints>0)for((l=c.locationData).relativeKeypoints=[],d=n.numKeypoints*n.numValuesPerKeypoint,p=0;p<d;p+=n.numValuesPerKeypoint)h=i+n.keypointCoordOffset+p,f={x:r[h+0],y:n.flipVertically?1-r[h+1]:r[h+1]},l.relativeKeypoints.push(f);a.push(c)}return[2,a]}}))}))}function _G(e,t,n,a,r,o,s){return{score:[r],ind:s,locationData:{relativeBoundingBox:{xMin:t,yMin:o?1-n:e,xMax:a,yMax:o?1-e:n,width:a-t,height:n-e}}}}function TG(e,t){return"none"===e?t:function(e){return 1/(1+Math.exp(-e))}(t)}function EG(e,t,n,a){return UV(this,void 0,void 0,(function(){var r,o,s,i,c,u,l,d;return VV(this,(function(p){switch(p.label){case 0:return n=n||t.flipHorizontally||!1,a=a||t.flipVertically||!1,r=e.size,o=r/t.numLandmarks,[4,e.data()];case 1:for(s=p.sent(),i=[],c=0;c<t.numLandmarks;++c)u=c*o,(d={x:0,y:0}).x=n?t.inputImageWidth-s[u]:s[u],o>1&&(d.y=a?t.inputImageHeight-s[u+1]:s[u+1]),o>2&&(d.z=s[u+2]),o>3&&(d.score=TG(t.visibilityActivation,s[u+3])),i.push(d);for(l=0;l<i.length;++l)(d=i[l]).x=d.x/t.inputImageWidth,d.y=d.y/t.inputImageHeight,d.z=d.z/t.inputImageWidth/(t.normalizeZ||1);return[2,i]}}))}))}function RG(e,t,n){var a=e.width,r=e.height,o=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(o=function(e,t){return null!=t.rotation?e+=t.rotation:null!=t.rotationDegree&&(e+=Math.PI*t.rotationDegree/180),iG(e)}(o,n)),0===o)e.xCenter=e.xCenter+a*n.shiftX,e.yCenter=e.yCenter+r*n.shiftY;else{var s=(t.width*a*n.shiftX*Math.cos(o)-t.height*r*n.shiftY*Math.sin(o))/t.width,i=(t.width*a*n.shiftX*Math.sin(o)+t.height*r*n.shiftY*Math.cos(o))/t.height;e.xCenter=e.xCenter+s,e.yCenter=e.yCenter+i}if(n.squareLong){var c=Math.max(a*t.width,r*t.height);a=c/t.width,r=c/t.height}else if(n.squareShort){var u=Math.min(a*t.width,r*t.height);a=u/t.width,r=u/t.height}return e.width=a*n.scaleX,e.height=r*n.scaleY,e}function AG(e,t){return e.map((function(e){var n=WV(WV({},e),{x:e.x/t.width,y:e.y/t.height});return null!=e.z&&(e.z=e.z/t.width),n}))}var OG=function(){function e(e){this.alpha=e,this.initialized=!1}return e.prototype.apply=function(e,t){var n;return this.initialized?n=null==t?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(n=e,this.initialized=!0),this.rawValue=e,this.storedValue=n,n},e.prototype.applyWithAlpha=function(e,t,n){return this.alpha=t,this.apply(e,n)},e.prototype.hasLastRawValue=function(){return this.initialized},e.prototype.lastRawValue=function(){return this.rawValue},e.prototype.reset=function(){this.initialized=!1},e}(),FG=function(){function e(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new OG(this.getAlpha(this.minCutOff)),this.dx=new OG(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return e.prototype.apply=function(e,t,n){if(null==e)return e;var a=Math.trunc(t);if(this.lastTimestamp>=a)return e;0!==this.lastTimestamp&&0!==a&&(this.frequency=1/(1e-6*(a-this.lastTimestamp))),this.lastTimestamp=a;var r=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*n*this.frequency:0,o=this.dx.applyWithAlpha(r,this.getAlpha(this.derivateCutOff)),s=this.minCutOff+this.beta*Math.abs(o),i=null!=this.thresholdCutOff?this.thresholdCutOff+this.thresholdBeta*Math.abs(o):null;return this.x.applyWithAlpha(e,this.getAlpha(s),i)},e.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},e}(),DG=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var a=this;if(null==e)return this.reset(),null;this.initializeFiltersIfEmpty(e);var r=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return GV([],e,!0);r=1/n}return e.map((function(e,n){var o=WV(WV({},e),{x:a.xFilters[n].apply(e.x,t,r),y:a.yFilters[n].apply(e.y,t,r)});return null!=e.z&&(o.z=a.zFilters[n].apply(e.z,t,r)),o}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new FG(t.config)})),this.yFilters=e.map((function(e){return new FG(t.config)})),this.zFilters=e.map((function(e){return new FG(t.config)})))},e}(),MG=function(){function e(e){this.config=e,this.window=[],this.lowPassFilter=new OG(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return e.prototype.apply=function(e,t,n){if(null==e)return e;var a,r=Math.trunc(t);if(this.lastTimestamp>=r)return e;if(-1===this.lastTimestamp)a=1;else{for(var o=e*n-this.lastValue*this.lastValueScale,s=r-this.lastTimestamp,i=o,c=s,u=(1+this.window.length)*(1e6/30),l=0,d=this.window;l<d.length;l++){var p=d[l];if(c+p.duration>u)break;i+=p.distance,c+=p.duration}var h=i/(1e-6*c);a=1-1/(1+this.config.velocityScale*Math.abs(h)),this.window.unshift({distance:o,duration:s}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=n,this.lastTimestamp=r,this.lowPassFilter.applyWithAlpha(e,a)},e}(),PG=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var a=this;if(null==e)return this.reset(),null;var r=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return GV([],e,!0);r=1/n}return this.initializeFiltersIfEmpty(e),e.map((function(e,n){var o=WV(WV({},e),{x:a.xFilters[n].apply(e.x,t,r),y:a.yFilters[n].apply(e.y,t,r)});return null!=e.z&&(o.z=a.zFilters[n].apply(e.z,t,r)),o}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new MG(t.config)})),this.yFilters=e.map((function(e){return new MG(t.config)})),this.zFilters=e.map((function(e){return new MG(t.config)})))},e}(),LG=function(){function e(e){if(null!=e.velocityFilter)this.keypointsFilter=new PG(e.velocityFilter);else{if(null==e.oneEuroFilter)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new DG(e.oneEuroFilter)}}return e.prototype.apply=function(e,t,n,a,r){if(void 0===a&&(a=!1),null==e)return this.keypointsFilter.reset(),null;var o=null!=r?function(e,t){return(e.width*t.width+e.height*t.height)/2}(r,n):1,s=a?kG(e,n):e,i=this.keypointsFilter.apply(s,t,o);return a?AG(i,n):i},e}(),zG=function(){function e(e){this.alpha=e.alpha}return e.prototype.apply=function(e){var t=this;if(null==e)return this.visibilityFilters=null,null;null!=this.visibilityFilters&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map((function(e){return new OG(t.alpha)})));for(var n=[],a=0;a<e.length;++a){var r=e[a],o=WV({},r);o.score=this.visibilityFilters[a].apply(r.score),n.push(o)}return n},e}(),BG={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},WG={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},UG={maxPoses:1,flipHorizontal:!1},VG={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},GG={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},HG={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},jG={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},KG={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},qG={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},XG={kernelSize:7,minConfidenceToRefine:.5},YG={alpha:.1},QG={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},ZG={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},$G={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},JG={activation:"none"},eH={combineWithPreviousRatio:.7},tH=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return UV(this,void 0,void 0,(function(){return VV(this,(function(e){return[2,ZV(this.mask)]}))}))},e.prototype.toImageData=function(){return UV(this,void 0,void 0,(function(){return VV(this,(function(e){return[2,$V(this.mask)]}))}))},e.prototype.toTensor=function(){return UV(this,void 0,void 0,(function(){return VV(this,(function(e){return[2,this.mask]}))}))},e.prototype.getUnderlyingType=function(){return"tensor"},e}();function nH(e){return eG(e),"person"}var aH=function(){function e(e,t,n,a,r,o){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=n,this.enableSegmentation=a,this.smoothSegmentation=r,this.modelType=o,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],n=0;n<e.numLayers;){for(var a=[],r=[],o=[],s=[],i=n;i<e.strides.length&&e.strides[i]===e.strides[n];){var c=bG(e.minScale,e.maxScale,i,e.strides.length);if(0===i&&e.reduceBoxesInLowestLayer)o.push(1),o.push(2),o.push(.5),s.push(.1),s.push(c),s.push(c);else{for(var u=0;u<e.aspectRatios.length;++u)o.push(e.aspectRatios[u]),s.push(c);if(e.interpolatedScaleAspectRatio>0){var l=i===e.strides.length-1?1:bG(e.minScale,e.maxScale,i+1,e.strides.length);s.push(Math.sqrt(c*l)),o.push(e.interpolatedScaleAspectRatio)}}i++}for(var d=0;d<o.length;++d){var p=Math.sqrt(o[d]);a.push(s[d]/p),r.push(s[d]*p)}var h=0,f=0;if(e.featureMapHeight.length>0)h=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];h=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<h;++g)for(var y=0;y<f;++y)for(var b=0;b<a.length;++b){var x={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/h,width:0,height:0};e.fixedAnchorSize?(x.width=1,x.height=1):(x.width=r[b],x.height=a[b]),t.push(x)}n=i}return t}(BG);var s=oh(this.anchors.map((function(e){return e.width}))),i=oh(this.anchors.map((function(e){return e.height}))),c=oh(this.anchors.map((function(e){return e.xCenter}))),u=oh(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:c,y:u,w:s,h:i},this.prevFilteredSegmentationMask=this.enableSegmentation?sh([],[0,0]):null}return e.prototype.estimatePoses=function(e,t,n){return UV(this,void 0,void 0,(function(){var a,r,o,s,i,c,u,l,d,p,h,f,m,g,y,b,x,v,w,k,S,C,I;return VV(this,(function(N){switch(N.label){case 0:return a=function(e){var t;if(null==(t=null==e?UG:WV({},e)).maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return t}(t),null==e?(this.reset(),[2,[]]):(this.maxPoses=a.maxPoses,this.timestamp=null!=n?1e3*n:xG(e)?1e6*e.currentTime:null,r=sG(e),o=Xs((function(){return ac(cG(e),"float32")})),null!=(s=this.regionOfInterest)?[3,2]:[4,this.detectPose(o)]);case 1:if(0===(i=N.sent()).length)return this.reset(),o.dispose(),[2,[]];c=i[0],s=this.poseDetectionToRoi(c,r),N.label=2;case 2:return[4,this.poseLandmarksByRoi(s,o)];case 3:return u=N.sent(),o.dispose(),null==u?(this.reset(),[2,[]]):(l=u.landmarks,d=u.auxiliaryLandmarks,p=u.poseScore,h=u.worldLandmarks,f=u.segmentationMask,m=this.poseLandmarkFiltering(l,d,h,r),g=m.actualLandmarksFiltered,y=m.auxiliaryLandmarksFiltered,b=m.actualWorldLandmarksFiltered,x=this.poseLandmarksToRoi(y,r),this.regionOfInterest=x,v=this.smoothSegmentation&&null!=f?this.poseSegmentationFiltering(f):f,null!=(w=null!=g?kG(g,r):null)&&w.forEach((function(e,t){e.name=jV[t]})),null!=(k=b)&&k.forEach((function(e,t){e.name=jV[t]})),S={score:p,keypoints:w,keypoints3D:k},null!==v&&(C=Xs((function(){var e=ud(v,2),t=ap(e,[[0,0],[0,0],[0,1]]);return Xd(t,[[0,0],[0,0],[0,2]],"symmetric")})),this.smoothSegmentation||Ys(v),I={maskValueToLabel:nH,mask:new tH(C)},S.segmentation=I),[2,[S]])}}))}))},e.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return 0===t.size?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=function(e,t,n){return"webgl"===Zs()?function(e,t,n){var a=n.combineWithPreviousRatio.toFixed(2),r={variableNames:["prevMask","newMask"],outputShape:e.shape,userCode:"\n  void main() {\n      ivec2 coords = getOutputCoords();\n      int height = coords[0];\n      int width = coords[1];\n\n      float prevMaskValue = getPrevMask(height, width);\n      float newMaskValue = getNewMask(height, width);\n\n      /*\n      * Assume p := newMaskValue\n      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)\n      * uncertainty alpha(p) =\n      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the\n      * uncertainty]\n      *\n      * The following polynomial approximates uncertainty alpha as a\n      * function of (p + 0.5):\n      */\n      const float c1 = 5.68842;\n      const float c2 = -0.748699;\n      const float c3 = -57.8051;\n      const float c4 = 291.309;\n      const float c5 = -624.717;\n      float t = newMaskValue - 0.5;\n      float x = t * t;\n\n      float uncertainty =\n        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));\n\n      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *\n                             (uncertainty * ".concat(a,");\n\n      setOutput(outputValue);\n    }\n")},o=Js();return Xs((function(){var n=o.compileAndRun(r,[e,t]);return qs().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}))}(e,t,n):Xs((function(){var a=Sc(t,.5),r=dc(a),o=Sc(1,qd(1,uc(r,sc(5.68842,uc(r,sc(-.748699,uc(r,sc(-57.8051,uc(r,sc(291.309,uc(r,-624.717)))))))))));return sc(t,uc(Sc(e,t),uc(o,n.combineWithPreviousRatio)))}))}(t,e,eH),Ys(e)),Ys(t),this.prevFilteredSegmentationMask},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Ys([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},e.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Ys(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=sh([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},e.prototype.detectPose=function(e){return UV(this,void 0,void 0,(function(){var t,n,a,r,o,s,i,c,u,l;return VV(this,(function(d){switch(d.label){case 0:return t=yG(e,HG),n=t.imageTensor,a=t.padding,r=this.detectorModel.predict(n),o=function(e){return Xs((function(){var t=function(e){return Xs((function(){return[sl(e,[0,0,0],[1,-1,1]),sl(e,[0,0,1],[1,-1,-1])]}))}(e),n=t[0],a=t[1];return{boxes:eh(a),logits:eh(n)}}))}(r),s=o.boxes,[4,IG([i=o.logits,s],this.anchorTensor,VG)];case 1:return 0===(c=d.sent()).length?(Ys([n,r,i,s]),[2,c]):[4,wG(c,this.maxPoses,.3)];case 2:return u=d.sent(),l=function(e,t){void 0===e&&(e=[]);for(var n=t.left,a=t.top,r=t.left+t.right,o=t.top+t.bottom,s=0;s<e.length;s++){var i=e[s],c=i.locationData.relativeBoundingBox,u=(c.xMin-n)/(1-r),l=(c.yMin-a)/(1-o),d=c.width/(1-r),p=c.height/(1-o);c.xMin=u,c.yMin=l,c.width=d,c.height=p,c.xMax=u+d,c.yMax=l+p;var h=i.locationData.relativeKeypoints;h&&h.forEach((function(e){var t=(e.x-n)/(1-r),s=(e.y-a)/(1-o);e.x=t,e.y=s}))}return e}(u,a),Ys([n,r,i,s]),[2,l]}}))}))},e.prototype.poseDetectionToRoi=function(e,t){return RG(dG(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,GG)},e.prototype.poseLandmarksByRoi=function(e,t){return UV(this,void 0,void 0,(function(){var n,a,r,o,s,i,c,u,l,d,p,h,f,m;return VV(this,(function(g){switch(g.label){case 0:if(n=sG(t),a=yG(t,jG,e),r=a.imageTensor,o=a.padding,s=a.transformationMatrix,"lite"!==this.modelType&&"full"!==this.modelType&&"heavy"!==this.modelType)throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return i=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&i.push("activation_segmentation"),c=this.landmarkModel.execute(r,i),[4,this.tensorsToPoseLandmarksAndSegmentation(c)];case 1:return null==(u=g.sent())?(Ys(c),Ys(r),[2,null]):(l=u.landmarks,d=u.auxiliaryLandmarks,p=u.poseScore,h=u.worldLandmarks,f=u.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(n,e,o,s,l,d,h,f)]);case 2:return m=g.sent(),Ys(c),Ys(r),[2,WV({poseScore:p},m)]}}))}))},e.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,n,a,r,o,s,i){return UV(this,void 0,void 0,(function(){var c,u,l,d,p,h;return VV(this,(function(f){return c=CG(r,n),u=CG(o,n),l=mG(c,t),d=mG(u,t),p=function(e,t){for(var n=[],a=0,r=e;a<r.length;a++){var o=r[a],s=o.x,i=o.y,c=t.rotation,u=Math.cos(c)*s-Math.sin(c)*i,l=Math.sin(c)*s+Math.cos(c)*i,d=WV({},o);d.x=u,d.y=l,n.push(d)}return n}(s,t),h=null,this.enableSegmentation&&(h=Xs((function(){var t=i.shape,n=t[0],r=t[1],o=function(e){var t=pG(new Array(16).fill(0));t[0][0]=fG(e,0,0),t[1][0]=-fG(e,0,1),t[2][0]=fG(e,0,2),t[3][0]=-fG(e,0,3),t[0][2]=fG(e,2,0),t[1][2]=-fG(e,2,1),t[2][2]=fG(e,2,2),t[3][2]=-fG(e,2,3),t[0][1]=-fG(e,1,0),t[1][1]=fG(e,1,1),t[2][1]=-fG(e,1,2),t[3][1]=fG(e,1,3),t[0][3]=-fG(e,3,0),t[1][3]=fG(e,3,1),t[2][3]=-fG(e,3,2),t[3][3]=fG(e,3,3);for(var n=e[0][0]*t[0][0]+e[1][0]*t[0][1]+e[2][0]*t[0][2]+e[3][0]*t[0][3],a=0;a<t.length;a++)for(var r=0;r<t.length;r++)t[a][r]/=n;return t}(a),s=sh(uG(o,{width:r,height:n},e),[1,8]),c=[1,n,r,1];return eh(Lf.transform(el(i,c),s,"bilinear","constant",0,[e.height,e.width]),[0,3])})),Ys(i)),[2,{landmarks:l,auxiliaryLandmarks:d,worldLandmarks:p,segmentationMask:h}]}))}))},e.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return UV(this,void 0,void 0,(function(){var t,n,a,r,o,s,i,c,u,l,d,p,h;return VV(this,(function(f){switch(f.label){case 0:return t=e[0],n=e[1],a=e[2],r=e[3],o=this.enableSegmentation?e[4]:null,[4,n.data()];case 1:return(s=f.sent()[0])<.5?[2,null]:[4,EG(t,KG)];case 2:return[4,SG(f.sent(),a,XG)];case 3:return i=f.sent(),c=i.slice(0,33),u=i.slice(33,35),[4,EG(r,qG)];case 4:return l=f.sent(),d=l.slice(0,33),p=function(e,t,n){void 0===n&&(n=!0);for(var a=[],r=0;r<e.length;r++){var o=WV({},t[r]);n&&(o.score=e[r].score),a.push(o)}return a}(c,d,!0),h=this.enableSegmentation?function(e,t){return Xs((function(){var n=eh(e,[0]),a=n.shape[2];if(1===a){var r=n;switch(t.activation){case"none":break;case"sigmoid":r=ol(r);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(t.activation,")"))}return eh(r,[2])}throw new Error("Unsupported number of tensor channels ".concat(a))}))}(o,JG):null,[2,{landmarks:c,auxiliaryLandmarks:u,poseScore:s,worldLandmarks:p,segmentationMask:h}]}}))}))},e.prototype.poseLandmarksToRoi=function(e,t){return RG(dG(vG(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,GG)},e.prototype.poseLandmarkFiltering=function(e,t,n,a){var r,o,s;if(null!=this.timestamp&&this.enableSmoothing){var i=dG(vG(t),a,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});null==this.visibilitySmoothingFilterActual&&(this.visibilitySmoothingFilterActual=new zG(YG)),r=this.visibilitySmoothingFilterActual.apply(e),null==this.visibilitySmoothingFilterAuxiliary&&(this.visibilitySmoothingFilterAuxiliary=new zG(YG)),o=this.visibilitySmoothingFilterAuxiliary.apply(t),s=this.visibilitySmoothingFilterActual.apply(n),null==this.landmarksSmoothingFilterActual&&(this.landmarksSmoothingFilterActual=new LG(QG)),r=this.landmarksSmoothingFilterActual.apply(r,this.timestamp,a,!0,i),null==this.landmarksSmoothingFilterAuxiliary&&(this.landmarksSmoothingFilterAuxiliary=new LG(ZG)),o=this.landmarksSmoothingFilterAuxiliary.apply(o,this.timestamp,a,!0,i),null==this.worldLandmarksSmoothingFilterActual&&(this.worldLandmarksSmoothingFilterActual=new LG($G)),s=this.worldLandmarksSmoothingFilterActual.apply(n,this.timestamp)}else r=e,o=t,s=n;return{actualLandmarksFiltered:r,auxiliaryLandmarksFiltered:o,actualWorldLandmarksFiltered:s}},e}();function rH(e){return UV(this,void 0,void 0,(function(){var t,n,a,r,o,s;return VV(this,(function(i){switch(i.label){case 0:return t=function(e){var t=WV({},null==e?WG:e);if(null==t.enableSmoothing&&(t.enableSmoothing=WG.enableSmoothing),null==t.enableSegmentation&&(t.enableSegmentation=WG.enableSegmentation),null==t.smoothSegmentation&&(t.smoothSegmentation=WG.smoothSegmentation),null==t.modelType&&(t.modelType=WG.modelType),null==t.detectorModelUrl&&(t.detectorModelUrl=WG.detectorModelUrl),null==t.landmarkModelUrl)switch(t.modelType){case"lite":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;default:t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return t}(e),n="string"==typeof t.detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,a="string"==typeof t.landmarkModelUrl&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([LV(t.detectorModelUrl,{fromTFHub:n}),LV(t.landmarkModelUrl,{fromTFHub:a})])];case 1:return r=i.sent(),o=r[0],s=r[1],[2,new aH(o,s,t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}}))}))}var oH,sH,iH,cH=function(){function e(e){!function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(e.maxTracks));if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(e.maxAge));if(void 0!==e.keypointTrackerParams){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(e.keypointTrackerParams.keypointConfidenceThreshold));if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(e.keypointTrackerParams.minNumberOfKeypoints));for(var t=0,n=e.keypointTrackerParams.keypointFalloff;t<n.length;t++){var a=n[t];if(a<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(a))}}}(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return e.prototype.apply=function(e,t){this.filterOldTracks(t);var n=this.computeSimilarity(e);return this.assignTracks(e,n,t),this.updateTracks(t),e},e.prototype.getTracks=function(){return this.tracks.slice()},e.prototype.getTrackIDs=function(){return new Set(this.tracks.map((function(e){return e.id})))},e.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter((function(n){return e-n.lastTimestamp<=t.maxAge}))},e.prototype.assignTracks=function(e,t,n){for(var a=Array.from(Array(t[0].length).keys()),r=[],o=0,s=Array.from(Array(e.length).keys());o<s.length;o++){var i=s[o];if(0!==a.length){for(var c=-1,u=-1,l=0,d=a;l<d.length;l++){var p=d[l],h=t[i][p];h>=this.minSimilarity&&h>u&&(c=p,u=h)}if(c>=0){var f=this.tracks[c];f=Object.assign(f,this.createTrack(e[i],n,f.id)),e[i].id=f.id;var m=a.indexOf(c);a.splice(m,1)}else r.push(i)}else r.push(i)}for(var g=0,y=r;g<y.length;g++){i=y[g];var b=this.createTrack(e[i],n);this.tracks.push(b),e[i].id=b.id}},e.prototype.updateTracks=function(e){this.tracks.sort((function(e,t){return t.lastTimestamp-e.lastTimestamp})),this.tracks=this.tracks.slice(0,this.maxTracks)},e.prototype.createTrack=function(e,t,n){var a={id:n||this.nextTrackID(),lastTimestamp:t,keypoints:GV([],e.keypoints,!0).map((function(e){return WV({},e)}))};return void 0!==e.box&&(a.box=WV({},e.box)),a},e.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},e.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter((function(t){return!e.includes(t.id)}))},e.prototype.reset=function(){this.tracks=[]},e}(),uH=function(e){function t(t){return e.call(this,t)||this}return BV(t,e),t.prototype.computeSimilarity=function(e){var t=this;return 0===e.length||0===this.tracks.length?[[]]:e.map((function(e){return t.tracks.map((function(n){return t.iou(e,n)}))}))},t.prototype.iou=function(e,t){var n=Math.max(e.box.xMin,t.box.xMin),a=Math.max(e.box.yMin,t.box.yMin),r=Math.min(e.box.xMax,t.box.xMax),o=Math.min(e.box.yMax,t.box.yMax);if(n>=r||a>=o)return 0;var s=(r-n)*(o-a);return s/(e.box.width*e.box.height+t.box.width*t.box.height-s)},t}(cH),lH=function(e){function t(t){var n=e.call(this,t)||this;return n.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,n.keypointFalloff=t.keypointTrackerParams.keypointFalloff,n.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,n}return BV(t,e),t.prototype.computeSimilarity=function(e){if(0===e.length||0===this.tracks.length)return[[]];for(var t=[],n=0,a=e;n<a.length;n++){for(var r=a[n],o=[],s=0,i=this.tracks;s<i.length;s++){var c=i[s];o.push(this.oks(r,c))}t.push(o)}return t},t.prototype.oks=function(e,t){for(var n=this.area(t.keypoints)+1e-6,a=0,r=0,o=0;o<e.keypoints.length;++o){var s=e.keypoints[o],i=t.keypoints[o];if(!(s.score<this.keypointThreshold||i.score<this.keypointThreshold)){r+=1;var c=Math.pow(s.x-i.x,2)+Math.pow(s.y-i.y,2),u=2*this.keypointFalloff[o];a+=Math.exp(-1*c/(2*n*Math.pow(u,2)))}}return r<this.minNumKeyoints?0:a/r},t.prototype.area=function(e){var t=this,n=e.filter((function(e){return e.score>t.keypointThreshold})),a=Math.min.apply(Math,GV([1],n.map((function(e){return e.x})),!1)),r=Math.max.apply(Math,GV([0],n.map((function(e){return e.x})),!1)),o=Math.min.apply(Math,GV([1],n.map((function(e){return e.y})),!1));return(r-a)*(Math.max.apply(Math,GV([0],n.map((function(e){return e.y})),!1))-o)},t}(cH);function dH(e){switch(e){case sH.BlazePose:return jV.reduce((function(e,t,n){return e[t]=n,e}),{});case sH.PoseNet:case sH.MoveNet:return HV.reduce((function(e,t,n){return e[t]=n,e}),{});default:throw new Error("Model ".concat(e," is not supported."))}}(iH=oH||(oH={})).Keypoint="keypoint",iH.BoundingBox="boundingBox",function(e){e.MoveNet="MoveNet",e.BlazePose="BlazePose",e.PoseNet="PoseNet"}(sH||(sH={}));var pH=Object.freeze({__proto__:null,getKeypointIndexBySide:function(e){switch(e){case sH.BlazePose:return KV;case sH.PoseNet:case sH.MoveNet:return qV;default:throw new Error("Model ".concat(e," is not supported."))}},getAdjacentPairs:function(e){switch(e){case sH.BlazePose:return YV;case sH.PoseNet:case sH.MoveNet:return XV;default:throw new Error("Model ".concat(e," is not supported."))}},getKeypointIndexByName:dH}),hH=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],fH={modelType:"SinglePose.Lightning",enableSmoothing:!0},mH={},gH={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},yH={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},bH={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function xH(e,t){var n,a,r,o;return e?t.width>t.height?(n=1,a=t.height/t.width,r=0,o=(t.width/2-t.height/2)/t.width):(n=t.width/t.height,a=1,r=(t.height/2-t.width/2)/t.height,o=0):t.width>t.height?(n=t.width/t.height,a=1,r=(t.height/2-t.width/2)/t.height,o=0):(n=1,a=t.height/t.width,r=0,o=(t.width/2-t.height/2)/t.width),{yMin:r,xMin:o,yMax:r+n,xMax:o+a,height:n,width:a}}function vH(e,t){var n={maxTracks:e.maxTracks,maxAge:e.maxAge,minSimilarity:e.minSimilarity};return null!=t.maxTracks&&(n.maxTracks=t.maxTracks),null!=t.maxAge&&(n.maxAge=t.maxAge),null!=t.minSimilarity&&(n.minSimilarity=t.minSimilarity),n}var wH=function(){function e(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=dH(sH.MoveNet),"SinglePose.Lightning"===t.modelType?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):"SinglePose.Thunder"===t.modelType&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel="MultiPose.Lightning"===t.modelType,this.multiPoseModel||(this.keypointFilter=new DG(gH),this.cropRegionFilterYMin=new OG(.9),this.cropRegionFilterXMin=new OG(.9),this.cropRegionFilterYMax=new OG(.9),this.cropRegionFilterXMax=new OG(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===oH.Keypoint?this.tracker=new lH(t.trackerConfig):t.trackerType===oH.BoundingBox&&(this.tracker=new uH(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return e.prototype.runSinglePersonPoseModel=function(e){return UV(this,void 0,void 0,(function(){var t,n,a,r,o;return VV(this,(function(s){switch(s.label){case 0:if(4!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||1!==t.shape[1]||17!==t.shape[2]||3!==t.shape[3])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===Zs()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=s.sent(),s.label=3;case 3:for(t.dispose(),a={keypoints:[],score:0},r=0,o=0;o<17;++o)a.keypoints[o]={y:n[3*o],x:n[3*o+1],score:n[3*o+2]},a.keypoints[o].score>.2&&(++r,a.score+=a.keypoints[o].score);return r>0&&(a.score/=r),[2,a]}}))}))},e.prototype.runMultiPersonPoseModel=function(e){return UV(this,void 0,void 0,(function(){var t,n,a,r,o,s,i,c;return VV(this,(function(u){switch(u.label){case 0:if(3!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||56!==t.shape[2])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===Zs()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=u.sent(),u.label=3;case 3:for(t.dispose(),a=[],r=n.length/56,o=0;o<r;++o)for(a[o]={keypoints:[]},s=56*o+51,a[o].box={yMin:n[s],xMin:n[s+1],yMax:n[s+2],xMax:n[s+3],width:n[s+3]-n[s+1],height:n[s+2]-n[s]},i=56*o+55,a[o].score=n[i],a[o].keypoints=[],c=0;c<17;++c)a[o].keypoints[c]={y:n[56*o+3*c],x:n[56*o+3*c+1],score:n[56*o+3*c+2]};return[2,a]}}))}))},e.prototype.estimatePoses=function(e,t,n){return void 0===t&&(t=mH),UV(this,void 0,void 0,(function(){var a,r,o,s,i,c;return VV(this,(function(u){switch(u.label){case 0:return t=function(e){return null==e?mH:WV({},e)}(t),null==e?(this.reset(),[2,[]]):(null==n?xG(e)&&(n=1e6*e.currentTime):n*=1e3,a=cG(e),r=sG(a),o=ud(a,0),e instanceof us||a.dispose(),s=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(o,r,n)]);case 1:return s=u.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(o,r,n)];case 3:s=u.sent(),u.label=4;case 4:for(i=0;i<s.length;++i)for(c=0;c<s[i].keypoints.length;++c)s[i].keypoints[c].name=HV[c],s[i].keypoints[c].y*=r.height,s[i].keypoints[c].x*=r.width;return[2,s]}}))}))},e.prototype.estimateSinglePose=function(e,t,n){return UV(this,void 0,void 0,(function(){var a,r,o,s,i=this;return VV(this,(function(c){switch(c.label){case 0:return this.cropRegion||(this.cropRegion=xH(null==this.cropRegion,t)),a=Xs((function(){var t=sh([[i.cropRegion.yMin,i.cropRegion.xMin,i.cropRegion.yMax,i.cropRegion.xMax]]),n=Hd([1],"int32"),a=[i.modelInputResolution.height,i.modelInputResolution.width];return ac(Lf.cropAndResize(e,t,n,a,"bilinear",0),"int32")})),e.dispose(),[4,this.runSinglePersonPoseModel(a)];case 1:if(r=c.sent(),a.dispose(),r.score<this.minPoseScore)return this.reset(),[2,[]];for(o=0;o<r.keypoints.length;++o)r.keypoints[o].y=this.cropRegion.yMin+r.keypoints[o].y*this.cropRegion.height,r.keypoints[o].x=this.cropRegion.xMin+r.keypoints[o].x*this.cropRegion.width;return null!=n&&this.enableSmoothing&&(r.keypoints=this.keypointFilter.apply(r.keypoints,n,1)),s=function(e,t,n,a){for(var r={},o=0,s=HV;o<s.length;o++){var i=s[o];r[i]=[t[n[i]].y*a.height,t[n[i]].x*a.width]}if(function(e,t){return(e[t.left_hip].score>.2||e[t.right_hip].score>.2)&&(e[t.left_shoulder].score>.2||e[t.right_shoulder].score>.2)}(t,n)){var c=(r.left_hip[0]+r.right_hip[0])/2,u=(r.left_hip[1]+r.right_hip[1])/2,l=function(e,t,n,a,r){for(var o=["left_shoulder","right_shoulder","left_hip","right_hip"],s=0,i=0,c=0;c<o.length;c++)(h=Math.abs(a-n[o[c]][0]))>s&&(s=h),(f=Math.abs(r-n[o[c]][1]))>i&&(i=f);for(var u=0,l=0,d=0,p=Object.keys(n);d<p.length;d++){var h,f,m=p[d];e[t[m]].score<.2||((h=Math.abs(a-n[m][0]))>u&&(u=h),(f=Math.abs(r-n[m][1]))>l&&(l=f))}return[s,i,u,l]}(t,n,r,c,u),d=l[0],p=l[1],h=l[2],f=l[3],m=Math.max(1.9*p,1.9*d,1.2*h,1.2*f),g=[c-(m=Math.min(m,Math.max(u,a.width-u,c,a.height-c))),u-m];if(m>Math.max(a.width,a.height)/2)return xH(null==e,a);var y=2*m;return{yMin:g[0]/a.height,xMin:g[1]/a.width,yMax:(g[0]+y)/a.height,xMax:(g[1]+y)/a.width,height:(g[0]+y)/a.height-g[0]/a.height,width:(g[1]+y)/a.width-g[1]/a.width}}return xH(null==e,a)}(this.cropRegion,r.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(s),[2,[r]]}}))}))},e.prototype.estimateMultiplePoses=function(e,t,n){return UV(this,void 0,void 0,(function(){var a,r,o,s,i,c,u,l,d,p,h,f=this;return VV(this,(function(m){switch(m.label){case 0:return t.width>t.height?(r=this.multiPoseMaxDimension,o=Math.round(this.multiPoseMaxDimension*t.height/t.width),a=Lf.resizeBilinear(e,[o,r]),i=r,c=32*Math.ceil(o/32),s=ap(a,[[0,0],[0,c-o],[0,0],[0,0]])):(r=Math.round(this.multiPoseMaxDimension*t.width/t.height),o=this.multiPoseMaxDimension,a=Lf.resizeBilinear(e,[o,r]),i=32*Math.ceil(r/32),c=o,s=ap(a,[[0,0],[0,0],[0,i-r],[0,0]])),a.dispose(),e.dispose(),u=ac(s,"int32"),s.dispose(),[4,this.runMultiPersonPoseModel(u)];case 1:for(l=m.sent(),u.dispose(),l=l.filter((function(e){return e.score>=f.minPoseScore})),p=0;p<l.length;++p)for(d=0;d<l[p].keypoints.length;++d)l[p].keypoints[d].y*=c/o,l[p].keypoints[d].x*=i/r;if(this.enableTracking&&(this.tracker.apply(l,n),this.enableSmoothing)){for(p=0;p<l.length;++p)this.keypointFilterMap.has(l[p].id)||this.keypointFilterMap.set(l[p].id,new DG(gH)),l[p].keypoints=this.keypointFilterMap.get(l[p].id).apply(l[p].keypoints,n,1);h=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach((function(e,t){h.has(t)||f.keypointFilterMap.delete(t)}))}return[2,l]}}))}))},e.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),n=this.cropRegionFilterXMin.apply(e.xMin),a=this.cropRegionFilterYMax.apply(e.yMax),r=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:n,yMax:a,xMax:r,height:a-t,width:r-n}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},e.prototype.dispose=function(){this.moveNetModel.dispose()},e.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},e.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},e}();function kH(e){return void 0===e&&(e=fH),UV(this,void 0,void 0,(function(){var t,n,a,r;return VV(this,(function(o){switch(o.label){case 0:return t=function(e){var t,n=null==e?fH:WV({},e);if(null==n.modelType)n.modelType="SinglePose.Lightning";else if(hH.indexOf(n.modelType)<0)throw new Error("Invalid architecture ".concat(n.modelType,". ")+"Should be one of ".concat(hH));if(null==n.enableSmoothing&&(n.enableSmoothing=!0),null!=n.minPoseScore&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(null!=n.multiPoseMaxDimension&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if("MultiPose.Lightning"===n.modelType&&null==n.enableTracking&&(n.enableTracking=!0),"MultiPose.Lightning"===n.modelType&&!0===n.enableTracking)if(null==n.trackerType&&(n.trackerType=oH.BoundingBox),n.trackerType===oH.Keypoint)null!=n.trackerConfig?n.trackerConfig=function(e){var t=vH(yH,e);return t.keypointTrackerParams=WV({},yH.keypointTrackerParams),null!=e.keypointTrackerParams&&(null!=e.keypointTrackerParams.keypointConfidenceThreshold&&(t.keypointTrackerParams.keypointConfidenceThreshold=e.keypointTrackerParams.keypointConfidenceThreshold),null!=e.keypointTrackerParams.keypointFalloff&&(t.keypointTrackerParams.keypointFalloff=e.keypointTrackerParams.keypointFalloff),null!=e.keypointTrackerParams.minNumberOfKeypoints&&(t.keypointTrackerParams.minNumberOfKeypoints=e.keypointTrackerParams.minNumberOfKeypoints)),t}(n.trackerConfig):n.trackerConfig=yH;else{if(n.trackerType!==oH.BoundingBox)throw new Error("Tracker type not supported by MoveNet");null!=n.trackerConfig?n.trackerConfig=(t=n.trackerConfig,vH(bH,t)):n.trackerConfig=bH}return n}(e),a=!0,t.modelUrl?(a="string"==typeof t.modelUrl&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,LV(t.modelUrl,{fromTFHub:a})]):[3,2];case 1:return n=o.sent(),[3,4];case 2:return r=void 0,"SinglePose.Lightning"===t.modelType?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":"SinglePose.Thunder"===t.modelType?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":"MultiPose.Lightning"===t.modelType&&(r="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,LV(r,{fromTFHub:a})];case 3:n=o.sent(),o.label=4;case 4:return"webgl"===Zs()&&Jt().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new wH(n,t)]}}))}))}var SH={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},CH=["MobileNetV1","ResNet50"],IH={MobileNetV1:[8,16],ResNet50:[16]},NH=[8,16,32],_H={MobileNetV1:[.5,.75,1],ResNet50:[1]},TH=[1,2,4],EH={maxPoses:1,flipHorizontal:!1},RH={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},AH=[-123.15,-115.9,-103.06];function OH(e){return Math.floor(e/2)}var FH=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(OH(e),e);)this.exchange(e,OH(e)),e=OH(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function DH(e,t,n,a,r,o){for(var s=o.shape,i=s[0],c=s[1],u=!0,l=Math.max(n-r,0),d=Math.min(n+r+1,i),p=l;p<d;++p){for(var h=Math.max(a-r,0),f=Math.min(a+r+1,c),m=h;m<f;++m)if(o.get(p,m,e)>t){u=!1;break}if(!u)break}return u}function MH(e){return UV(this,void 0,void 0,(function(){return VV(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function PH(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+17)}}function LH(e,t,n){var a=PH(e.heatmapY,e.heatmapX,e.id,n),r=a.y,o=a.x;return{x:e.heatmapX*t+o,y:e.heatmapY*t+r}}function zH(e,t,n,a){var r=n.x,o=n.y;return e.some((function(e){var n,s,i,c,u=e.keypoints;return n=o,s=r,(i=u[a].y-n)*i+(c=u[a].x-s)*c<=t}))}var BH=HV.reduce((function(e,t,n){return e[t]=n,e}),{}),WH=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map((function(e){var t=e[0],n=e[1];return[BH[t],BH[n]]})),UH=WH.map((function(e){return e[1]})),VH=WH.map((function(e){return e[0]}));function GH(e,t,n){return e<t?t:e>n?n:e}function HH(e,t,n,a){return{y:GH(Math.round(e.y/t),0,n-1),x:GH(Math.round(e.x/t),0,a-1)}}function jH(e,t){return{x:e.x+t.x,y:e.y+t.y}}function KH(e,t,n,a,r,o,s,i){void 0===i&&(i=2);for(var c=a.shape,u=c[0],l=c[1],d={y:t.y,x:t.x},p=jH(d,function(e,t,n){var a=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,a+e)}}(e,HH(d,o,u,l),s)),h=0;h<i;h++){var f=HH(p,o,u,l),m=PH(f.y,f.x,n,r);p=jH({x:f.x*o,y:f.y*o},{x:m.x,y:m.y})}var g=HH(p,o,u,l),y=a.get(g.y,g.x,n);return{y:p.y,x:p.x,name:HV[n],score:y}}function qH(e,t,n,a,r,o){var s=t.shape[2],i=UH.length,c=new Array(s),u=e.part,l=e.score,d=LH(u,a,n);c[u.id]={score:l,name:HV[u.id],y:d.y,x:d.x};for(var p=i-1;p>=0;--p){var h=UH[p],f=VH[p];c[h]&&!c[f]&&(c[f]=KH(p,c[h],f,t,n,a,o))}for(p=0;p<i;++p)h=VH[p],f=UH[p],c[h]&&!c[f]&&(c[f]=KH(p,c[h],f,t,n,a,r));return c}function XH(e,t,n){return n.reduce((function(n,a,r){var o=a.y,s=a.x,i=a.score;return zH(e,t,{y:o,x:s},r)||(n+=i),n}),0)/n.length}function YH(e,t,n,a,r,o,s,i){return void 0===s&&(s=.5),void 0===i&&(i=20),UV(this,void 0,void 0,(function(){var c,u,l,d,p,h,f,m,g,y,b,x;return VV(this,(function(v){switch(v.label){case 0:return[4,MH([e,t,n,a])];case 1:for(c=v.sent(),u=c[0],l=c[1],d=c[2],p=c[3],h=[],f=function(e,t,n){for(var a=n.shape,r=a[0],o=a[1],s=a[2],i=new FH(r*o*s,(function(e){return e.score})),c=0;c<r;++c)for(var u=0;u<o;++u)for(var l=0;l<s;++l){var d=n.get(c,u,l);d<e||DH(l,d,c,u,1,n)&&i.enqueue({score:d,part:{heatmapY:c,heatmapX:u,id:l}})}return i}(s,0,u),m=i*i;h.length<o&&!f.empty();)g=f.dequeue(),y=LH(g.part,r,l),zH(h,m,y,g.part.id)||(b=qH(g,u,l,r,d,p),x=XH(h,m,b),h.push({keypoints:b,score:x}));return[2,h]}}))}))}function QH(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];switch(t.length){case 0:e="fn main() ";break;case 1:e="fn main(".concat(t[0]," : i32)");break;default:throw Error("Unreachable")}return e}var ZH=function(){function e(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=E_(this.outputShape),this.dispatch=N_(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return e.prototype.getUserCode=function(){return"\n        ".concat(QH("index")," {\n          if (index < uniforms.size) {\n            let y = B[index * 2];\n            let x = B[index * 2 + 1];\n            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;\n            result[index] = A[outIndex];\n          }\n        }\n        ")},e}();var $H=function(){function e(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,2!==e.length||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=E_(t),this.dispatch=N_(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return e.prototype.getUserCode=function(){return"\n    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {\n      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;\n      let outIndexX = outIndexY + uniforms.bShape.z;\n      let outY = i32(B[outIndexY]);\n      let outX = i32(B[outIndexX]);\n      return vec2<i32>(outY, outX);\n    }\n\n    ".concat(QH("index")," {\n      if (index < uniforms.size) {\n        let indexY = index * ").concat(this.supportedLastDimension,";\n        let indexX = indexY + 1;\n        let heatmapY = A[indexY];\n        let heatmapX = A[indexX];\n        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);\n        result[indexY] = f32(out[0]);\n        result[indexX] = f32(out[1]);\n      }\n    }\n    ")},e}();function JH(e){var t=e.shape,n=t[0],a=t[1],r=t[2];return Xs((function(){var t,o,s=el(e,[n*a,r]),i=Ou(s,0),c=ud(cc(i,fc(a,"int32")),1),u=ud((t=i,o=a,Xs((function(){var e=cc(t,fc(o,"int32"));return Sc(t,uc(e,fc(o,"int32")))}))),1);return al([c,u],1)}))}function ej(e,t,n){return Xs((function(){var a=function(e,t){for(var n=[],a=0;a<HV.length;a++){var r=tj(e.get(a,0).valueOf(),e.get(a,1).valueOf(),a,t),o=r.x,s=r.y;n.push(s),n.push(o)}return sh(n,[HV.length,2])}(e,n);return sc(ac(uc(e.toTensor(),fc(t,"int32")),"float32"),a)}))}function tj(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+HV.length)}}function nj(e,t,n){return UV(this,void 0,void 0,(function(){var a,r,o,s,i,c,u,l,d,p;return VV(this,(function(h){switch(h.label){case 0:return a=0,r=JH(e),[4,Promise.all([e.buffer(),t.buffer(),r.buffer()])];case 1:return o=h.sent(),s=o[0],i=o[1],c=o[2],[4,(u=ej(c,n,i)).buffer()];case 2:return l=h.sent(),d=Array.from(function(e,t){for(var n=t.shape[0],a=new Float32Array(n),r=0;r<n;r++){var o=t.get(r,0),s=t.get(r,1);a[r]=e.get(o,s,r)}return a}(s,c)),p=d.map((function(e,t){return a+=e,{y:l.get(t,0),x:l.get(t,1),score:e,name:HV[t]}})),r.dispose(),u.dispose(),[2,{keypoints:p,score:a/p.length}]}}))}))}function aj(e,t,n){return UV(this,void 0,void 0,(function(){var a,r,o;return VV(this,(function(s){return a=JH(e),r=function(e,t,n){return Xs((function(){var a=function(e,t){if(Js()instanceof M_)return function(e,t){var n=Js(),a=new $H(e.shape),r=n.runWebGPUProgram(a,[e,t],"float32");return qs().makeTensorFromTensorInfo(r)}(e,t);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}(e,n);return sc(ac(uc(e,fc(t,"int32")),"float32"),a)}))}(a,n,t),o=function(e,t){if(Js()instanceof M_)return function(e,t){var n=Js(),a=new ZH(t.shape),r=n.runWebGPUProgram(a,[e,t],"float32");return qs().makeTensorFromTensorInfo(r)}(e,t);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}(e,a),[2,[r,o]]}))}))}function rj(e,t){return(e-1)%t==0}var oj="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",sj="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function ij(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var cj=function(){function e(e,t){this.posenetModel=e;var n=this.posenetModel.inputs[0].shape;xt(-1===n[1]&&-1===n[2],(function(){return"Input shape [".concat(n[1],", ").concat(n[2],"] ")+"must both be equal to or -1"}));var a,r,o=(a=t.inputResolution,r=t.outputStride,{height:ij(a.height,r),width:ij(a.width,r)});!function(e){xt(NH.indexOf(e)>=0,(function(){return"outputStride of ".concat(e," is invalid. ")+"It must be either 8 or 16."}))}(t.outputStride),function(e,t){xt(rj(e.height,t),(function(){return"height of ".concat(e.height," is invalid for output stride ")+"".concat(t,".")})),xt(rj(e.width,t),(function(){return"width of ".concat(e.width," is invalid for output stride ")+"".concat(t,".")}))}(o,t.outputStride),this.inputResolution=o,this.outputStride=t.outputStride,this.architecture=t.architecture}return e.prototype.estimatePoses=function(e,t){return void 0===t&&(t=EH),UV(this,void 0,void 0,(function(){return VV(this,(function(n){return[2,this.estimatePosesGPU(e,t,!1)]}))}))},e.prototype.estimatePosesGPU=function(e,t,n){return void 0===t&&(t=EH),void 0===n&&(n=!1),UV(this,void 0,void 0,(function(){var a,r,o,s,i,c,u,l,d,p,h,f,m,g,y,b,x,v;return VV(this,(function(w){switch(w.label){case 0:return a=function(e){var t=e;if(null==t.maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1){if((t=WV(WV({},RH),t)).scoreThreshold<0||t.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(t.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(t.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(t.nmsRadius,"."))}return t}(t),null==e?[2,n?[[],[]]:[]]:(this.maxPoses=a.maxPoses,r=yG(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),o=r.imageTensor,s=r.padding,i="ResNet50"===this.architecture?sc(o,AH):gG(o,[-1,1]),c=this.posenetModel.predict(i),"ResNet50"===this.architecture?(u=eh(c[2],[0]),l=eh(c[3],[0]),d=eh(c[0],[0]),p=eh(c[1],[0])):(u=eh(c[0],[0]),l=eh(c[1],[0]),d=eh(c[2],[0]),p=eh(c[3],[0])),h=ol(l),1!==this.maxPoses?[3,5]:n?[4,aj(h,u,this.outputStride)]:[3,2]);case 1:return m=w.sent(),y=m[0],g=m[1],f=[y,g],[3,4];case 2:return[4,nj(h,u,this.outputStride)];case 3:y=w.sent(),f=[y],w.label=4;case 4:return[3,7];case 5:if(n)throw new Error("GPU renderer only supports single pose!");return[4,YH(h,u,d,p,this.outputStride,this.maxPoses,a.scoreThreshold,a.nmsRadius)];case 6:f=w.sent(),w.label=7;case 7:if(n){if(!0===a.flipHorizontal)throw new Error("flipHorizontal is not supported!");b=this.getCanvasInfo(sG(e),this.inputResolution,s)}else v=sG(e),x=function(e,t,n,a){var r=t.height,o=t.width,s=r/(n.height*(1-a.top-a.bottom)),i=o/(n.width*(1-a.left-a.right)),c=-a.top*n.height,u=-a.left*n.width;if(1===i&&1===s&&0===c&&0===u)return e;for(var l=0,d=e;l<d.length;l++)for(var p=0,h=d[l].keypoints;p<h.length;p++){var f=h[p];f.x=(f.x+u)*i,f.y=(f.y+c)*s}return e}(f,v,this.inputResolution,s),a.flipHorizontal&&(x=function(e,t){for(var n=0,a=e;n<a.length;n++)for(var r=0,o=a[n].keypoints;r<o.length;r++){var s=o[r];s.x=t.width-1-s.x}return e}(x,v));return o.dispose(),i.dispose(),Ys(c),u.dispose(),l.dispose(),d.dispose(),p.dispose(),h.dispose(),[2,n?[f,b]:x]}}))}))},e.prototype.getCanvasInfo=function(e,t,n){var a=e.height,r=e.width,o=a/(t.height*(1-n.top-n.bottom)),s=r/(t.width*(1-n.left-n.right)),i=-n.top*t.height;return[-n.left*t.width,i,s,o,e.width,e.height]},e.prototype.dispose=function(){this.posenetModel.dispose()},e.prototype.reset=function(){},e}();function uj(e){return void 0===e&&(e=SH),UV(this,void 0,void 0,(function(){var t,n,a,r,o;return VV(this,(function(s){switch(s.label){case 0:return"ResNet50"!==(t=function(e){var t=e||SH;if(null==t.architecture&&(t.architecture="MobileNetV1"),CH.indexOf(t.architecture)<0)throw new Error("Invalid architecture ".concat(t.architecture,". ")+"Should be one of ".concat(CH));if(null==t.inputResolution&&(t.inputResolution={height:257,width:257}),null==t.outputStride&&(t.outputStride=16),IH[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride ".concat(t.outputStride,". ")+"Should be one of ".concat(IH[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.multiplier&&(t.multiplier=1),_H[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier ".concat(t.multiplier,". ")+"Should be one of ".concat(_H[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.quantBytes&&(t.quantBytes=4),TH.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(t.quantBytes,". ")+"Should be one of ".concat(TH," ")+"for architecture ".concat(t.architecture,"."));if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(e)).architecture?[3,2]:(i=t.outputStride,c=t.quantBytes,u="model-stride".concat(i,".json"),n=4===c?sj+"float/"+u:sj+"quant".concat(c,"/")+u,[4,LV(t.modelUrl||n)]);case 1:return a=s.sent(),[2,new cj(a,t)];case 2:return r=function(e,t,n){var a={1:"100",.75:"075",.5:"050"},r="model-stride".concat(e,".json");return 4===n?oj+"float/".concat(a[t],"/")+r:oj+"quant".concat(n,"/").concat(a[t],"/")+r}(t.outputStride,t.multiplier,t.quantBytes),[4,LV(t.modelUrl||r)];case 3:return o=s.sent(),[2,new cj(o,t)]}var i,c,u}))}))}var lj={SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"};const dj={"640 X 480":{width:640,height:480},"640 X 360":{width:640,height:360},"360 X 270":{width:360,height:270}},pj={camera:{targetFPS:60,sizeOption:"640 X 480"},backend:"",flags:{},modelConfig:{}};sH.PoseNet,sH.MoveNet,sH.BlazePose;function hj(){return/Android/i.test(navigator.userAgent)||/iPhone|iPad|iPod/i.test(navigator.userAgent)}class fj{constructor(){this.video=document.getElementById("video")}static async setup(e){navigator.mediaDevices&&navigator.mediaDevices.getUserMedia||alert("Browser API navigator.mediaDevices.getUserMedia not available");const{targetFPS:t,sizeOption:n}=e,a=dj[n],r={audio:!1,video:{facingMode:"user",width:hj()?dj["360 X 270"].width:a.width,height:hj()?dj["360 X 270"].height:a.height,frameRate:{ideal:t}}},o=await navigator.mediaDevices.getUserMedia(r),s=new fj;s.video.srcObject=o,await new Promise((e=>{s.video.onloadedmetadata=()=>{e(s.video)}})),s.video.play();const i=s.video.videoWidth,c=s.video.videoHeight;s.video.width=i,s.video.height=c;return document.querySelector(".canvas-wrapper").style={width:"".concat(i,"px"),height:"".concat(c,"px")},s}}const mj=["#ffffff","#800000","#469990","#e6194b","#42d4f4","#fabed4","#aaffc3","#9a6324","#000075","#f58231","#4363d8","#ffd8b1","#dcbeff","#808000","#ffe119","#911eb4","#bfef45","#f032e6","#3cb44b","#a9a9a9"];class gj{constructor(e,t){this.ctx=e.getContext("2d"),this.videoWidth=e.width,this.videoHeight=e.height,this.scaleFactor=t,this.flip(this.videoWidth,this.videoHeight)}flip(e,t){this.ctx.translate(e,0),this.ctx.scale(-1,1)}draw(e){const[t,n]=e;this.drawCtx(t),n&&n.length>0&&this.drawResults(n)}drawCtx(e){this.ctx.drawImage(e,0,0,this.videoWidth,this.videoHeight)}clearCtx(){this.ctx.clearRect(0,0,this.videoWidth,this.videoHeight)}drawResults(e){for(const t of e)this.drawResult(t)}drawResult(e){null!=e.keypoints&&this.drawKeypoints(e.keypoints)}drawKeypoints(e){this.ctx.fillStyle="Red",this.ctx.strokeStyle="White",this.ctx.lineWidth=2;for(let t=0;t<e.length;t++)this.drawKeypoint(e[t])}drawKeypoint(e){if((null!=e.score?e.score:1)>=.3){const t=new Path2D;t.arc(e.x*this.scaleFactor,e.y*this.scaleFactor,4,0,2*Math.PI),this.ctx.fill(t),this.ctx.stroke(t)}}drawSkeleton(e,t){const n=pj.modelConfig.enableTracking&&null!=t?mj[t%20]:"White";this.ctx.fillStyle=n,this.ctx.strokeStyle=n,this.ctx.lineWidth=2,pH.getAdjacentPairs(pj.model).forEach((t=>{let[n,a]=t;const r=e[n],o=e[a],s=null!=r.score?r.score:1,i=null!=o.score?o.score:1,c=pj.modelConfig.scoreThreshold||0;s>=c&&i>=c&&(this.ctx.beginPath(),this.ctx.moveTo(r.x,r.y),this.ctx.lineTo(o.x,o.y),this.ctx.stroke())}))}}const yj=n.p+"static/media/test.31d6cfe0d16ae931b73c.mp4";let bj,xj,vj,wj;var kj;async function Sj(){await Es.ready(),bj=lj.SINGLEPOSE_LIGHTNING;const e={modelType:bj};xj=await fj.setup(pj.camera),vj=await function(e,t){return UV(this,void 0,void 0,(function(){var n,a;return VV(this,(function(r){switch(e){case sH.PoseNet:return[2,uj(t)];case sH.BlazePose:if(a=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,rH(t)];if("mediapipe"===n.runtime)return[2,oG(t)];a=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(a));case sH.MoveNet:return[2,kH(t)];default:throw new Error("".concat(e," is not a supported model name."))}}))}))}("MoveNet",e);const t=document.getElementById("output"),n=xj.video.width>xj.video.height,a=n?window.innerHeight/xj.video.height:window.innerWidth/xj.video.width;t.width=xj.video.width*a,t.height=xj.video.height*a,t.style.left=n?(window.innerWidth-t.width)/2+"px":"",t.style.top=n?"":(window.innerHeight-t.height)/2+"px",wj=new gj(t,a)}!function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(hU)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"===typeof e)dU=e;else{pU=e;const t=uU.filter((e=>null==pU[e]));if(t.length>0)throw new Error("There were no entries found for the following binaries: "+"".concat(t.join(","),". Please either call setWasmPaths with a ")+"map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.")}fU=t}("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@".concat("4.20.0","/dist/")),kj="webgl",Es.setBackend(kj);const Cj=async e=>{},Ij=()=>{const[e,t]=(0,_.useState)(!1);return(0,_.useEffect)((()=>{Sj().then((()=>{!async function(e){e(!0)}(t),(async()=>{const e=document.createElement("video");e.src=window.location.origin+yj,e.crossOrigin="anonymous";const t=document.createElement("canvas"),n=t.getContext("2d");let a=Array.from({length:17},(()=>[]));const r=new Promise((r=>{e.addEventListener("loadeddata",(()=>{t.width=e.videoWidth,t.height=e.videoHeight;const o=e.duration;let s=0;(async()=>{for(;s<o;){e.currentTime=s,await new Promise((t=>e.addEventListener("seeked",t,{once:!0}))),n.drawImage(e,0,0,t.width,t.height);let r=await vj.estimatePoses(t,{flipHorizontal:!1});if(r.length>0){let e=r[0].keypoints;for(let t=0;t<17;t++)a[t].push([e[t].x,e[t].y,e[t].score])}s+=.1,console.log(s/o*100)}r()})()}))}));await r,console.log(a)})()}))}),[]),(0,at.jsxs)(at.Fragment,{children:[(0,at.jsx)("div",{id:"main",children:(0,at.jsx)("div",{className:"container",children:(0,at.jsxs)("div",{className:"canvas-wrapper",children:[(0,at.jsx)("canvas",{id:"output",style:{position:"fixed"},children:" "}),(0,at.jsx)("video",{id:"video",playsInline:!0,style:{WebkitTransform:"scaleX(-1)",transform:"scaleX(-1)",visibility:"hidden",width:"auto",height:"auto"}})]})})}),e&&(0,at.jsx)(at.Fragment,{children:(0,at.jsx)("div",{id:"upload_panel",children:(0,at.jsx)("input",{type:"file",accept:".mp4",onChange:Cj})})})]})};function Nj(){return(0,at.jsx)(Ze,{children:(0,at.jsxs)(je,{children:[(0,at.jsx)(Ge,{path:"dance-teacher",element:(0,at.jsxs)(at.Fragment,{children:[(0,at.jsx)(rt,{}),(0,at.jsx)(ut,{})]})}),(0,at.jsx)(Ge,{path:"dance-teacher/investors",element:(0,at.jsx)(lt,{})}),(0,at.jsx)(Ge,{path:"dance-teacher/learn",element:(0,at.jsx)(Ij,{})}),(0,at.jsx)(Ge,{path:"*",element:(0,at.jsx)(dt,{})})]})})}E.createRoot(document.getElementById("root")).render((0,at.jsx)(Nj,{})),R()})()})();
//# sourceMappingURL=main.2451936b.js.map